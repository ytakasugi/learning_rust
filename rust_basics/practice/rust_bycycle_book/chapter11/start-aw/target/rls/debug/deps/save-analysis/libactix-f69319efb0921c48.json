{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9","program":"/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","actix","/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"resolver\"","--cfg","feature=\"signal\"","--cfg","feature=\"tokio-signal\"","--cfg","feature=\"trust-dns-proto\"","--cfg","feature=\"trust-dns-resolver\"","-C","metadata=f69319efb0921c48","-C","extra-filename=-f69319efb0921c48","--out-dir","/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps","-L","dependency=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps","--extern","actix_derive=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/libactix_derive-5bdf17f243267239.so","--extern","bitflags=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/libbitflags-9633f6440ece0104.rmeta","--extern","bytes=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/libbytes-e7b9f239e0b960d7.rmeta","--extern","crossbeam_channel=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/libcrossbeam_channel-f1a138a61b30dd30.rmeta","--extern","failure=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/libfailure-ab3c95c9b3a5c2a4.rmeta","--extern","fnv=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/libfnv-3fc401c31df742da.rmeta","--extern","futures=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/libfutures-e0ccd5d58a6e4a70.rmeta","--extern","libc=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/liblibc-6d228fcbe7f51ac6.rmeta","--extern","log=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/liblog-3841cdc37f13040f.rmeta","--extern","parking_lot=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/libparking_lot-1bdd8aa70cd1ab7f.rmeta","--extern","smallvec=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/libsmallvec-ba94a1fc4d47522f.rmeta","--extern","tokio=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/libtokio-becc88d7914c6819.rmeta","--extern","tokio_codec=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/libtokio_codec-b2b7c3437da9cae8.rmeta","--extern","tokio_executor=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/libtokio_executor-f250ffb66942efad.rmeta","--extern","tokio_io=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/libtokio_io-0fd43bdefd722cd3.rmeta","--extern","tokio_reactor=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/libtokio_reactor-57da125c0c8fc38e.rmeta","--extern","tokio_signal=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/libtokio_signal-4ab49391158ebbdc.rmeta","--extern","tokio_tcp=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/libtokio_tcp-ce41bf3f86c17ea0.rmeta","--extern","tokio_timer=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/libtokio_timer-df94de5ca87fae25.rmeta","--extern","trust_dns_proto=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/libtrust_dns_proto-d4340fcd3a514265.rmeta","--extern","trust_dns_resolver=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/libtrust_dns_resolver-9be52b6fc4345689.rmeta","--extern","uuid=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/libuuid-3f8725e50f583a76.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/libactix-f69319efb0921c48.rmeta"},"prelude":{"crate_id":{"name":"actix","disambiguator":[12588260910435349707,2052633320140916211]},"crate_root":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src","external_crates":[{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12933703438800314702,5774803219644544316]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4051320655186846034,14773827427477085591]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3672675044024306215,7179779047398453100]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14739525726177289408,3061276640434149652]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2246841610299105657,12905561680815043912]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4036557704906104068,994131407893854156]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7443407023664770875,11250036483448109314]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[10148669557414888454,6400214184476534778]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4006540472161665961,15205760237192158299]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16043199729901662453,7825522302763349882]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[5738570549504868290,14845130516100231771]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[6807687926185025542,9498922200428406688]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6171827839412267364,4338689175470013405]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":18,"id":{"name":"log","disambiguator":[1710216410033819336,4789044085084690477]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":19,"id":{"name":"cfg_if","disambiguator":[11748229077813686416,18120593503603249335]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":20,"id":{"name":"bytes","disambiguator":[15896045140038465418,4482455051450878993]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":21,"id":{"name":"byteorder","disambiguator":[10836038553012167767,15297481873074233491]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":22,"id":{"name":"iovec","disambiguator":[12958109304097380605,5187975435054751958]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":23,"id":{"name":"libc","disambiguator":[9849704674495894568,2588148581706726478]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":24,"id":{"name":"crossbeam_channel","disambiguator":[4433534250728049338,17217411664794111189]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":25,"id":{"name":"crossbeam_utils","disambiguator":[13321978974123966119,210055754290813058]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":26,"id":{"name":"cfg_if","disambiguator":[10021299859095236603,9970654228449935443]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":27,"id":{"name":"lazy_static","disambiguator":[4038955093903438243,10998562936998939215]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":28,"id":{"name":"fnv","disambiguator":[9172684908765800839,8802146823232208045]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":29,"id":{"name":"parking_lot","disambiguator":[16811782554066042861,2609589353052703474]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":30,"id":{"name":"lock_api","disambiguator":[14426188201312682987,16107631521836560693]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":31,"id":{"name":"scopeguard","disambiguator":[10466149439356409966,1841649414219574799]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":32,"id":{"name":"owning_ref","disambiguator":[5208252690901990398,16041516644950240441]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":33,"id":{"name":"stable_deref_trait","disambiguator":[2850094935240255700,9357797742705823043]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":34,"id":{"name":"parking_lot_core","disambiguator":[6241157217721162446,3074887994565083071]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":35,"id":{"name":"rand","disambiguator":[17721868731490882155,1313758978880593246]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":36,"id":{"name":"rand_jitter","disambiguator":[1102156627884331117,1826205023677028881]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":37,"id":{"name":"rand_core","disambiguator":[3536941681022878631,2948173984437957771]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":38,"id":{"name":"rand_os","disambiguator":[8060358546450799486,7232075442591269522]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":39,"id":{"name":"rand_isaac","disambiguator":[18313996785854319723,12165171948909693502]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":40,"id":{"name":"rand_core","disambiguator":[3243845491313667216,1195655994154243412]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":41,"id":{"name":"rand_chacha","disambiguator":[2542749049662107628,10336064225064168942]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":42,"id":{"name":"rand_hc","disambiguator":[13689314331574973562,7387424735473549503]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":43,"id":{"name":"rand_pcg","disambiguator":[18226604487133403790,8002598138015069623]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":44,"id":{"name":"rand_xorshift","disambiguator":[11393397486594572930,9349033886579992764]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":45,"id":{"name":"smallvec","disambiguator":[2244386155222600517,7413594205429221302]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":46,"id":{"name":"maybe_uninit","disambiguator":[10922732309434712432,8105429422995239737]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":47,"id":{"name":"uuid","disambiguator":[4006178606545510793,18231540294210975587]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":48,"id":{"name":"bitflags","disambiguator":[1486220796094162926,11566124556688293180]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":49,"id":{"name":"futures","disambiguator":[2098182083268404567,641404974437566644]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":50,"id":{"name":"tokio","disambiguator":[8290363491305366819,2711117532672309902]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":51,"id":{"name":"mio","disambiguator":[15359101846064721673,141533733739603804]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":52,"id":{"name":"net2","disambiguator":[4831469605717833533,8965244015321704222]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":53,"id":{"name":"slab","disambiguator":[16023732294111738227,17478511826917110495]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":54,"id":{"name":"num_cpus","disambiguator":[2000205706749185021,3609208143621622538]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":55,"id":{"name":"tokio_codec","disambiguator":[15063602433645028581,14989895028000870814]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":56,"id":{"name":"tokio_io","disambiguator":[15146928245144143430,11342531559079192506]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":57,"id":{"name":"tokio_current_thread","disambiguator":[7031665865804082477,8784299559061690303]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":58,"id":{"name":"tokio_executor","disambiguator":[5679810944148653156,7626759288483174996]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":59,"id":{"name":"crossbeam_utils","disambiguator":[6912375667146935434,6982537788304375859]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":60,"id":{"name":"tokio_fs","disambiguator":[6377245716179889409,2044520869069931011]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":61,"id":{"name":"tokio_threadpool","disambiguator":[12300010771592457470,18089520732757263173]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":62,"id":{"name":"crossbeam_deque","disambiguator":[13950885629180718233,2767624891240826161]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":63,"id":{"name":"crossbeam_epoch","disambiguator":[3990079519369456446,10142804041682732295]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":64,"id":{"name":"memoffset","disambiguator":[16543320715709423016,223927104018102919]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":65,"id":{"name":"scopeguard","disambiguator":[6745301356711570827,8805850024978740077]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":66,"id":{"name":"crossbeam_queue","disambiguator":[1081472929651782813,2730032712690467996]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":67,"id":{"name":"tokio_reactor","disambiguator":[10357787486042471017,6049410225073543128]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":68,"id":{"name":"parking_lot","disambiguator":[15767629524250457290,17041373561250186936]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":69,"id":{"name":"lock_api","disambiguator":[1851465618653185922,9424210982215868311]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":70,"id":{"name":"parking_lot_core","disambiguator":[15328142715350525794,10141431497463335208]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":71,"id":{"name":"tokio_sync","disambiguator":[12281063272580078758,10410597856158661334]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":72,"id":{"name":"tokio_tcp","disambiguator":[5345270145917888795,13979832173635278441]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":73,"id":{"name":"tokio_timer","disambiguator":[13127933334163509022,8753774255507859260]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":74,"id":{"name":"tokio_udp","disambiguator":[7952173036781516526,11219192180536088179]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":75,"id":{"name":"tokio_uds","disambiguator":[5255875657476952451,9923823674145894391]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":76,"id":{"name":"mio_uds","disambiguator":[13372790811943115461,5778243005372834999]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":77,"id":{"name":"failure","disambiguator":[6711466448919380388,17777278718455622729]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":78,"id":{"name":"failure_derive","disambiguator":[2141804871249964885,14598696574753996050]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":79,"id":{"name":"backtrace","disambiguator":[3187515827842655893,15148477478425320096]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":80,"id":{"name":"rustc_demangle","disambiguator":[255582366263299768,3606984573227064702]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":81,"id":{"name":"addr2line","disambiguator":[13179013064549937275,4522599632718693230]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":82,"id":{"name":"gimli","disambiguator":[6269171323339485423,8607067438569868048]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":83,"id":{"name":"object","disambiguator":[6940909019048410244,13242167454319359684]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":84,"id":{"name":"miniz_oxide","disambiguator":[18262343450495648065,5536561149793384440]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":85,"id":{"name":"adler","disambiguator":[159802053453029657,12486606382973290645]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","num":86,"id":{"name":"actix_derive","disambiguator":[6886052518129136077,3630964748769530083]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","num":87,"id":{"name":"trust_dns_resolver","disambiguator":[9370688852691567435,16685098658471002841]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","num":88,"id":{"name":"lru_cache","disambiguator":[15520028056593338917,3519602993516513477]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","num":89,"id":{"name":"linked_hash_map","disambiguator":[2735658411309169296,14874084005360726569]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","num":90,"id":{"name":"resolv_conf","disambiguator":[11477958766668146907,4567085131225169326]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","num":91,"id":{"name":"quick_error","disambiguator":[4126919217264879755,8704921315255291690]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","num":92,"id":{"name":"hostname","disambiguator":[12396185714141005713,5087037092994386314]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","num":93,"id":{"name":"match_cfg","disambiguator":[18441624909204541031,17825730120167091506]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","num":94,"id":{"name":"trust_dns_proto","disambiguator":[10501252155111401186,15816484989384522522]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","num":95,"id":{"name":"idna","disambiguator":[13945891677836492641,21401253277660166]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","num":96,"id":{"name":"matches","disambiguator":[2131948317901430821,18152552964100178207]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","num":97,"id":{"name":"unicode_bidi","disambiguator":[13920420143943572718,5984963551904513718]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","num":98,"id":{"name":"unicode_normalization","disambiguator":[17307544947644365742,1027647072509384242]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","num":99,"id":{"name":"tinyvec","disambiguator":[13982579378533469845,12987663850296943574]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","num":100,"id":{"name":"tinyvec_macros","disambiguator":[6971095827479815106,2369805349969581398]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","num":101,"id":{"name":"rand","disambiguator":[15858323671647550331,3496499604697861937]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","num":102,"id":{"name":"socket2","disambiguator":[9105135583098829876,9042403268515692694]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","num":103,"id":{"name":"url","disambiguator":[9444805368101914182,12391127132595707650]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","num":104,"id":{"name":"percent_encoding","disambiguator":[2933576377667906116,1603241694147546430]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","num":105,"id":{"name":"encoding","disambiguator":[15323340975388937023,6106773977774302371]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","num":106,"id":{"name":"encoding_index_singlebyte","disambiguator":[4096849169673466036,13695691395769563510]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","num":107,"id":{"name":"encoding_index_korean","disambiguator":[6629148950599351605,10160916537376724830]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","num":108,"id":{"name":"encoding_index_japanese","disambiguator":[4262133805143565620,5504784999079619068]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","num":109,"id":{"name":"encoding_index_simpchinese","disambiguator":[18226483647125531370,3896548155194580277]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","num":110,"id":{"name":"encoding_index_tradchinese","disambiguator":[12980095938169990040,3867322678014953437]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","num":111,"id":{"name":"tokio_signal","disambiguator":[8643114855435649674,11262644847087911201]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","num":112,"id":{"name":"signal_hook_registry","disambiguator":[12720937454264872554,11381338614648747521]}}],"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":0,"byte_end":6779,"line_start":1,"line_end":236,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2427,"byte_end":2428,"line_start":74,"line_end":74,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":73,"index":16},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/clock.rs","byte_start":155784,"byte_end":155787,"line_start":11,"line_end":11,"column_start":30,"column_end":33},"alias_span":null,"name":"now","value":"","parent":{"krate":0,"index":1365}},{"kind":"Use","ref_id":{"krate":73,"index":649},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/clock.rs","byte_start":155789,"byte_end":155794,"line_start":11,"line_end":11,"column_start":35,"column_end":40},"alias_span":null,"name":"Clock","value":"","parent":{"krate":0,"index":1365}},{"kind":"Use","ref_id":{"krate":73,"index":39},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/clock.rs","byte_start":155796,"byte_end":155799,"line_start":11,"line_end":11,"column_start":42,"column_end":45},"alias_span":null,"name":"Now","value":"","parent":{"krate":0,"index":1365}},{"kind":"Use","ref_id":{"krate":0,"index":2768},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":156229,"byte_end":156236,"line_start":25,"line_end":25,"column_start":25,"column_end":32},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2796},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":156260,"byte_end":156266,"line_start":26,"line_end":26,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2809},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":156292,"byte_end":156299,"line_start":27,"line_end":27,"column_start":25,"column_end":32},"alias_span":null,"name":"FromErr","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2818},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":156325,"byte_end":156331,"line_start":28,"line_end":28,"column_start":25,"column_end":31},"alias_span":null,"name":"Finish","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":1451},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":156333,"byte_end":156345,"line_start":28,"line_end":28,"column_start":33,"column_end":45},"alias_span":null,"name":"FinishStream","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2825},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":156367,"byte_end":156370,"line_start":29,"line_end":29,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":1498},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":156396,"byte_end":156403,"line_start":30,"line_end":30,"column_start":25,"column_end":32},"alias_span":null,"name":"DropErr","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2834},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":156405,"byte_end":156411,"line_start":30,"line_end":30,"column_start":34,"column_end":40},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":1525},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":156437,"byte_end":156440,"line_start":31,"line_end":31,"column_start":24,"column_end":27},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":1521},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":156442,"byte_end":156444,"line_start":31,"line_end":31,"column_start":29,"column_end":31},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":1517},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":156446,"byte_end":156452,"line_start":31,"line_end":31,"column_start":33,"column_end":39},"alias_span":null,"name":"result","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2843},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":156454,"byte_end":156466,"line_start":31,"line_end":31,"column_start":41,"column_end":53},"alias_span":null,"name":"FutureResult","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2854},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":156500,"byte_end":156513,"line_start":32,"line_end":32,"column_start":32,"column_end":45},"alias_span":null,"name":"StreamAndThen","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2866},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":156544,"byte_end":156556,"line_start":33,"line_end":33,"column_start":30,"column_end":42},"alias_span":null,"name":"StreamFinish","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2873},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":156585,"byte_end":156595,"line_start":34,"line_end":34,"column_start":28,"column_end":38},"alias_span":null,"name":"StreamFold","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2902},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":156623,"byte_end":156632,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"alias_span":null,"name":"StreamMap","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2911},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":156664,"byte_end":156676,"line_start":36,"line_end":36,"column_start":31,"column_end":43},"alias_span":null,"name":"StreamMapErr","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2920},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":156705,"byte_end":156715,"line_start":37,"line_end":37,"column_start":28,"column_end":38},"alias_span":null,"name":"StreamThen","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2932},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":156747,"byte_end":156760,"line_start":38,"line_end":38,"column_start":31,"column_end":44},"alias_span":null,"name":"StreamTimeout","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2941},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":156782,"byte_end":156786,"line_start":39,"line_end":39,"column_start":21,"column_end":25},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2951},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":156811,"byte_end":156818,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":42},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2718,"byte_end":2723,"line_start":98,"line_end":98,"column_start":17,"column_end":22},"alias_span":null,"name":"Actor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":56},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2725,"byte_end":2737,"line_start":98,"line_end":98,"column_start":24,"column_end":36},"alias_span":null,"name":"ActorContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2351},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2739,"byte_end":2749,"line_start":98,"line_end":98,"column_start":38,"column_end":48},"alias_span":null,"name":"ActorState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":60},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2751,"byte_end":2763,"line_start":98,"line_end":98,"column_start":50,"column_end":62},"alias_span":null,"name":"AsyncContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2368},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2765,"byte_end":2772,"line_start":98,"line_end":98,"column_start":64,"column_end":71},"alias_span":null,"name":"Running","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2381},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2774,"byte_end":2785,"line_start":98,"line_end":98,"column_start":73,"column_end":84},"alias_span":null,"name":"SpawnHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":51},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2787,"byte_end":2797,"line_start":98,"line_end":98,"column_start":86,"column_end":96},"alias_span":null,"name":"Supervised","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2679},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2818,"byte_end":2822,"line_start":99,"line_end":99,"column_start":19,"column_end":23},"alias_span":null,"name":"Addr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2666},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2824,"byte_end":2836,"line_start":99,"line_end":99,"column_start":25,"column_end":37},"alias_span":null,"name":"MailboxError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1110},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2838,"byte_end":2847,"line_start":99,"line_end":99,"column_start":39,"column_end":48},"alias_span":null,"name":"Recipient","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2419},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2867,"byte_end":2874,"line_start":100,"line_end":100,"column_start":18,"column_end":25},"alias_span":null,"name":"Arbiter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":209},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2893,"byte_end":2900,"line_start":101,"line_end":101,"column_start":18,"column_end":25},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1739},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2916,"byte_end":2927,"line_start":102,"line_end":102,"column_start":15,"column_end":26},"alias_span":null,"name":"ActorFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1760},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2929,"byte_end":2940,"line_start":102,"line_end":102,"column_start":28,"column_end":39},"alias_span":null,"name":"ActorStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1451},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2942,"byte_end":2954,"line_start":102,"line_end":102,"column_start":41,"column_end":53},"alias_span":null,"name":"FinishStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1802},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2956,"byte_end":2966,"line_start":102,"line_end":102,"column_start":55,"column_end":65},"alias_span":null,"name":"WrapFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1832},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2968,"byte_end":2978,"line_start":102,"line_end":102,"column_start":67,"column_end":77},"alias_span":null,"name":"WrapStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":547},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3004,"byte_end":3017,"line_start":104,"line_end":104,"column_start":5,"column_end":18},"alias_span":null,"name":"ActorResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":432},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3019,"byte_end":3026,"line_start":104,"line_end":104,"column_start":20,"column_end":27},"alias_span":null,"name":"Handler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":436},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3028,"byte_end":3035,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":438},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3037,"byte_end":3050,"line_start":104,"line_end":104,"column_start":38,"column_end":51},"alias_span":null,"name":"MessageResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":439},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3037,"byte_end":3050,"line_start":104,"line_end":104,"column_start":38,"column_end":51},"alias_span":null,"name":"MessageResult","value":"","parent":{"krate":0,"index":2252}},{"kind":"Use","ref_id":{"krate":0,"index":515},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3052,"byte_end":3060,"line_start":104,"line_end":104,"column_start":53,"column_end":61},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":442},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3062,"byte_end":3079,"line_start":104,"line_end":104,"column_start":63,"column_end":80},"alias_span":null,"name":"ResponseActFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":446},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3081,"byte_end":3095,"line_start":104,"line_end":104,"column_start":82,"column_end":96},"alias_span":null,"name":"ResponseFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2044},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3119,"byte_end":3133,"line_start":106,"line_end":106,"column_start":20,"column_end":34},"alias_span":null,"name":"ArbiterService","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3050},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3135,"byte_end":3143,"line_start":106,"line_end":106,"column_start":36,"column_end":44},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3054},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3145,"byte_end":3159,"line_start":106,"line_end":106,"column_start":46,"column_end":60},"alias_span":null,"name":"SystemRegistry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2059},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3161,"byte_end":3174,"line_start":106,"line_end":106,"column_start":62,"column_end":75},"alias_span":null,"name":"SystemService","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":587},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3193,"byte_end":3206,"line_start":107,"line_end":107,"column_start":17,"column_end":30},"alias_span":null,"name":"StreamHandler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2606},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3228,"byte_end":3238,"line_start":108,"line_end":108,"column_start":21,"column_end":31},"alias_span":null,"name":"Supervisor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2105},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3255,"byte_end":3266,"line_start":109,"line_end":109,"column_start":16,"column_end":27},"alias_span":null,"name":"SyncArbiter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2126},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3268,"byte_end":3279,"line_start":109,"line_end":109,"column_start":29,"column_end":40},"alias_span":null,"name":"SyncContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2612},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3299,"byte_end":3305,"line_start":110,"line_end":110,"column_start":18,"column_end":24},"alias_span":null,"name":"System","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2624},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3307,"byte_end":3319,"line_start":110,"line_end":110,"column_start":26,"column_end":38},"alias_span":null,"name":"SystemRunner","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":241},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3355,"byte_end":3375,"line_start":113,"line_end":113,"column_start":18,"column_end":38},"alias_span":null,"name":"ContextFutureSpawner","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3731,"byte_end":3732,"line_start":127,"line_end":127,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":42},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3764,"byte_end":3769,"line_start":130,"line_end":130,"column_start":9,"column_end":14},"alias_span":null,"name":"Actor","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":56},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3771,"byte_end":3783,"line_start":130,"line_end":130,"column_start":16,"column_end":28},"alias_span":null,"name":"ActorContext","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":2351},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3785,"byte_end":3795,"line_start":130,"line_end":130,"column_start":30,"column_end":40},"alias_span":null,"name":"ActorState","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":60},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3797,"byte_end":3809,"line_start":130,"line_end":130,"column_start":42,"column_end":54},"alias_span":null,"name":"AsyncContext","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":2368},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3811,"byte_end":3818,"line_start":130,"line_end":130,"column_start":56,"column_end":63},"alias_span":null,"name":"Running","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":2381},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3820,"byte_end":3831,"line_start":130,"line_end":130,"column_start":65,"column_end":76},"alias_span":null,"name":"SpawnHandle","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":51},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3833,"byte_end":3843,"line_start":130,"line_end":130,"column_start":78,"column_end":88},"alias_span":null,"name":"Supervised","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":2679},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3874,"byte_end":3878,"line_start":132,"line_end":132,"column_start":23,"column_end":27},"alias_span":null,"name":"Addr","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":2666},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3880,"byte_end":3892,"line_start":132,"line_end":132,"column_start":29,"column_end":41},"alias_span":null,"name":"MailboxError","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":1110},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3894,"byte_end":3903,"line_start":132,"line_end":132,"column_start":43,"column_end":52},"alias_span":null,"name":"Recipient","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":1001},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3905,"byte_end":3921,"line_start":132,"line_end":132,"column_start":54,"column_end":70},"alias_span":null,"name":"RecipientRequest","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":982},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3923,"byte_end":3930,"line_start":132,"line_end":132,"column_start":72,"column_end":79},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":1065},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3932,"byte_end":3941,"line_start":132,"line_end":132,"column_start":81,"column_end":90},"alias_span":null,"name":"SendError","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":2419},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3965,"byte_end":3972,"line_start":133,"line_end":133,"column_start":22,"column_end":29},"alias_span":null,"name":"Arbiter","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":209},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3996,"byte_end":4003,"line_start":134,"line_end":134,"column_start":23,"column_end":30},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":241},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4005,"byte_end":4025,"line_start":134,"line_end":134,"column_start":32,"column_end":52},"alias_span":null,"name":"ContextFutureSpawner","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":1739},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4046,"byte_end":4057,"line_start":135,"line_end":135,"column_start":19,"column_end":30},"alias_span":null,"name":"ActorFuture","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":1760},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4059,"byte_end":4070,"line_start":135,"line_end":135,"column_start":32,"column_end":43},"alias_span":null,"name":"ActorStream","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":1802},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4072,"byte_end":4082,"line_start":135,"line_end":135,"column_start":45,"column_end":55},"alias_span":null,"name":"WrapFuture","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":1832},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4084,"byte_end":4094,"line_start":135,"line_end":135,"column_start":57,"column_end":67},"alias_span":null,"name":"WrapStream","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":547},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4128,"byte_end":4141,"line_start":137,"line_end":137,"column_start":9,"column_end":22},"alias_span":null,"name":"ActorResponse","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":432},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4143,"byte_end":4150,"line_start":137,"line_end":137,"column_start":24,"column_end":31},"alias_span":null,"name":"Handler","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":436},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4152,"byte_end":4159,"line_start":137,"line_end":137,"column_start":33,"column_end":40},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":438},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4161,"byte_end":4174,"line_start":137,"line_end":137,"column_start":42,"column_end":55},"alias_span":null,"name":"MessageResult","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":439},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4161,"byte_end":4174,"line_start":137,"line_end":137,"column_start":42,"column_end":55},"alias_span":null,"name":"MessageResult","value":"","parent":{"krate":0,"index":2300}},{"kind":"Use","ref_id":{"krate":0,"index":515},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4176,"byte_end":4184,"line_start":137,"line_end":137,"column_start":57,"column_end":65},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":442},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4186,"byte_end":4203,"line_start":137,"line_end":137,"column_start":67,"column_end":84},"alias_span":null,"name":"ResponseActFuture","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":446},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4205,"byte_end":4219,"line_start":137,"line_end":137,"column_start":86,"column_end":100},"alias_span":null,"name":"ResponseFuture","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":2044},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4251,"byte_end":4265,"line_start":139,"line_end":139,"column_start":24,"column_end":38},"alias_span":null,"name":"ArbiterService","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":2059},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4267,"byte_end":4280,"line_start":139,"line_end":139,"column_start":40,"column_end":53},"alias_span":null,"name":"SystemService","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":587},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4303,"byte_end":4316,"line_start":140,"line_end":140,"column_start":21,"column_end":34},"alias_span":null,"name":"StreamHandler","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":2606},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4342,"byte_end":4352,"line_start":141,"line_end":141,"column_start":25,"column_end":35},"alias_span":null,"name":"Supervisor","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":2105},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4373,"byte_end":4384,"line_start":142,"line_end":142,"column_start":20,"column_end":31},"alias_span":null,"name":"SyncArbiter","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":2126},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4386,"byte_end":4397,"line_start":142,"line_end":142,"column_start":33,"column_end":44},"alias_span":null,"name":"SyncContext","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":2612},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4420,"byte_end":4426,"line_start":143,"line_end":143,"column_start":21,"column_end":27},"alias_span":null,"name":"System","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":1174},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4441,"byte_end":4447,"line_start":145,"line_end":145,"column_start":13,"column_end":19},"alias_span":null,"name":"actors","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":2322},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4461,"byte_end":4464,"line_start":146,"line_end":146,"column_start":13,"column_end":16},"alias_span":null,"name":"dev","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":1370},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4478,"byte_end":4481,"line_start":147,"line_end":147,"column_start":13,"column_end":16},"alias_span":null,"name":"fut","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":1862},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4495,"byte_end":4497,"line_start":148,"line_end":148,"column_start":13,"column_end":15},"alias_span":null,"name":"io","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":1969},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4511,"byte_end":4515,"line_start":149,"line_end":149,"column_start":13,"column_end":17},"alias_span":null,"name":"msgs","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":2176},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4537,"byte_end":4546,"line_start":150,"line_end":150,"column_start":21,"column_end":30},"alias_span":null,"name":"Condition","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":2207},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4548,"byte_end":4560,"line_start":150,"line_end":150,"column_start":32,"column_end":44},"alias_span":null,"name":"IntervalFunc","value":"","parent":{"krate":0,"index":2270}},{"kind":"Use","ref_id":{"krate":0,"index":2186},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4562,"byte_end":4571,"line_start":150,"line_end":150,"column_start":46,"column_end":55},"alias_span":null,"name":"TimerFunc","value":"","parent":{"krate":0,"index":2270}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4921,"byte_end":4922,"line_start":164,"line_end":164,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":2322}},{"kind":"Use","ref_id":{"krate":0,"index":935},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4947,"byte_end":4955,"line_start":166,"line_end":166,"column_start":23,"column_end":31},"alias_span":null,"name":"Envelope","value":"","parent":{"krate":0,"index":2322}},{"kind":"Use","ref_id":{"krate":0,"index":928},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4957,"byte_end":4970,"line_start":166,"line_end":166,"column_start":33,"column_end":46},"alias_span":null,"name":"EnvelopeProxy","value":"","parent":{"krate":0,"index":2322}},{"kind":"Use","ref_id":{"krate":0,"index":1001},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4972,"byte_end":4988,"line_start":166,"line_end":166,"column_start":48,"column_end":64},"alias_span":null,"name":"RecipientRequest","value":"","parent":{"krate":0,"index":2322}},{"kind":"Use","ref_id":{"krate":0,"index":982},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4990,"byte_end":4997,"line_start":166,"line_end":166,"column_start":66,"column_end":73},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":2322}},{"kind":"Use","ref_id":{"krate":0,"index":924},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4999,"byte_end":5009,"line_start":166,"line_end":166,"column_start":75,"column_end":85},"alias_span":null,"name":"ToEnvelope","value":"","parent":{"krate":0,"index":2322}},{"kind":"Use","ref_id":{"krate":0,"index":840},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5069,"byte_end":5076,"line_start":168,"line_end":168,"column_start":36,"column_end":43},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":2330}},{"kind":"Use","ref_id":{"krate":0,"index":814},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5078,"byte_end":5093,"line_start":168,"line_end":168,"column_start":45,"column_end":60},"alias_span":null,"name":"AddressReceiver","value":"","parent":{"krate":0,"index":2330}},{"kind":"Use","ref_id":{"krate":0,"index":805},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5095,"byte_end":5108,"line_start":168,"line_end":168,"column_start":62,"column_end":75},"alias_span":null,"name":"AddressSender","value":"","parent":{"krate":0,"index":2330}},{"kind":"Use","ref_id":{"krate":0,"index":273},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5143,"byte_end":5160,"line_start":170,"line_end":170,"column_start":27,"column_end":44},"alias_span":null,"name":"AsyncContextParts","value":"","parent":{"krate":0,"index":2322}},{"kind":"Use","ref_id":{"krate":0,"index":307},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5162,"byte_end":5172,"line_start":170,"line_end":170,"column_start":46,"column_end":56},"alias_span":null,"name":"ContextFut","value":"","parent":{"krate":0,"index":2322}},{"kind":"Use","ref_id":{"krate":0,"index":276},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5174,"byte_end":5186,"line_start":170,"line_end":170,"column_start":58,"column_end":70},"alias_span":null,"name":"ContextParts","value":"","parent":{"krate":0,"index":2322}},{"kind":"Use","ref_id":{"krate":0,"index":453},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5211,"byte_end":5226,"line_start":171,"line_end":171,"column_start":23,"column_end":38},"alias_span":null,"name":"MessageResponse","value":"","parent":{"krate":0,"index":2322}},{"kind":"Use","ref_id":{"krate":0,"index":449},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5228,"byte_end":5243,"line_start":171,"line_end":171,"column_start":40,"column_end":55},"alias_span":null,"name":"ResponseChannel","value":"","parent":{"krate":0,"index":2322}},{"kind":"Use","ref_id":{"krate":0,"index":1151},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5267,"byte_end":5274,"line_start":172,"line_end":172,"column_start":22,"column_end":29},"alias_span":null,"name":"Mailbox","value":"","parent":{"krate":0,"index":2322}},{"kind":"Use","ref_id":{"krate":0,"index":3050},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5299,"byte_end":5307,"line_start":173,"line_end":173,"column_start":24,"column_end":32},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":2322}},{"kind":"Use","ref_id":{"krate":0,"index":3054},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5309,"byte_end":5323,"line_start":173,"line_end":173,"column_start":34,"column_end":48},"alias_span":null,"name":"SystemRegistry","value":"","parent":{"krate":0,"index":2322}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":0,"byte_end":6779,"line_start":1,"line_end":236,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":86},{"krate":0,"index":191},{"krate":0,"index":250},{"krate":0,"index":337},{"krate":0,"index":419},{"krate":0,"index":573},{"krate":0,"index":621},{"krate":0,"index":650},{"krate":0,"index":755},{"krate":0,"index":1135},{"krate":0,"index":1174},{"krate":0,"index":1365},{"krate":0,"index":1370},{"krate":0,"index":1862},{"krate":0,"index":1969},{"krate":0,"index":2023},{"krate":0,"index":2075},{"krate":0,"index":2160},{"krate":0,"index":2228},{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2247},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2250},{"krate":0,"index":2251},{"krate":0,"index":2252},{"krate":0,"index":3973},{"krate":0,"index":2253},{"krate":0,"index":2254},{"krate":0,"index":2255},{"krate":0,"index":2256},{"krate":0,"index":2257},{"krate":0,"index":2258},{"krate":0,"index":2259},{"krate":0,"index":2260},{"krate":0,"index":2261},{"krate":0,"index":2262},{"krate":0,"index":2263},{"krate":0,"index":2264},{"krate":0,"index":2265},{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2268},{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2322},{"krate":0,"index":2346},{"krate":0,"index":2349}],"decl_id":null,"docs":" # Actix is a rust actors framework.","sig":null,"attributes":[{"value":"/ # Actix is a rust actors framework.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":0,"byte_end":39,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":40,"byte_end":43,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [Actors](https://actix.github.io/actix/actix/trait.Actor.html) are objects","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":44,"byte_end":122,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ which encapsulate state and behavior, they communicate exclusively","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":123,"byte_end":193,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ by exchanging messages. Actix actors are implemented on top of [Tokio](https://tokio.rs).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":194,"byte_end":287,"line_start":5,"line_end":5,"column_start":1,"column_end":94}},{"value":"/ Multiple actors could run in same thread. Actors could run in multiple","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":288,"byte_end":362,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ threads with support of [`Arbiter`](https://actix.github.io/actix/actix/struct.Arbiter.html).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":363,"byte_end":460,"line_start":7,"line_end":7,"column_start":1,"column_end":98}},{"value":"/ Actors exchange typed messages.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":461,"byte_end":496,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":497,"byte_end":500,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ## Documentation","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":501,"byte_end":521,"line_start":10,"line_end":10,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":522,"byte_end":525,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ * [User Guide](https://actix.rs/book/actix/)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":526,"byte_end":574,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/ * [Chat on gitter](https://gitter.im/actix/actix)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":575,"byte_end":628,"line_start":13,"line_end":13,"column_start":1,"column_end":54}},{"value":"/ * [GitHub repository](https://github.com/actix/actix)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":629,"byte_end":686,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/ * [Cargo package](https://crates.io/crates/actix)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":687,"byte_end":740,"line_start":15,"line_end":15,"column_start":1,"column_end":54}},{"value":"/ * Minimum supported Rust version: 1.26 or later","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":741,"byte_end":792,"line_start":16,"line_end":16,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":793,"byte_end":796,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ## Features","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":797,"byte_end":812,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":813,"byte_end":816,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Async/Sync actors.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":817,"byte_end":841,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"/ * Actor communication in a local/thread context.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":842,"byte_end":894,"line_start":21,"line_end":21,"column_start":1,"column_end":53}},{"value":"/ * Using Futures for asynchronous message handling.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":895,"byte_end":949,"line_start":22,"line_end":22,"column_start":1,"column_end":55}},{"value":"/ * HTTP1/HTTP2 support ([actix-web](https://github.com/actix/actix-web))","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":950,"byte_end":1025,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/ * Actor supervision.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":1026,"byte_end":1050,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/ * Typed messages (No `Any` type). Generic messages are allowed.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":1051,"byte_end":1118,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":1119,"byte_end":1122,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## Package feature","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":1123,"byte_end":1145,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":1146,"byte_end":1149,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ * `resolver` - enables dns resolver actor, `actix::actors::resolver`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":1150,"byte_end":1222,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ * `signal` - enables signals handling actor","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":1223,"byte_end":1270,"line_start":30,"line_end":30,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":1271,"byte_end":1274,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Tokio runtime","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":1275,"byte_end":1295,"line_start":32,"line_end":32,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":1296,"byte_end":1299,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ At the moment actix uses","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":1300,"byte_end":1328,"line_start":34,"line_end":34,"column_start":1,"column_end":29}},{"value":"/ [`current_thread`](https://docs.rs/tokio/0.1.13/tokio/runtime/current_thread/index.html) runtime.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":1329,"byte_end":1430,"line_start":35,"line_end":35,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":1431,"byte_end":1434,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ While it provides minimum overhead, it has its own limits:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":1435,"byte_end":1497,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":1498,"byte_end":1501,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ - You cannot use tokio's async file I/O, as it relies on blocking calls that are not available","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":1502,"byte_end":1600,"line_start":39,"line_end":39,"column_start":1,"column_end":99}},{"value":"/ in `current_thread`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":1601,"byte_end":1624,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/ - `Stdin`, `Stderr` and `Stdout` from `tokio::io` are the same as file I/O in that regard and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":1625,"byte_end":1722,"line_start":41,"line_end":41,"column_start":1,"column_end":98}},{"value":"/ cannot be used in asynchronous manner in actix.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":1723,"byte_end":1774,"line_start":42,"line_end":42,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":42},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":9248,"byte_end":9253,"line_start":66,"line_end":66,"column_start":11,"column_end":16},"name":"Actor","qualname":"::actor::Actor","value":"Actor: Sized + 'static","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49}],"decl_id":null,"docs":" Actors are objects which encapsulate state and behavior.","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":7093,"byte_end":7119,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/ Actors are objects which encapsulate state and behavior.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":7120,"byte_end":7180,"line_start":14,"line_end":14,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":7181,"byte_end":7184,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Actors run within specific execution context","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":7185,"byte_end":7233,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/ [Context<A>](struct.Context.html).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":7234,"byte_end":7272,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/ Context object is available only during execution. Each actor has separate","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":7273,"byte_end":7351,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ execution context. Also execution context controls lifecycle of an actor.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":7352,"byte_end":7429,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":7430,"byte_end":7433,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Actors communicate exclusively by exchanging messages. Sender actor can","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":7434,"byte_end":7509,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/ wait for response. Actors are not referenced directly, but by","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":7510,"byte_end":7575,"line_start":22,"line_end":22,"column_start":1,"column_end":66}},{"value":"/ address [`Addr`](struct.Addr.html)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":7576,"byte_end":7614,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ To be able to handle specific message actor has to provide","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":7615,"byte_end":7677,"line_start":24,"line_end":24,"column_start":1,"column_end":63}},{"value":"/ [`Handler<M>`](trait.Handler.html)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":7678,"byte_end":7716,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"/ implementation for this message. All messages are statically typed. Message","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":7717,"byte_end":7796,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ could be handled in asynchronous fashion. Actor can spawn other actors or","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":7797,"byte_end":7874,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ add futures or streams to execution context. Actor trait provides several","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":7875,"byte_end":7952,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ methods that allow to control actor lifecycle.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":7953,"byte_end":8003,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8004,"byte_end":8007,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Actor lifecycle","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8008,"byte_end":8029,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8030,"byte_end":8033,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ## Started","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8034,"byte_end":8048,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8049,"byte_end":8052,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Actor starts in `Started` state, during this state `started` method get","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8053,"byte_end":8128,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ called.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8129,"byte_end":8140,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8141,"byte_end":8144,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ## Running","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8145,"byte_end":8159,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8160,"byte_end":8163,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ After Actor's method `started` get called, actor transitions to `Running`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8164,"byte_end":8241,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ state. Actor can stay in `running` state indefinitely long.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8242,"byte_end":8305,"line_start":41,"line_end":41,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8306,"byte_end":8309,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ## Stopping","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8310,"byte_end":8325,"line_start":43,"line_end":43,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8326,"byte_end":8329,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Actor execution state changes to `stopping` state in following situations,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8330,"byte_end":8408,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8409,"byte_end":8412,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ * `Context::stop` get called by actor itself","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8413,"byte_end":8461,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/ * all addresses to the actor get dropped","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8462,"byte_end":8506,"line_start":48,"line_end":48,"column_start":1,"column_end":45}},{"value":"/ * no evented objects are registered in context.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8507,"byte_end":8558,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8559,"byte_end":8562,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Actor could restore from `stopping` state to `running` state by creating new","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8563,"byte_end":8643,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ address or adding evented object, like future or stream, in","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8644,"byte_end":8707,"line_start":52,"line_end":52,"column_start":1,"column_end":64}},{"value":"/ `Actor::stopping` method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8708,"byte_end":8737,"line_start":53,"line_end":53,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8738,"byte_end":8741,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ If actor changed state to a `stopping` state because of `Context::stop()`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8742,"byte_end":8819,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ get called then context immediately stops processing incoming messages and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8820,"byte_end":8898,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ calls `Actor::stopping()` method. If actor does not restore back to a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8899,"byte_end":8972,"line_start":57,"line_end":57,"column_start":1,"column_end":74}},{"value":"/ `running` state, all unprocessed messages get dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":8973,"byte_end":9031,"line_start":58,"line_end":58,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":9032,"byte_end":9035,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ## Stopped","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":9036,"byte_end":9050,"line_start":60,"line_end":60,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":9051,"byte_end":9054,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ If actor does not modify execution context during stopping state actor","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":9055,"byte_end":9129,"line_start":62,"line_end":62,"column_start":1,"column_end":75}},{"value":"/ state changes to `Stopped`. This state is considered final and at this","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":9130,"byte_end":9204,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/ point actor get dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":9205,"byte_end":9233,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":9234,"byte_end":9237,"line_start":65,"line_end":65,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":43},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":9319,"byte_end":9326,"line_start":68,"line_end":68,"column_start":10,"column_end":17},"name":"Context","qualname":"::actor::Actor::Context","value":"type Context: ActorContext;","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Actor execution context type\n","sig":null,"attributes":[{"value":"/ Actor execution context type","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":9277,"byte_end":9309,"line_start":67,"line_end":67,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":9409,"byte_end":9416,"line_start":71,"line_end":71,"column_start":8,"column_end":15},"name":"started","qualname":"::actor::Actor::started","value":"pub fn started(&mut Self, &mut Self::Context)","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Method is called when actor get polled first time.\n","sig":null,"attributes":[{"value":"/ Method is called when actor get polled first time.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":9347,"byte_end":9401,"line_start":70,"line_end":70,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":9848,"byte_end":9856,"line_start":80,"line_end":80,"column_start":8,"column_end":16},"name":"stopping","qualname":"::actor::Actor::stopping","value":"pub fn stopping(&mut Self, &mut Self::Context) -> Running","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Method is called after an actor is in `Actor::Stopping` state. There\n could be several reasons for stopping. `Context::stop` get called\n by the actor itself. All addresses to current actor get dropped and\n no more evented objects left in the context.","sig":null,"attributes":[{"value":"/ Method is called after an actor is in `Actor::Stopping` state. There","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":9461,"byte_end":9533,"line_start":73,"line_end":73,"column_start":5,"column_end":77}},{"value":"/ could be several reasons for stopping. `Context::stop` get called","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":9538,"byte_end":9607,"line_start":74,"line_end":74,"column_start":5,"column_end":74}},{"value":"/ by the actor itself. All addresses to current actor get dropped and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":9612,"byte_end":9683,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ no more evented objects left in the context.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":9688,"byte_end":9736,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":9741,"byte_end":9744,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Actor could restore from stopping state by returning","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":9749,"byte_end":9805,"line_start":78,"line_end":78,"column_start":5,"column_end":61}},{"value":"/ `Running::Continue` value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":9810,"byte_end":9840,"line_start":79,"line_end":79,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10141,"byte_end":10148,"line_start":87,"line_end":87,"column_start":8,"column_end":15},"name":"stopped","qualname":"::actor::Actor::stopped","value":"pub fn stopped(&mut Self, &mut Self::Context)","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Method is called after an actor is stopped, it can be used to perform\n any needed cleanup work or spawning more actors. This is final state,\n after this call actor get dropped.\n","sig":null,"attributes":[{"value":"/ Method is called after an actor is stopped, it can be used to perform","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":9939,"byte_end":10012,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ any needed cleanup work or spawning more actors. This is final state,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10017,"byte_end":10090,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ after this call actor get dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10095,"byte_end":10133,"line_start":86,"line_end":86,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10716,"byte_end":10721,"line_start":109,"line_end":109,"column_start":8,"column_end":13},"name":"start","qualname":"::actor::Actor::start","value":"pub fn start(Self) -> Addr<Self> where Self: Actor<Context = Context<Self>>","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Start new asynchronous actor, returns address of newly created actor.","sig":null,"attributes":[{"value":"/ Start new asynchronous actor, returns address of newly created actor.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10193,"byte_end":10266,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10271,"byte_end":10274,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10279,"byte_end":10293,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10298,"byte_end":10301,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10306,"byte_end":10317,"line_start":93,"line_end":93,"column_start":5,"column_end":16}},{"value":"/ use actix::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10322,"byte_end":10339,"line_start":94,"line_end":94,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10344,"byte_end":10347,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ struct MyActor;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10352,"byte_end":10371,"line_start":96,"line_end":96,"column_start":5,"column_end":24}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10376,"byte_end":10404,"line_start":97,"line_end":97,"column_start":5,"column_end":33}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10409,"byte_end":10446,"line_start":98,"line_end":98,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10451,"byte_end":10456,"line_start":99,"line_end":99,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10461,"byte_end":10464,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10469,"byte_end":10484,"line_start":101,"line_end":101,"column_start":5,"column_end":20}},{"value":"/     // initialize system","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10489,"byte_end":10517,"line_start":102,"line_end":102,"column_start":5,"column_end":33}},{"value":"/     System::run(|| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10522,"byte_end":10546,"line_start":103,"line_end":103,"column_start":5,"column_end":29}},{"value":"/         let addr = MyActor.start(); // <- start actor and get its address","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10551,"byte_end":10628,"line_start":104,"line_end":104,"column_start":5,"column_end":82}},{"value":"/ #       System::current().stop();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10633,"byte_end":10670,"line_start":105,"line_end":105,"column_start":5,"column_end":42}},{"value":"/     });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10675,"byte_end":10686,"line_start":106,"line_end":106,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10691,"byte_end":10696,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10701,"byte_end":10708,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10929,"byte_end":10942,"line_start":117,"line_end":117,"column_start":8,"column_end":21},"name":"start_default","qualname":"::actor::Actor::start_default","value":"pub fn start_default() -> Addr<Self> where Self: Actor<Context =\nContext<Self>> + Default","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Start new asynchronous actor, returns address of newly created actor.\n","sig":null,"attributes":[{"value":"/ Start new asynchronous actor, returns address of newly created actor.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":10848,"byte_end":10921,"line_start":116,"line_end":116,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11661,"byte_end":11667,"line_start":147,"line_end":147,"column_start":8,"column_end":14},"name":"create","qualname":"::actor::Actor::create","value":"pub fn create<F>(F) -> Addr<Self> where Self: Actor<Context = Context<Self>>,\nF: FnOnce(&mut Context<Self>) -> Self + 'static","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Use `create` method, if you need `Context` object during actor\n initialization.","sig":null,"attributes":[{"value":"/ Use `create` method, if you need `Context` object during actor","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11074,"byte_end":11140,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/ initialization.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11145,"byte_end":11164,"line_start":125,"line_end":125,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11169,"byte_end":11172,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11177,"byte_end":11191,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11196,"byte_end":11199,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11204,"byte_end":11215,"line_start":129,"line_end":129,"column_start":5,"column_end":16}},{"value":"/ use actix::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11220,"byte_end":11237,"line_start":130,"line_end":130,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11242,"byte_end":11245,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ struct MyActor {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11250,"byte_end":11270,"line_start":132,"line_end":132,"column_start":5,"column_end":25}},{"value":"/     val: usize,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11275,"byte_end":11294,"line_start":133,"line_end":133,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11299,"byte_end":11304,"line_start":134,"line_end":134,"column_start":5,"column_end":10}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11309,"byte_end":11337,"line_start":135,"line_end":135,"column_start":5,"column_end":33}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11342,"byte_end":11379,"line_start":136,"line_end":136,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11384,"byte_end":11389,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11394,"byte_end":11397,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11402,"byte_end":11417,"line_start":139,"line_end":139,"column_start":5,"column_end":20}},{"value":"/     // initialize system","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11422,"byte_end":11450,"line_start":140,"line_end":140,"column_start":5,"column_end":33}},{"value":"/     System::run(|| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11455,"byte_end":11479,"line_start":141,"line_end":141,"column_start":5,"column_end":29}},{"value":"/         let addr = MyActor::create(|ctx: &mut Context<MyActor>| MyActor { val: 10 });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11484,"byte_end":11573,"line_start":142,"line_end":142,"column_start":5,"column_end":94}},{"value":"/ #       System::current().stop();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11578,"byte_end":11615,"line_start":143,"line_end":143,"column_start":5,"column_end":42}},{"value":"/     });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11620,"byte_end":11631,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11636,"byte_end":11641,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11646,"byte_end":11653,"line_start":146,"line_end":146,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":51},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12460,"byte_end":12470,"line_start":169,"line_end":169,"column_start":11,"column_end":21},"name":"Supervised","qualname":"::actor::Supervised","value":"Supervised: Actor","parent":null,"children":[{"krate":0,"index":52}],"decl_id":null,"docs":" Actors with ability to restart after failure","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11909,"byte_end":11935,"line_start":158,"line_end":158,"column_start":1,"column_end":27}},{"value":"/ Actors with ability to restart after failure","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11936,"byte_end":11984,"line_start":159,"line_end":159,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11985,"byte_end":11988,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ Supervised actors can be managed by [Supervisor](struct.Supervisor.html).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":11989,"byte_end":12066,"line_start":161,"line_end":161,"column_start":1,"column_end":78}},{"value":"/ Lifecycle events are extended with `restarting` method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12067,"byte_end":12126,"line_start":162,"line_end":162,"column_start":1,"column_end":60}},{"value":"/ If actor fails, supervisor creates new execution context and restarts actor.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12127,"byte_end":12207,"line_start":163,"line_end":163,"column_start":1,"column_end":81}},{"value":"/ `restarting` method is called during restart. After call to this method","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12208,"byte_end":12283,"line_start":164,"line_end":164,"column_start":1,"column_end":76}},{"value":"/ Actor execute state changes to `Started` and normal lifecycle process","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12284,"byte_end":12357,"line_start":165,"line_end":165,"column_start":1,"column_end":74}},{"value":"/ starts.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12358,"byte_end":12369,"line_start":166,"line_end":166,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12370,"byte_end":12373,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ `restarting` method get called with newly constructed `Context` object.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12374,"byte_end":12449,"line_start":168,"line_end":168,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12549,"byte_end":12559,"line_start":171,"line_end":171,"column_start":8,"column_end":18},"name":"restarting","qualname":"::actor::Supervised::restarting","value":"pub fn restarting(&mut Self, &mut <Self as Actor>::Context)","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Method called when supervisor restarting failed actor\n","sig":null,"attributes":[{"value":"/ Method called when supervisor restarting failed actor","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12484,"byte_end":12541,"line_start":170,"line_end":170,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2352},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12732,"byte_end":12739,"line_start":178,"line_end":178,"column_start":5,"column_end":12},"name":"Started","qualname":"::actor::ActorState::Started","value":"ActorState::Started","parent":{"krate":0,"index":2351},"children":[],"decl_id":null,"docs":" Actor is started.\n","sig":null,"attributes":[{"value":"/ Actor is started.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12706,"byte_end":12727,"line_start":177,"line_end":177,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2354},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12771,"byte_end":12778,"line_start":180,"line_end":180,"column_start":5,"column_end":12},"name":"Running","qualname":"::actor::ActorState::Running","value":"ActorState::Running","parent":{"krate":0,"index":2351},"children":[],"decl_id":null,"docs":" Actor is running.\n","sig":null,"attributes":[{"value":"/ Actor is running.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12745,"byte_end":12766,"line_start":179,"line_end":179,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2356},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12811,"byte_end":12819,"line_start":182,"line_end":182,"column_start":5,"column_end":13},"name":"Stopping","qualname":"::actor::ActorState::Stopping","value":"ActorState::Stopping","parent":{"krate":0,"index":2351},"children":[],"decl_id":null,"docs":" Actor is stopping.\n","sig":null,"attributes":[{"value":"/ Actor is stopping.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12784,"byte_end":12806,"line_start":181,"line_end":181,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2358},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12851,"byte_end":12858,"line_start":184,"line_end":184,"column_start":5,"column_end":12},"name":"Stopped","qualname":"::actor::ActorState::Stopped","value":"ActorState::Stopped","parent":{"krate":0,"index":2351},"children":[],"decl_id":null,"docs":" Actor is stopped.\n","sig":null,"attributes":[{"value":"/ Actor is stopped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12825,"byte_end":12846,"line_start":183,"line_end":183,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":2351},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12689,"byte_end":12699,"line_start":176,"line_end":176,"column_start":10,"column_end":20},"name":"ActorState","qualname":"::actor::ActorState","value":"pub enum ActorState {\n\n    /// Actor is started.\n    Started,\n\n    /// Actor is running.\n    Running,\n\n    /// Actor is stopping.\n    Stopping,\n\n    /// Actor is stopped.\n    Stopped,\n}","parent":null,"children":[{"krate":0,"index":2352},{"krate":0,"index":2354},{"krate":0,"index":2356},{"krate":0,"index":2358}],"decl_id":null,"docs":" Actor execution state\n","sig":null,"attributes":[{"value":"/ Actor execution state","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12613,"byte_end":12638,"line_start":174,"line_end":174,"column_start":1,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2369},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12927,"byte_end":12931,"line_start":189,"line_end":189,"column_start":5,"column_end":9},"name":"Stop","qualname":"::actor::Running::Stop","value":"Running::Stop","parent":{"krate":0,"index":2368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2371},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12937,"byte_end":12945,"line_start":190,"line_end":190,"column_start":5,"column_end":13},"name":"Continue","qualname":"::actor::Running::Continue","value":"Running::Continue","parent":{"krate":0,"index":2368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2368},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12913,"byte_end":12920,"line_start":188,"line_end":188,"column_start":10,"column_end":17},"name":"Running","qualname":"::actor::Running","value":"pub enum Running { Stop, Continue, }","parent":null,"children":[{"krate":0,"index":2369},{"krate":0,"index":2371}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":13015,"byte_end":13020,"line_start":195,"line_end":195,"column_start":12,"column_end":17},"name":"alive","qualname":"<ActorState>::alive","value":"pub fn alive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if actor is alive\n","sig":null,"attributes":[{"value":"/ Indicates if actor is alive","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12972,"byte_end":13003,"line_start":194,"line_end":194,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":13171,"byte_end":13179,"line_start":199,"line_end":199,"column_start":12,"column_end":20},"name":"stopping","qualname":"<ActorState>::stopping","value":"pub fn stopping(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if actor is stopped of stopping\n","sig":null,"attributes":[{"value":"/ Indicates if actor is stopped of stopping","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":13114,"byte_end":13159,"line_start":198,"line_end":198,"column_start":5,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":56},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":13506,"byte_end":13518,"line_start":209,"line_end":209,"column_start":11,"column_end":23},"name":"ActorContext","qualname":"::actor::ActorContext","value":"ActorContext: Sized","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"decl_id":null,"docs":" Actor execution context","sig":null,"attributes":[{"value":"/ Actor execution context","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":13273,"byte_end":13300,"line_start":204,"line_end":204,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":13301,"byte_end":13304,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ Each actor runs within specific execution context. `Actor::Context` defines","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":13305,"byte_end":13384,"line_start":206,"line_end":206,"column_start":1,"column_end":80}},{"value":"/ context. Execution context defines type of execution, actor communication","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":13385,"byte_end":13462,"line_start":207,"line_end":207,"column_start":1,"column_end":78}},{"value":"/ channels (message handling).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":13463,"byte_end":13495,"line_start":208,"line_end":208,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":13630,"byte_end":13634,"line_start":212,"line_end":212,"column_start":8,"column_end":12},"name":"stop","qualname":"::actor::ActorContext::stop","value":"pub fn stop(&mut Self)","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Immediately stop processing incoming messages and switch to a\n `stopping` state\n","sig":null,"attributes":[{"value":"/ Immediately stop processing incoming messages and switch to a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":13532,"byte_end":13597,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"/ `stopping` state","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":13602,"byte_end":13622,"line_start":211,"line_end":211,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":13689,"byte_end":13698,"line_start":215,"line_end":215,"column_start":8,"column_end":17},"name":"terminate","qualname":"::actor::ActorContext::terminate","value":"pub fn terminate(&mut Self)","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Terminate actor execution\n","sig":null,"attributes":[{"value":"/ Terminate actor execution","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":13652,"byte_end":13681,"line_start":214,"line_end":214,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":13749,"byte_end":13754,"line_start":218,"line_end":218,"column_start":8,"column_end":13},"name":"state","qualname":"::actor::ActorContext::state","value":"pub fn state(&Self) -> ActorState","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Actor execution state\n","sig":null,"attributes":[{"value":"/ Actor execution state","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":13716,"byte_end":13741,"line_start":217,"line_end":217,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":60},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":13825,"byte_end":13837,"line_start":222,"line_end":222,"column_start":11,"column_end":23},"name":"AsyncContext","qualname":"::actor::AsyncContext","value":"AsyncContext<A>: ActorContext","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":79}],"decl_id":null,"docs":" Asynchronous execution context\n","sig":null,"attributes":[{"value":"/ Asynchronous execution context","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":13780,"byte_end":13814,"line_start":221,"line_end":221,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":13940,"byte_end":13947,"line_start":227,"line_end":227,"column_start":8,"column_end":15},"name":"address","qualname":"::actor::AsyncContext::address","value":"pub fn address(&Self) -> Addr<A>","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" Return `Address` of the context\n","sig":null,"attributes":[{"value":"/ Return `Address` of the context","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":13897,"byte_end":13932,"line_start":226,"line_end":226,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":14156,"byte_end":14161,"line_start":233,"line_end":233,"column_start":8,"column_end":13},"name":"spawn","qualname":"::actor::AsyncContext::spawn","value":"pub fn spawn<F>(&mut Self, F) -> SpawnHandle where F: ActorFuture<Item = (),\nError = (), Actor = ()> + 'static","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" Spawn async future into context. Returns handle of the item,\n could be used for cancelling execution.","sig":null,"attributes":[{"value":"/ Spawn async future into context. Returns handle of the item,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":13972,"byte_end":14036,"line_start":229,"line_end":229,"column_start":5,"column_end":69}},{"value":"/ could be used for cancelling execution.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":14041,"byte_end":14084,"line_start":230,"line_end":230,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":14089,"byte_end":14092,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ All futures cancel during actor stopping stage.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":14097,"byte_end":14148,"line_start":232,"line_end":232,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":14399,"byte_end":14403,"line_start":239,"line_end":239,"column_start":8,"column_end":12},"name":"wait","qualname":"::actor::AsyncContext::wait","value":"pub fn wait<F>(&mut Self, F) where F: ActorFuture<Item = (), Error = (), Actor\n= ()> + 'static","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" Spawn future into the context. Stop processing any of incoming events\n until this future resolves.\n","sig":null,"attributes":[{"value":"/ Spawn future into the context. Stop processing any of incoming events","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":14282,"byte_end":14355,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/ until this future resolves.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":14360,"byte_end":14391,"line_start":238,"line_end":238,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":14591,"byte_end":14598,"line_start":244,"line_end":244,"column_start":8,"column_end":15},"name":"waiting","qualname":"::actor::AsyncContext::waiting","value":"pub fn waiting(&Self) -> bool","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" Check if context is paused (waiting for future completion or stopping)\n","sig":null,"attributes":[{"value":"/ Check if context is paused (waiting for future completion or stopping)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":14509,"byte_end":14583,"line_start":243,"line_end":243,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":14692,"byte_end":14705,"line_start":247,"line_end":247,"column_start":8,"column_end":21},"name":"cancel_future","qualname":"::actor::AsyncContext::cancel_future","value":"pub fn cancel_future(&mut Self, SpawnHandle) -> bool","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" Cancel future. handle is a value returned by `spawn` method.\n","sig":null,"attributes":[{"value":"/ Cancel future. handle is a value returned by `spawn` method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":14620,"byte_end":14684,"line_start":246,"line_end":246,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15963,"byte_end":15973,"line_start":290,"line_end":290,"column_start":8,"column_end":18},"name":"add_stream","qualname":"::actor::AsyncContext::add_stream","value":"pub fn add_stream<S>(&mut Self, S) -> SpawnHandle where S: Stream + 'static,\nA: StreamHandler<S::Item, S::Error>","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" This method register stream to an actor context and\n allows to handle `Stream` in similar way as normal actor messages.","sig":null,"attributes":[{"value":"/ This method register stream to an actor context and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":14752,"byte_end":14807,"line_start":249,"line_end":249,"column_start":5,"column_end":60}},{"value":"/ allows to handle `Stream` in similar way as normal actor messages.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":14812,"byte_end":14882,"line_start":250,"line_end":250,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":14887,"byte_end":14890,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":14895,"byte_end":14906,"line_start":252,"line_end":252,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate actix;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":14911,"byte_end":14949,"line_start":253,"line_end":253,"column_start":5,"column_end":43}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":14954,"byte_end":14981,"line_start":254,"line_end":254,"column_start":5,"column_end":32}},{"value":"/ # use std::io;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":14986,"byte_end":15004,"line_start":255,"line_end":255,"column_start":5,"column_end":23}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15009,"byte_end":15035,"line_start":256,"line_end":256,"column_start":5,"column_end":31}},{"value":"/ use futures::stream::once;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15040,"byte_end":15070,"line_start":257,"line_end":257,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15075,"byte_end":15078,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ #[derive(Message)]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15083,"byte_end":15105,"line_start":259,"line_end":259,"column_start":5,"column_end":27}},{"value":"/ struct Ping;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15110,"byte_end":15126,"line_start":260,"line_end":260,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15131,"byte_end":15134,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ struct MyActor;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15139,"byte_end":15158,"line_start":262,"line_end":262,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15163,"byte_end":15166,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ impl StreamHandler<Ping, io::Error> for MyActor {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15171,"byte_end":15224,"line_start":264,"line_end":264,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15229,"byte_end":15232,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/     fn handle(&mut self, item: Ping, ctx: &mut Context<MyActor>) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15237,"byte_end":15307,"line_start":266,"line_end":266,"column_start":5,"column_end":75}},{"value":"/         println!(\"PING\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15312,"byte_end":15341,"line_start":267,"line_end":267,"column_start":5,"column_end":34}},{"value":"/ #       System::current().stop();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15346,"byte_end":15383,"line_start":268,"line_end":268,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15388,"byte_end":15397,"line_start":269,"line_end":269,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15402,"byte_end":15405,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/     fn finished(&mut self, ctx: &mut Self::Context) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15410,"byte_end":15467,"line_start":271,"line_end":271,"column_start":5,"column_end":62}},{"value":"/         println!(\"finished\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15472,"byte_end":15505,"line_start":272,"line_end":272,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15510,"byte_end":15519,"line_start":273,"line_end":273,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15524,"byte_end":15529,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15534,"byte_end":15537,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15542,"byte_end":15570,"line_start":276,"line_end":276,"column_start":5,"column_end":33}},{"value":"/    type Context = Context<Self>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15575,"byte_end":15611,"line_start":277,"line_end":277,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15616,"byte_end":15619,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/    fn started(&mut self, ctx: &mut Context<Self>) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15624,"byte_end":15679,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/        // add stream","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15684,"byte_end":15708,"line_start":280,"line_end":280,"column_start":5,"column_end":29}},{"value":"/        ctx.add_stream(once::<Ping, io::Error>(Ok(Ping)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15713,"byte_end":15774,"line_start":281,"line_end":281,"column_start":5,"column_end":66}},{"value":"/    }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15779,"byte_end":15787,"line_start":282,"line_end":282,"column_start":5,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15792,"byte_end":15797,"line_start":283,"line_end":283,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15802,"byte_end":15819,"line_start":284,"line_end":284,"column_start":5,"column_end":22}},{"value":"/ #    let sys = System::new(\"example\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15824,"byte_end":15866,"line_start":285,"line_end":285,"column_start":5,"column_end":47}},{"value":"/ #    let addr = MyActor.start();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15871,"byte_end":15907,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/ #    sys.run();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15912,"byte_end":15931,"line_start":287,"line_end":287,"column_start":5,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15936,"byte_end":15943,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":15948,"byte_end":15955,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":17184,"byte_end":17202,"line_start":334,"line_end":334,"column_start":8,"column_end":26},"name":"add_message_stream","qualname":"::actor::AsyncContext::add_message_stream","value":"pub fn add_message_stream<S>(&mut Self, S) where S: Stream<Error = ()> +\n'static, S::Item: Message, A: Handler<S::Item>","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" This method is similar to `add_stream` but it skips stream errors.","sig":null,"attributes":[{"value":"/ This method is similar to `add_stream` but it skips stream errors.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16183,"byte_end":16253,"line_start":298,"line_end":298,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16258,"byte_end":16261,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16266,"byte_end":16277,"line_start":300,"line_end":300,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate actix;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16282,"byte_end":16320,"line_start":301,"line_end":301,"column_start":5,"column_end":43}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16325,"byte_end":16352,"line_start":302,"line_end":302,"column_start":5,"column_end":32}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16357,"byte_end":16383,"line_start":303,"line_end":303,"column_start":5,"column_end":31}},{"value":"/ use futures::stream::once;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16388,"byte_end":16418,"line_start":304,"line_end":304,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16423,"byte_end":16426,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ #[derive(Message)]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16431,"byte_end":16453,"line_start":306,"line_end":306,"column_start":5,"column_end":27}},{"value":"/ struct Ping;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16458,"byte_end":16474,"line_start":307,"line_end":307,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16479,"byte_end":16482,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ struct MyActor;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16487,"byte_end":16506,"line_start":309,"line_end":309,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16511,"byte_end":16514,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ impl Handler<Ping> for MyActor {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16519,"byte_end":16555,"line_start":311,"line_end":311,"column_start":5,"column_end":41}},{"value":"/     type Result = ();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16560,"byte_end":16585,"line_start":312,"line_end":312,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16590,"byte_end":16593,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/     fn handle(&mut self, msg: Ping, ctx: &mut Context<MyActor>) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16598,"byte_end":16667,"line_start":314,"line_end":314,"column_start":5,"column_end":74}},{"value":"/         println!(\"PING\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16672,"byte_end":16701,"line_start":315,"line_end":315,"column_start":5,"column_end":34}},{"value":"/ #       System::current().stop();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16706,"byte_end":16743,"line_start":316,"line_end":316,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16748,"byte_end":16757,"line_start":317,"line_end":317,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16762,"byte_end":16767,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16772,"byte_end":16775,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16780,"byte_end":16808,"line_start":320,"line_end":320,"column_start":5,"column_end":33}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16813,"byte_end":16850,"line_start":321,"line_end":321,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16855,"byte_end":16858,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/     fn started(&mut self, ctx: &mut Context<Self>) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16863,"byte_end":16919,"line_start":323,"line_end":323,"column_start":5,"column_end":61}},{"value":"/         // add messages stream","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16924,"byte_end":16958,"line_start":324,"line_end":324,"column_start":5,"column_end":39}},{"value":"/         ctx.add_message_stream(once(Ok(Ping)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":16963,"byte_end":17014,"line_start":325,"line_end":325,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":17019,"byte_end":17028,"line_start":326,"line_end":326,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":17033,"byte_end":17038,"line_start":327,"line_end":327,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":17043,"byte_end":17060,"line_start":328,"line_end":328,"column_start":5,"column_end":22}},{"value":"/ #    System::run(|| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":17065,"byte_end":17090,"line_start":329,"line_end":329,"column_start":5,"column_end":30}},{"value":"/ #        let addr = MyActor.start();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":17095,"byte_end":17135,"line_start":330,"line_end":330,"column_start":5,"column_end":45}},{"value":"/ #    });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":17140,"byte_end":17152,"line_start":331,"line_end":331,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":17157,"byte_end":17164,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":17169,"byte_end":17176,"line_start":333,"line_end":333,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":17598,"byte_end":17604,"line_start":348,"line_end":348,"column_start":8,"column_end":14},"name":"notify","qualname":"::actor::AsyncContext::notify","value":"pub fn notify<M>(&mut Self, M) where A: Handler<M>, M: Message + 'static","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" Send message `msg` to self.\n","sig":null,"attributes":[{"value":"/ Send message `msg` to self.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":17559,"byte_end":17590,"line_start":347,"line_end":347,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":18114,"byte_end":18126,"line_start":363,"line_end":363,"column_start":8,"column_end":20},"name":"notify_later","qualname":"::actor::AsyncContext::notify_later","value":"pub fn notify_later<M>(&mut Self, M, Duration) -> SpawnHandle where\nA: Handler<M>, M: Message + 'static","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" Send message `msg` to self after specified period of time. Returns\n spawn handle which could be used for cancellation. Notification get\n cancelled if context's stop method get called.\n","sig":null,"attributes":[{"value":"/ Send message `msg` to self after specified period of time. Returns","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":17905,"byte_end":17975,"line_start":360,"line_end":360,"column_start":5,"column_end":75}},{"value":"/ spawn handle which could be used for cancellation. Notification get","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":17980,"byte_end":18051,"line_start":361,"line_end":361,"column_start":5,"column_end":76}},{"value":"/ cancelled if context's stop method get called.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":18056,"byte_end":18106,"line_start":362,"line_end":362,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":18673,"byte_end":18682,"line_start":379,"line_end":379,"column_start":8,"column_end":17},"name":"run_later","qualname":"::actor::AsyncContext::run_later","value":"pub fn run_later<F>(&mut Self, Duration, F) -> SpawnHandle where\nF: FnOnce(&mut A, &mut A::Context) -> () + 'static","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" Execute closure after specified period of time within same Actor and\n Context. Execution get cancelled if context's stop method get\n called.\n","sig":null,"attributes":[{"value":"/ Execute closure after specified period of time within same Actor and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":18507,"byte_end":18579,"line_start":376,"line_end":376,"column_start":5,"column_end":77}},{"value":"/ Context. Execution get cancelled if context's stop method get","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":18584,"byte_end":18649,"line_start":377,"line_end":377,"column_start":5,"column_end":70}},{"value":"/ called.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":18654,"byte_end":18665,"line_start":378,"line_end":378,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":18962,"byte_end":18974,"line_start":388,"line_end":388,"column_start":8,"column_end":20},"name":"run_interval","qualname":"::actor::AsyncContext::run_interval","value":"pub fn run_interval<F>(&mut Self, Duration, F) -> SpawnHandle where\nF: FnMut(&mut A, &mut A::Context) -> () + 'static","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" Spawns a job to execute the given closure periodically, at a specified\n fixed interval\n","sig":null,"attributes":[{"value":"/ Spawns a job to execute the given closure periodically, at a specified","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":18857,"byte_end":18931,"line_start":386,"line_end":386,"column_start":5,"column_end":79}},{"value":"/ fixed interval","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":18936,"byte_end":18954,"line_start":387,"line_end":387,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2381},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":19292,"byte_end":19303,"line_start":398,"line_end":398,"column_start":12,"column_end":23},"name":"SpawnHandle","qualname":"::actor::SpawnHandle","value":"","parent":null,"children":[],"decl_id":null,"docs":" Spawned future handle. Could be used for cancelling spawned future.\n","sig":null,"attributes":[{"value":"/ Spawned future handle. Could be used for cancelling spawned future.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":19158,"byte_end":19229,"line_start":396,"line_end":396,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":19367,"byte_end":19371,"line_start":402,"line_end":402,"column_start":12,"column_end":16},"name":"next","qualname":"<SpawnHandle>::next","value":"pub fn next(Self) -> SpawnHandle","parent":null,"children":[],"decl_id":null,"docs":" Get next handle\n","sig":null,"attributes":[{"value":"/ Get next handle","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":19336,"byte_end":19355,"line_start":401,"line_end":401,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":19463,"byte_end":19473,"line_start":406,"line_end":406,"column_start":12,"column_end":22},"name":"into_usize","qualname":"<SpawnHandle>::into_usize","value":"pub fn into_usize(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2419},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":21048,"byte_end":21055,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Arbiter","qualname":"::arbiter::Arbiter","value":"Arbiter {  }","parent":null,"children":[{"krate":0,"index":2420},{"krate":0,"index":2421}],"decl_id":null,"docs":" Event loop controller","sig":null,"attributes":[{"value":"/ Event loop controller","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":20526,"byte_end":20551,"line_start":29,"line_end":29,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":20552,"byte_end":20555,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Arbiter controls event loop in its thread. Each arbiter runs in separate","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":20556,"byte_end":20632,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ thread. Arbiter provides several api for event loop access. Each arbiter","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":20633,"byte_end":20709,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ can belongs to specific `System` actor.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":20710,"byte_end":20753,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":20754,"byte_end":20757,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ By default, a panic in an Arbiter does _not_ stop the rest of the System,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":20758,"byte_end":20835,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ unless the panic is in the System actor. Users of Arbiter can opt into","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":20836,"byte_end":20910,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ shutting down the system on panic by using `Arbiter::builder()` and enabling","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":20911,"byte_end":20991,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ `stop_system_on_panic`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":20992,"byte_end":21019,"line_start":38,"line_end":38,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":21619,"byte_end":21626,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"builder","qualname":"<Arbiter>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Spawn new thread and run event loop in spawned thread.\n Returns address of newly created arbiter.\n Does not stop the system on panic.\n","sig":null,"attributes":[{"value":"/ Spawn new thread and run event loop in spawned thread.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":21456,"byte_end":21514,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/ Returns address of newly created arbiter.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":21519,"byte_end":21564,"line_start":60,"line_end":60,"column_start":5,"column_end":50}},{"value":"/ Does not stop the system on panic.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":21569,"byte_end":21607,"line_start":61,"line_end":61,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":21839,"byte_end":21842,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<Arbiter>::new","value":"pub fn new<T: Into<String>>(T) -> Addr<Arbiter>","parent":null,"children":[],"decl_id":null,"docs":" Spawn new thread and run event loop in spawned thread.\n Returns address of newly created arbiter.\n Does not stop the system on panic.\n","sig":null,"attributes":[{"value":"/ Spawn new thread and run event loop in spawned thread.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":21676,"byte_end":21734,"line_start":66,"line_end":66,"column_start":5,"column_end":63}},{"value":"/ Returns address of newly created arbiter.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":21739,"byte_end":21784,"line_start":67,"line_end":67,"column_start":5,"column_end":50}},{"value":"/ Does not stop the system on panic.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":21789,"byte_end":21827,"line_start":68,"line_end":68,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":25010,"byte_end":25014,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"name","qualname":"<Arbiter>::name","value":"pub fn name() -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns current arbiter's name\n","sig":null,"attributes":[{"value":"/ Returns current arbiter's name","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":24964,"byte_end":24998,"line_start":161,"line_end":161,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":25245,"byte_end":25252,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"name":"current","qualname":"<Arbiter>::current","value":"pub fn current() -> Addr<Arbiter>","parent":null,"children":[],"decl_id":null,"docs":" Returns current arbiter's address\n","sig":null,"attributes":[{"value":"/ Returns current arbiter's address","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":25196,"byte_end":25233,"line_start":169,"line_end":169,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":25499,"byte_end":25507,"line_start":178,"line_end":178,"column_start":12,"column_end":20},"name":"registry","qualname":"<Arbiter>::registry","value":"pub fn registry() -> Registry","parent":null,"children":[],"decl_id":null,"docs":" This function returns arbiter's registry,\n","sig":null,"attributes":[{"value":"/ This function returns arbiter's registry,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":25442,"byte_end":25487,"line_start":177,"line_end":177,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":25765,"byte_end":25770,"line_start":186,"line_end":186,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Arbiter>::spawn","value":"pub fn spawn<F>(F) where F: Future<Item = (), Error = ()> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes a future on the current thread.\n","sig":null,"attributes":[{"value":"/ Executes a future on the current thread.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":25709,"byte_end":25753,"line_start":185,"line_end":185,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":26149,"byte_end":26157,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"spawn_fn","qualname":"<Arbiter>::spawn_fn","value":"pub fn spawn_fn<F, R>(F) where F: FnOnce() -> R + 'static, R: IntoFuture<Item\n= (), Error = ()> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes a future on the current thread.\n","sig":null,"attributes":[{"value":"/ Executes a future on the current thread.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":26093,"byte_end":26137,"line_start":199,"line_end":199,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":26452,"byte_end":26457,"line_start":210,"line_end":210,"column_start":12,"column_end":17},"name":"start","qualname":"<Arbiter>::start","value":"pub fn start<A, F>(F) -> Addr<A> where A: Actor<Context = Context<A>>,\nF: FnOnce(&mut A::Context) -> A + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Start new arbiter and then start actor in created arbiter.\n Returns `Addr<Syn, A>` of created actor.\n","sig":null,"attributes":[{"value":"/ Start new arbiter and then start actor in created arbiter.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":26329,"byte_end":26391,"line_start":208,"line_end":208,"column_start":5,"column_end":67}},{"value":"/ Returns `Addr<Syn, A>` of created actor.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":26396,"byte_end":26440,"line_start":209,"line_end":209,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":177},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":27974,"byte_end":27981,"line_start":271,"line_end":271,"column_start":12,"column_end":19},"name":"Builder","qualname":"::arbiter::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180}],"decl_id":null,"docs":" Builder struct for an Arbiter.\n","sig":null,"attributes":[{"value":"/ Builder struct for an Arbiter.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":27928,"byte_end":27962,"line_start":270,"line_end":270,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":28490,"byte_end":28494,"line_start":292,"line_end":292,"column_start":12,"column_end":16},"name":"name","qualname":"<Builder>::name","value":"pub fn name<T: Into<String>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the name of the Arbiter.\n","sig":null,"attributes":[{"value":"/ Sets the name of the Arbiter.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":28445,"byte_end":28478,"line_start":291,"line_end":291,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":28809,"byte_end":28829,"line_start":301,"line_end":301,"column_start":12,"column_end":32},"name":"stop_system_on_panic","qualname":"<Builder>::stop_system_on_panic","value":"pub fn stop_system_on_panic(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the option 'stop_system_on_panic' which controls whether the System is stopped when an\n uncaught panic is thrown from an Actor in the Arbiter.","sig":null,"attributes":[{"value":"/ Sets the option 'stop_system_on_panic' which controls whether the System is stopped when an","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":28604,"byte_end":28699,"line_start":297,"line_end":297,"column_start":5,"column_end":100}},{"value":"/ uncaught panic is thrown from an Actor in the Arbiter.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":28704,"byte_end":28762,"line_start":298,"line_end":298,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":28767,"byte_end":28770,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ Defaults to false.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":28775,"byte_end":28797,"line_start":300,"line_end":300,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":29135,"byte_end":29140,"line_start":309,"line_end":309,"column_start":12,"column_end":17},"name":"clock","qualname":"<Builder>::clock","value":"pub fn clock(Self, Clock) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the Clock instance that will be used by this Arbiter.","sig":null,"attributes":[{"value":"/ Set the Clock instance that will be used by this Arbiter.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":28960,"byte_end":29021,"line_start":306,"line_end":306,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":29026,"byte_end":29029,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ Defaults to the clock used by the actix `System`, which defaults to the system clock.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":29034,"byte_end":29123,"line_start":308,"line_end":308,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":29354,"byte_end":29359,"line_start":316,"line_end":316,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(Self) -> Addr<Arbiter>","parent":null,"children":[],"decl_id":null,"docs":" Spawn new thread and run event loop in spawned thread.\n Returns address of newly created arbiter.\n","sig":null,"attributes":[{"value":"/ Spawn new thread and run event loop in spawned thread.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":29234,"byte_end":29292,"line_start":314,"line_end":314,"column_start":5,"column_end":63}},{"value":"/ Returns address of newly created arbiter.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":29297,"byte_end":29342,"line_start":315,"line_end":315,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":29559,"byte_end":29564,"line_start":322,"line_end":322,"column_start":12,"column_end":17},"name":"start","qualname":"<Builder>::start","value":"pub fn start<A, F>(Self, F) -> Addr<A> where A: Actor<Context = Context<A>>,\nF: FnOnce(&mut A::Context) -> A + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Start new arbiter and then start actor in created arbiter.\n Returns `Addr<Syn, A>` of created actor.\n","sig":null,"attributes":[{"value":"/ Start new arbiter and then start actor in created arbiter.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":29436,"byte_end":29498,"line_start":320,"line_end":320,"column_start":5,"column_end":67}},{"value":"/ Returns `Addr<Syn, A>` of created actor.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":29503,"byte_end":29547,"line_start":321,"line_end":321,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":209},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":30058,"byte_end":30065,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Context","qualname":"::context::Context","value":"Context {  }","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212}],"decl_id":null,"docs":" Actor execution context\n","sig":null,"attributes":[{"value":"/ Actor execution context","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":30019,"byte_end":30046,"line_start":10,"line_end":10,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":31771,"byte_end":31784,"line_start":96,"line_end":96,"column_start":12,"column_end":25},"name":"with_receiver","qualname":"<Context<A>>::with_receiver","value":"pub fn with_receiver(AddressReceiver<A>) -> Context<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":31750,"byte_end":31759,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":32006,"byte_end":32009,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"run","qualname":"<Context<A>>::run","value":"pub fn run(Self, A) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":31985,"byte_end":31994,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":32172,"byte_end":32183,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"into_future","qualname":"<Context<A>>::into_future","value":"pub fn into_future(Self, A) -> ContextFut<A, Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":32449,"byte_end":32455,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"handle","qualname":"<Context<A>>::handle","value":"pub fn handle(&Self) -> SpawnHandle","parent":null,"children":[],"decl_id":null,"docs":" Handle of the running future","sig":null,"attributes":[{"value":"/ Handle of the running future","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":32319,"byte_end":32351,"line_start":117,"line_end":117,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":32356,"byte_end":32359,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ SpawnHandle is the handle returned by `AsyncContext::spawn()` method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":32364,"byte_end":32437,"line_start":119,"line_end":119,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":32620,"byte_end":32640,"line_start":127,"line_end":127,"column_start":12,"column_end":32},"name":"set_mailbox_capacity","qualname":"<Context<A>>::set_mailbox_capacity","value":"pub fn set_mailbox_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Set mailbox capacity","sig":null,"attributes":[{"value":"/ Set mailbox capacity","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":32524,"byte_end":32548,"line_start":124,"line_end":124,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":32553,"byte_end":32556,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ By default mailbox capacity is 16 messages.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":32561,"byte_end":32608,"line_start":126,"line_end":126,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":241},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":32956,"byte_end":32976,"line_start":142,"line_end":142,"column_start":11,"column_end":31},"name":"ContextFutureSpawner","qualname":"::context::ContextFutureSpawner","value":"ContextFutureSpawner<A>","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244}],"decl_id":null,"docs":" Helper trait which can spawn future into actor's context\n","sig":null,"attributes":[{"value":"/ Helper trait which can spawn future into actor's context","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":32885,"byte_end":32945,"line_start":141,"line_end":141,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":33081,"byte_end":33086,"line_start":148,"line_end":148,"column_start":8,"column_end":13},"name":"spawn","qualname":"::context::ContextFutureSpawner::spawn","value":"pub fn spawn(Self, &mut A::Context)","parent":{"krate":0,"index":241},"children":[],"decl_id":null,"docs":" spawn future into `Context<A>`\n","sig":null,"attributes":[{"value":"/ spawn future into `Context<A>`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":33039,"byte_end":33073,"line_start":147,"line_end":147,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":33238,"byte_end":33242,"line_start":152,"line_end":152,"column_start":8,"column_end":12},"name":"wait","qualname":"::context::ContextFutureSpawner::wait","value":"pub fn wait(Self, &mut A::Context)","parent":{"krate":0,"index":241},"children":[],"decl_id":null,"docs":" Spawn future into the context. Stop processing any of incoming events\n until this future resolves.\n","sig":null,"attributes":[{"value":"/ Spawn future into the context. Stop processing any of incoming events","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":33121,"byte_end":33194,"line_start":150,"line_end":150,"column_start":5,"column_end":78}},{"value":"/ until this future resolves.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":33199,"byte_end":33230,"line_start":151,"line_end":151,"column_start":5,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":273},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":34301,"byte_end":34318,"line_start":29,"line_end":29,"column_start":11,"column_end":28},"name":"AsyncContextParts","qualname":"::contextimpl::AsyncContextParts","value":"AsyncContextParts<A>: ActorContext + AsyncContext<A>","parent":null,"children":[{"krate":0,"index":275}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":34399,"byte_end":34404,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"parts","qualname":"::contextimpl::AsyncContextParts::parts","value":"pub fn parts(&mut Self) -> &mut ContextParts<A>","parent":{"krate":0,"index":273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":276},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":34455,"byte_end":34467,"line_start":36,"line_end":36,"column_start":12,"column_end":24},"name":"ContextParts","qualname":"::contextimpl::ContextParts","value":"ContextParts {  }","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":35122,"byte_end":35125,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"new","qualname":"<ContextParts<A>>::new","value":"pub fn new(AddressSenderProducer<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new ContextParts instance\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":35060,"byte_end":35069,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ Create new ContextParts instance","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":35074,"byte_end":35110,"line_start":66,"line_end":66,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":35662,"byte_end":35666,"line_start":85,"line_end":85,"column_start":12,"column_end":16},"name":"stop","qualname":"<ContextParts<A>>::stop","value":"pub fn stop(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Initiate stop process for actor execution","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":35484,"byte_end":35493,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ Initiate stop process for actor execution","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":35498,"byte_end":35543,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":35548,"byte_end":35551,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Actor could prevent stopping by returning `false` from","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":35556,"byte_end":35614,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/ `Actor::stopping()` method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":35619,"byte_end":35650,"line_start":84,"line_end":84,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":35921,"byte_end":35930,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"terminate","qualname":"<ContextParts<A>>::terminate","value":"pub fn terminate(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Terminate actor execution\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":35866,"byte_end":35875,"line_start":92,"line_end":92,"column_start":5,"column_end":14}},{"value":"/ Terminate actor execution","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":35880,"byte_end":35909,"line_start":93,"line_end":93,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":36050,"byte_end":36055,"line_start":100,"line_end":100,"column_start":12,"column_end":17},"name":"state","qualname":"<ContextParts<A>>::state","value":"pub fn state(&Self) -> ActorState","parent":null,"children":[],"decl_id":null,"docs":" Actor execution state\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":35999,"byte_end":36008,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ Actor execution state","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":36013,"byte_end":36038,"line_start":99,"line_end":99,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":36499,"byte_end":36506,"line_start":114,"line_end":114,"column_start":12,"column_end":19},"name":"waiting","qualname":"<ContextParts<A>>::waiting","value":"pub fn waiting(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is context waiting for future completion\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":36429,"byte_end":36438,"line_start":112,"line_end":112,"column_start":5,"column_end":14}},{"value":"/ Is context waiting for future completion","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":36443,"byte_end":36487,"line_start":113,"line_end":113,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":36742,"byte_end":36753,"line_start":123,"line_end":123,"column_start":12,"column_end":23},"name":"curr_handle","qualname":"<ContextParts<A>>::curr_handle","value":"pub fn curr_handle(&Self) -> SpawnHandle","parent":null,"children":[],"decl_id":null,"docs":" Handle of the running future\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":36684,"byte_end":36693,"line_start":121,"line_end":121,"column_start":5,"column_end":14}},{"value":"/ Handle of the running future","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":36698,"byte_end":36730,"line_start":122,"line_end":122,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":36876,"byte_end":36881,"line_start":129,"line_end":129,"column_start":12,"column_end":17},"name":"spawn","qualname":"<ContextParts<A>>::spawn","value":"pub fn spawn<F>(&mut Self, F) -> SpawnHandle where F: ActorFuture<Item = (),\nError = (), Actor = ()> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn new future to this context.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":36813,"byte_end":36822,"line_start":127,"line_end":127,"column_start":5,"column_end":14}},{"value":"/ Spawn new future to this context.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":36827,"byte_end":36864,"line_start":128,"line_end":128,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":37395,"byte_end":37399,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"wait","qualname":"<ContextParts<A>>::wait","value":"pub fn wait<F>(&mut Self, F) where F: ActorFuture<Item = (), Error = (), Actor\n= ()> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn new future to this context and wait future completion.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":37233,"byte_end":37242,"line_start":140,"line_end":140,"column_start":5,"column_end":14}},{"value":"/ Spawn new future to this context and wait future completion.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":37247,"byte_end":37311,"line_start":141,"line_end":141,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":37316,"byte_end":37319,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ During wait period actor does not receive any messages.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":37324,"byte_end":37383,"line_start":143,"line_end":143,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":37627,"byte_end":37640,"line_start":153,"line_end":153,"column_start":12,"column_end":25},"name":"cancel_future","qualname":"<ContextParts<A>>::cancel_future","value":"pub fn cancel_future(&mut Self, SpawnHandle) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Cancel previously scheduled future.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":37562,"byte_end":37571,"line_start":151,"line_end":151,"column_start":5,"column_end":14}},{"value":"/ Cancel previously scheduled future.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":37576,"byte_end":37615,"line_start":152,"line_end":152,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":37763,"byte_end":37771,"line_start":159,"line_end":159,"column_start":12,"column_end":20},"name":"capacity","qualname":"<ContextParts<A>>::capacity","value":"pub fn capacity(&mut Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":37742,"byte_end":37751,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":37855,"byte_end":37875,"line_start":164,"line_end":164,"column_start":12,"column_end":32},"name":"set_mailbox_capacity","qualname":"<ContextParts<A>>::set_mailbox_capacity","value":"pub fn set_mailbox_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":37834,"byte_end":37843,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":38027,"byte_end":38034,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"name":"address","qualname":"<ContextParts<A>>::address","value":"pub fn address(&Self) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":38006,"byte_end":38015,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":38422,"byte_end":38429,"line_start":184,"line_end":184,"column_start":12,"column_end":19},"name":"started","qualname":"<ContextParts<A>>::started","value":"pub fn started(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":38401,"byte_end":38410,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":307},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":38522,"byte_end":38532,"line_start":189,"line_end":189,"column_start":12,"column_end":22},"name":"ContextFut","qualname":"::contextimpl::ContextFut","value":"ContextFut {  }","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":315}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":39067,"byte_end":39070,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"new","qualname":"<ContextFut<A, C>>::new","value":"pub fn new(C, A, Mailbox<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":39307,"byte_end":39310,"line_start":227,"line_end":227,"column_start":12,"column_end":15},"name":"ctx","qualname":"<ContextFut<A, C>>::ctx","value":"pub fn ctx(&mut Self) -> &mut C","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":39286,"byte_end":39295,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":39388,"byte_end":39395,"line_start":232,"line_end":232,"column_start":12,"column_end":19},"name":"address","qualname":"<ContextFut<A, C>>::address","value":"pub fn address(&Self) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":39367,"byte_end":39376,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":39666,"byte_end":39671,"line_start":245,"line_end":245,"column_start":12,"column_end":17},"name":"alive","qualname":"<ContextFut<A, C>>::alive","value":"pub fn alive(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":39645,"byte_end":39654,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":432},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":52299,"byte_end":52306,"line_start":18,"line_end":18,"column_start":11,"column_end":18},"name":"Handler","qualname":"::handler::Handler","value":"Handler<M>","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"decl_id":null,"docs":" Message handler","sig":null,"attributes":[{"value":"/ Message handler","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":52077,"byte_end":52096,"line_start":11,"line_end":11,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":52097,"byte_end":52100,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `Handler` implementation is a general way how to handle","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":52101,"byte_end":52160,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ incoming messages, streams, futures.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":52161,"byte_end":52201,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":52202,"byte_end":52205,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `M` is a message which can be handled by the actor.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":52206,"byte_end":52261,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"allow(unused_variables)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":52262,"byte_end":52288,"line_start":17,"line_end":17,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":434},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":52415,"byte_end":52421,"line_start":24,"line_end":24,"column_start":10,"column_end":16},"name":"Result","qualname":"::handler::Handler::Result","value":"type Result: MessageResponse<Self, M>;","parent":{"krate":0,"index":432},"children":[],"decl_id":null,"docs":" The type of value that this handle will return\n","sig":null,"attributes":[{"value":"/ The type of value that this handle will return","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":52355,"byte_end":52405,"line_start":23,"line_end":23,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":52523,"byte_end":52529,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"handle","qualname":"::handler::Handler::handle","value":"pub fn handle(&mut Self, M, &mut Self::Context) -> Self::Result","parent":{"krate":0,"index":432},"children":[],"decl_id":null,"docs":" Method is called for every message received by this Actor\n","sig":null,"attributes":[{"value":"/ Method is called for every message received by this Actor","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":52454,"byte_end":52515,"line_start":26,"line_end":26,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":436},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":52621,"byte_end":52628,"line_start":31,"line_end":31,"column_start":11,"column_end":18},"name":"Message","qualname":"::handler::Message","value":"Message","parent":null,"children":[{"krate":0,"index":437}],"decl_id":null,"docs":" Message type\n","sig":null,"attributes":[{"value":"/ Message type","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":52594,"byte_end":52610,"line_start":30,"line_end":30,"column_start":1,"column_end":17}}]},{"kind":"Type","id":{"krate":0,"index":437},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":52732,"byte_end":52738,"line_start":34,"line_end":34,"column_start":10,"column_end":16},"name":"Result","qualname":"::handler::Message::Result","value":"type Result: 'static;","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" The type of value that this message will resolved with if it is\n successful.\n","sig":null,"attributes":[{"value":"/ The type of value that this message will resolved with if it is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":52635,"byte_end":52702,"line_start":32,"line_end":32,"column_start":5,"column_end":72}},{"value":"/ successful.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":52707,"byte_end":52722,"line_start":33,"line_end":33,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":438},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":52819,"byte_end":52832,"line_start":38,"line_end":38,"column_start":12,"column_end":25},"name":"MessageResult","qualname":"::handler::MessageResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" Helper type that implements `MessageResponse` trait\n","sig":null,"attributes":[{"value":"/ Helper type that implements `MessageResponse` trait","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":52752,"byte_end":52807,"line_start":37,"line_end":37,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":441},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":52845,"byte_end":52858,"line_start":38,"line_end":38,"column_start":38,"column_end":51},"name":"0","qualname":"::handler::MessageResult::0","value":"<M as handler::Message>::Result","parent":{"krate":0,"index":438},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":442},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":52928,"byte_end":52945,"line_start":41,"line_end":41,"column_start":10,"column_end":27},"name":"ResponseActFuture","qualname":"::handler::ResponseActFuture","value":"Box<ActorFuture<Item = I, Error = I, Actor = I>>","parent":null,"children":[],"decl_id":null,"docs":" A specialized actor future for async message handler\n","sig":null,"attributes":[{"value":"/ A specialized actor future for async message handler","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":52862,"byte_end":52918,"line_start":40,"line_end":40,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":446},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":53068,"byte_end":53082,"line_start":44,"line_end":44,"column_start":10,"column_end":24},"name":"ResponseFuture","qualname":"::handler::ResponseFuture","value":"Box<Future<Item = I, Error = I>>","parent":null,"children":[],"decl_id":null,"docs":" A specialized future for async message handler\n","sig":null,"attributes":[{"value":"/ A specialized future for async message handler","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":53008,"byte_end":53058,"line_start":43,"line_end":43,"column_start":1,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":449},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":53179,"byte_end":53194,"line_start":47,"line_end":47,"column_start":11,"column_end":26},"name":"ResponseChannel","qualname":"::handler::ResponseChannel","value":"ResponseChannel<M: Message>: 'static","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":452}],"decl_id":null,"docs":" Trait defines message response channel\n","sig":null,"attributes":[{"value":"/ Trait defines message response channel","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":53126,"byte_end":53168,"line_start":46,"line_end":46,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":53225,"byte_end":53236,"line_start":48,"line_end":48,"column_start":8,"column_end":19},"name":"is_canceled","qualname":"::handler::ResponseChannel::is_canceled","value":"pub fn is_canceled(&Self) -> bool","parent":{"krate":0,"index":449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":53261,"byte_end":53265,"line_start":50,"line_end":50,"column_start":8,"column_end":12},"name":"send","qualname":"::handler::ResponseChannel::send","value":"pub fn send(Self, M::Result)","parent":{"krate":0,"index":449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":453},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":53348,"byte_end":53363,"line_start":54,"line_end":54,"column_start":11,"column_end":26},"name":"MessageResponse","qualname":"::handler::MessageResponse","value":"MessageResponse<A: Actor, M: Message>","parent":null,"children":[{"krate":0,"index":456}],"decl_id":null,"docs":" Trait which defines message response\n","sig":null,"attributes":[{"value":"/ Trait which defines message response","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":53297,"byte_end":53337,"line_start":53,"line_end":53,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":53395,"byte_end":53401,"line_start":55,"line_end":55,"column_start":8,"column_end":14},"name":"handle","qualname":"::handler::MessageResponse::handle","value":"pub fn handle<R: ResponseChannel<M>>(Self, &mut A::Context, Option<R>)","parent":{"krate":0,"index":453},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":515},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":56076,"byte_end":56084,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"Response","qualname":"::handler::Response","value":"Response {  }","parent":null,"children":[{"krate":0,"index":518}],"decl_id":null,"docs":" Helper type for representing different type of message responses\n","sig":null,"attributes":[{"value":"/ Helper type for representing different type of message responses","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":55996,"byte_end":56064,"line_start":165,"line_end":165,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":56587,"byte_end":56592,"line_start":182,"line_end":182,"column_start":12,"column_end":17},"name":"async","qualname":"<Response<I, E>>::async","value":"pub fn async<T>(T) -> Self where T: Future<Item = I, Error = I> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create async response\n","sig":null,"attributes":[{"value":"/ Create async response","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":56550,"byte_end":56575,"line_start":181,"line_end":181,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":56805,"byte_end":56810,"line_start":192,"line_end":192,"column_start":12,"column_end":17},"name":"reply","qualname":"<Response<I, E>>::reply","value":"pub fn reply(Result<I, E>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create response\n","sig":null,"attributes":[{"value":"/ Create response","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":56774,"byte_end":56793,"line_start":191,"line_end":191,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":547},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":57842,"byte_end":57855,"line_start":230,"line_end":230,"column_start":12,"column_end":25},"name":"ActorResponse","qualname":"::handler::ActorResponse","value":"ActorResponse {  }","parent":null,"children":[{"krate":0,"index":551}],"decl_id":null,"docs":" Helper type for representing different type of message responses\n","sig":null,"attributes":[{"value":"/ Helper type for representing different type of message responses","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":57762,"byte_end":57830,"line_start":229,"line_end":229,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":58407,"byte_end":58412,"line_start":246,"line_end":246,"column_start":12,"column_end":17},"name":"reply","qualname":"<ActorResponse<A, I, E>>::reply","value":"pub fn reply(Result<I, E>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create response\n","sig":null,"attributes":[{"value":"/ Create response","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":58376,"byte_end":58395,"line_start":245,"line_end":245,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":58578,"byte_end":58583,"line_start":253,"line_end":253,"column_start":12,"column_end":17},"name":"async","qualname":"<ActorResponse<A, I, E>>::async","value":"pub fn async<T>(T) -> Self where T: ActorFuture<Item = I, Error = I, Actor =\nI> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create async response\n","sig":null,"attributes":[{"value":"/ Create async response","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":58541,"byte_end":58566,"line_start":252,"line_end":252,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":587},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":60963,"byte_end":60976,"line_start":18,"line_end":18,"column_start":11,"column_end":24},"name":"StreamHandler","qualname":"::stream::StreamHandler","value":"StreamHandler<I, E>","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594}],"decl_id":null,"docs":" Stream handler","sig":null,"attributes":[{"value":"/ Stream handler","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":60416,"byte_end":60434,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":60435,"byte_end":60438,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is helper trait that allows to handle `Stream` in","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":60439,"byte_end":60497,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/ a similar way as normal actor messages.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":60498,"byte_end":60541,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"/ When stream resolves to a next item, `handle()` method of this trait","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":60542,"byte_end":60614,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ get called. If stream produces error, `error()` method get called.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":60615,"byte_end":60685,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/ Depends on result of the `error()` method, actor could continue to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":60686,"byte_end":60756,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ process stream items or stop stream processing.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":60757,"byte_end":60808,"line_start":14,"line_end":14,"column_start":1,"column_end":52}},{"value":"/ When stream completes, `finished()` method get called. By default","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":60809,"byte_end":60878,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/ `finished()` method stops actor execution.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":60879,"byte_end":60925,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"allow(unused_variables)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":60926,"byte_end":60952,"line_start":17,"line_end":17,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":61081,"byte_end":61087,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"handle","qualname":"::stream::StreamHandler::handle","value":"pub fn handle(&mut Self, I, &mut Self::Context)","parent":{"krate":0,"index":587},"children":[],"decl_id":null,"docs":" Method is called for every message received by this Actor\n","sig":null,"attributes":[{"value":"/ Method is called for every message received by this Actor","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":61012,"byte_end":61073,"line_start":22,"line_end":22,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":61202,"byte_end":61209,"line_start":26,"line_end":26,"column_start":8,"column_end":15},"name":"started","qualname":"::stream::StreamHandler::started","value":"pub fn started(&mut Self, &mut Self::Context)","parent":{"krate":0,"index":587},"children":[],"decl_id":null,"docs":" Method is called when stream get polled first time.\n","sig":null,"attributes":[{"value":"/ Method is called when stream get polled first time.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":61139,"byte_end":61194,"line_start":25,"line_end":25,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":61507,"byte_end":61512,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"error","qualname":"::stream::StreamHandler::error","value":"pub fn error(&mut Self, E, &mut Self::Context) -> Running","parent":{"krate":0,"index":587},"children":[],"decl_id":null,"docs":" Method is called when stream emits error.","sig":null,"attributes":[{"value":"/ Method is called when stream emits error.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":61254,"byte_end":61299,"line_start":28,"line_end":28,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":61304,"byte_end":61307,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ If this method returns `ErrorAction::Continue` stream processing","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":61312,"byte_end":61380,"line_start":30,"line_end":30,"column_start":5,"column_end":73}},{"value":"/ continues otherwise stream processing stops. Default method","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":61385,"byte_end":61448,"line_start":31,"line_end":31,"column_start":5,"column_end":68}},{"value":"/ implementation returns `ErrorAction::Stop`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":61453,"byte_end":61499,"line_start":32,"line_end":32,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":61715,"byte_end":61723,"line_start":40,"line_end":40,"column_start":8,"column_end":16},"name":"finished","qualname":"::stream::StreamHandler::finished","value":"pub fn finished(&mut Self, &mut Self::Context)","parent":{"krate":0,"index":587},"children":[],"decl_id":null,"docs":" Method is called when stream finishes.","sig":null,"attributes":[{"value":"/ Method is called when stream finishes.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":61603,"byte_end":61645,"line_start":37,"line_end":37,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":61650,"byte_end":61653,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ By default this method stops actor execution.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":61658,"byte_end":61707,"line_start":39,"line_end":39,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":63009,"byte_end":63019,"line_start":85,"line_end":85,"column_start":8,"column_end":18},"name":"add_stream","qualname":"::stream::StreamHandler::add_stream","value":"pub fn add_stream<S>(S, &mut Self::Context) -> SpawnHandle where\nSelf::Context: AsyncContext<Self>, S: Stream<Item = I, Error = I> + 'static,\nI: 'static, E: 'static","parent":{"krate":0,"index":587},"children":[],"decl_id":null,"docs":" This method register stream to an actor context and\n allows to handle `Stream` in similar way as normal actor messages.","sig":null,"attributes":[{"value":"/ This method register stream to an actor context and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":61792,"byte_end":61847,"line_start":44,"line_end":44,"column_start":5,"column_end":60}},{"value":"/ allows to handle `Stream` in similar way as normal actor messages.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":61852,"byte_end":61922,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":61927,"byte_end":61930,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":61935,"byte_end":61946,"line_start":47,"line_end":47,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate actix;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":61951,"byte_end":61989,"line_start":48,"line_end":48,"column_start":5,"column_end":43}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":61994,"byte_end":62021,"line_start":49,"line_end":49,"column_start":5,"column_end":32}},{"value":"/ # use std::io;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62026,"byte_end":62044,"line_start":50,"line_end":50,"column_start":5,"column_end":23}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62049,"byte_end":62075,"line_start":51,"line_end":51,"column_start":5,"column_end":31}},{"value":"/ use futures::stream::once;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62080,"byte_end":62110,"line_start":52,"line_end":52,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62115,"byte_end":62118,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ #[derive(Message)]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62123,"byte_end":62145,"line_start":54,"line_end":54,"column_start":5,"column_end":27}},{"value":"/ struct Ping;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62150,"byte_end":62166,"line_start":55,"line_end":55,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62171,"byte_end":62174,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ struct MyActor;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62179,"byte_end":62198,"line_start":57,"line_end":57,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62203,"byte_end":62206,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ impl StreamHandler<Ping, io::Error> for MyActor {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62211,"byte_end":62264,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62269,"byte_end":62272,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/     fn handle(&mut self, item: Ping, ctx: &mut Context<MyActor>) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62277,"byte_end":62347,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/         println!(\"PING\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62352,"byte_end":62381,"line_start":62,"line_end":62,"column_start":5,"column_end":34}},{"value":"/ #       System::current().stop()","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62386,"byte_end":62422,"line_start":63,"line_end":63,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62427,"byte_end":62436,"line_start":64,"line_end":64,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62441,"byte_end":62444,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/     fn finished(&mut self, ctx: &mut Self::Context) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62449,"byte_end":62506,"line_start":66,"line_end":66,"column_start":5,"column_end":62}},{"value":"/         println!(\"finished\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62511,"byte_end":62544,"line_start":67,"line_end":67,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62549,"byte_end":62558,"line_start":68,"line_end":68,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62563,"byte_end":62568,"line_start":69,"line_end":69,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62573,"byte_end":62576,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62581,"byte_end":62609,"line_start":71,"line_end":71,"column_start":5,"column_end":33}},{"value":"/    type Context = Context<Self>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62614,"byte_end":62650,"line_start":72,"line_end":72,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62655,"byte_end":62658,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/    fn started(&mut self, ctx: &mut Context<Self>) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62663,"byte_end":62718,"line_start":74,"line_end":74,"column_start":5,"column_end":60}},{"value":"/        // add stream","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62723,"byte_end":62747,"line_start":75,"line_end":75,"column_start":5,"column_end":29}},{"value":"/        Self::add_stream(once::<Ping, io::Error>(Ok(Ping)), ctx);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62752,"byte_end":62820,"line_start":76,"line_end":76,"column_start":5,"column_end":73}},{"value":"/    }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62825,"byte_end":62833,"line_start":77,"line_end":77,"column_start":5,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62838,"byte_end":62843,"line_start":78,"line_end":78,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62848,"byte_end":62865,"line_start":79,"line_end":79,"column_start":5,"column_end":22}},{"value":"/ #    let sys = System::new(\"example\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62870,"byte_end":62912,"line_start":80,"line_end":80,"column_start":5,"column_end":47}},{"value":"/ #    let addr = MyActor.start();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62917,"byte_end":62953,"line_start":81,"line_end":81,"column_start":5,"column_end":41}},{"value":"/ #    sys.run();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62958,"byte_end":62977,"line_start":82,"line_end":82,"column_start":5,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62982,"byte_end":62989,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":62994,"byte_end":63001,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2606},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66912,"byte_end":66922,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"Supervisor","qualname":"::supervisor::Supervisor","value":"Supervisor {  }","parent":null,"children":[{"krate":0,"index":2608}],"decl_id":null,"docs":" Actor supervisor","sig":null,"attributes":[{"value":"/ Actor supervisor","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":65350,"byte_end":65370,"line_start":11,"line_end":11,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":65371,"byte_end":65374,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Supervisor manages incoming message for actor. In case of actor failure,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":65375,"byte_end":65451,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ supervisor creates new execution context and restarts actor lifecycle.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":65452,"byte_end":65526,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ Supervisor does not re-create actor, it just calls `restarting()`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":65527,"byte_end":65596,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/ method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":65597,"byte_end":65608,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":65609,"byte_end":65612,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Supervisor has same lifecycle as actor. In situation when all addresses to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":65613,"byte_end":65691,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ supervisor get dropped and actor does not execute anything, supervisor","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":65692,"byte_end":65766,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ terminates.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":65767,"byte_end":65782,"line_start":20,"line_end":20,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":65783,"byte_end":65786,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ `Supervisor` can not guarantee that actor successfully process incoming","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":65787,"byte_end":65862,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ message. If actor fails during message processing, this message can not be","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":65863,"byte_end":65941,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ recovered. Sender would receive `Err(Cancelled)` error in this situation.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":65942,"byte_end":66019,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66020,"byte_end":66023,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66024,"byte_end":66038,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66039,"byte_end":66042,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66043,"byte_end":66054,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate actix;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66055,"byte_end":66093,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ # use actix::prelude::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66094,"byte_end":66122,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/ #[derive(Message)]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66123,"byte_end":66145,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"/ struct Die;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66146,"byte_end":66161,"line_start":32,"line_end":32,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66162,"byte_end":66165,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66166,"byte_end":66185,"line_start":34,"line_end":34,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66186,"byte_end":66189,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66190,"byte_end":66218,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66219,"byte_end":66256,"line_start":37,"line_end":37,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66257,"byte_end":66262,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66263,"byte_end":66266,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // To use actor with supervisor actor has to implement `Supervised` trait","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66267,"byte_end":66344,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ impl actix::Supervised for MyActor {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66345,"byte_end":66385,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/     fn restarting(&mut self, ctx: &mut Context<MyActor>) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66386,"byte_end":66448,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/         println!(\"restarting\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66449,"byte_end":66484,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66485,"byte_end":66494,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66495,"byte_end":66500,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66501,"byte_end":66504,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ impl Handler<Die> for MyActor {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66505,"byte_end":66540,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/     type Result = ();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66541,"byte_end":66566,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66567,"byte_end":66570,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     fn handle(&mut self, _: Die, ctx: &mut Context<MyActor>) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66571,"byte_end":66637,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/         ctx.stop();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66638,"byte_end":66661,"line_start":51,"line_end":51,"column_start":1,"column_end":24}},{"value":"/ #       System::current().stop();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66662,"byte_end":66699,"line_start":52,"line_end":52,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66700,"byte_end":66709,"line_start":53,"line_end":53,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66710,"byte_end":66715,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66716,"byte_end":66719,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66720,"byte_end":66735,"line_start":56,"line_end":56,"column_start":1,"column_end":16}},{"value":"/     System::run(|| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66736,"byte_end":66760,"line_start":57,"line_end":57,"column_start":1,"column_end":25}},{"value":"/         let addr = actix::Supervisor::start(|_| MyActor);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66761,"byte_end":66822,"line_start":58,"line_end":58,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66823,"byte_end":66826,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/         addr.do_send(Die);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66827,"byte_end":66857,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/     });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66858,"byte_end":66869,"line_start":61,"line_end":61,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66870,"byte_end":66875,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":66876,"byte_end":66883,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67867,"byte_end":67872,"line_start":99,"line_end":99,"column_start":12,"column_end":17},"name":"start","qualname":"<Supervisor<A>>::start","value":"pub fn start<F>(F) -> Addr<A> where F: FnOnce(&mut A::Context) -> A + 'static,\nA: Actor<Context = Context<A>>","parent":null,"children":[],"decl_id":null,"docs":" Start new supervised actor in current tokio runtime.","sig":null,"attributes":[{"value":"/ Start new supervised actor in current tokio runtime.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67105,"byte_end":67161,"line_start":76,"line_end":76,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67166,"byte_end":67169,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Type of returned address depends on variable type. For example to get","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67174,"byte_end":67247,"line_start":78,"line_end":78,"column_start":5,"column_end":78}},{"value":"/ `Addr<Syn, _>` of newly created actor, use explicitly `Addr<Syn,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67252,"byte_end":67320,"line_start":79,"line_end":79,"column_start":5,"column_end":73}},{"value":"/ _>` type as type of a variable.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67325,"byte_end":67360,"line_start":80,"line_end":80,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67365,"byte_end":67368,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67373,"byte_end":67384,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate actix;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67389,"byte_end":67427,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/ # use actix::prelude::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67432,"byte_end":67460,"line_start":84,"line_end":84,"column_start":5,"column_end":33}},{"value":"/ struct MyActor;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67465,"byte_end":67484,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67489,"byte_end":67492,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67497,"byte_end":67525,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67530,"byte_end":67567,"line_start":88,"line_end":88,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67572,"byte_end":67577,"line_start":89,"line_end":89,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67582,"byte_end":67585,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # impl actix::Supervised for MyActor {}","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67590,"byte_end":67633,"line_start":91,"line_end":91,"column_start":5,"column_end":48}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67638,"byte_end":67655,"line_start":92,"line_end":92,"column_start":5,"column_end":22}},{"value":"/ #    System::run(|| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67660,"byte_end":67685,"line_start":93,"line_end":93,"column_start":5,"column_end":30}},{"value":"/ // Get `Addr` of a MyActor actor","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67690,"byte_end":67726,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ let addr = actix::Supervisor::start(|_| MyActor);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67731,"byte_end":67784,"line_start":95,"line_end":95,"column_start":5,"column_end":58}},{"value":"/ #         System::current().stop();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67789,"byte_end":67828,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/ # });}","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67833,"byte_end":67843,"line_start":97,"line_end":97,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67848,"byte_end":67855,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":68334,"byte_end":68350,"line_start":117,"line_end":117,"column_start":12,"column_end":28},"name":"start_in_arbiter","qualname":"<Supervisor<A>>::start_in_arbiter","value":"pub fn start_in_arbiter<F>(&Addr<Arbiter>, F) -> Addr<A> where\nA: Actor<Context = Context<A>>, F: FnOnce(&mut Context<A>) -> A + Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Start new supervised actor in arbiter's thread.\n","sig":null,"attributes":[{"value":"/ Start new supervised actor in arbiter's thread.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":68271,"byte_end":68322,"line_start":116,"line_end":116,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2612},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":71085,"byte_end":71091,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"System","qualname":"::system::System","value":"System {  }","parent":null,"children":[{"krate":0,"index":2613},{"krate":0,"index":2614},{"krate":0,"index":2615}],"decl_id":null,"docs":" System is an actor which manages runtime.","sig":null,"attributes":[{"value":"/ System is an actor which manages runtime.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":69953,"byte_end":69998,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":69999,"byte_end":70002,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Before starting any actix's actors, `System` actor has to be created and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70003,"byte_end":70079,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ started with `System::run()` call. This method creates new `Arbiter` in","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70080,"byte_end":70155,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/ current thread and starts `System` actor.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70156,"byte_end":70201,"line_start":22,"line_end":22,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70202,"byte_end":70205,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70206,"byte_end":70220,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70221,"byte_end":70224,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70225,"byte_end":70236,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ extern crate actix;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70237,"byte_end":70260,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70261,"byte_end":70264,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70265,"byte_end":70291,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70292,"byte_end":70320,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70321,"byte_end":70324,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ struct Timer {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70325,"byte_end":70343,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/     dur: Duration,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70344,"byte_end":70366,"line_start":33,"line_end":33,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70367,"byte_end":70372,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70373,"byte_end":70376,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ impl Actor for Timer {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70377,"byte_end":70403,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70404,"byte_end":70441,"line_start":37,"line_end":37,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70442,"byte_end":70445,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/     // stop system after `self.dur` seconds","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70446,"byte_end":70493,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/     fn started(&mut self, ctx: &mut Context<Self>) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70494,"byte_end":70550,"line_start":40,"line_end":40,"column_start":1,"column_end":57}},{"value":"/         ctx.run_later(self.dur, |act, ctx| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70551,"byte_end":70599,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/             // Stop current running system.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70600,"byte_end":70647,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"/             System::current().stop();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70648,"byte_end":70689,"line_start":43,"line_end":43,"column_start":1,"column_end":42}},{"value":"/         });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70690,"byte_end":70705,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70706,"byte_end":70715,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70716,"byte_end":70721,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70722,"byte_end":70725,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70726,"byte_end":70741,"line_start":48,"line_end":48,"column_start":1,"column_end":16}},{"value":"/     // initialize system and run it.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70742,"byte_end":70782,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/     // This function blocks current thread","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70783,"byte_end":70829,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/     let code = System::run(|| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70830,"byte_end":70865,"line_start":51,"line_end":51,"column_start":1,"column_end":36}},{"value":"/         // Start `Timer` actor","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70866,"byte_end":70900,"line_start":52,"line_end":52,"column_start":1,"column_end":35}},{"value":"/         Timer {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70901,"byte_end":70920,"line_start":53,"line_end":53,"column_start":1,"column_end":20}},{"value":"/             dur: Duration::new(0, 1),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70921,"byte_end":70962,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/         }.start();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70963,"byte_end":70985,"line_start":55,"line_end":55,"column_start":1,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70986,"byte_end":70997,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":70998,"byte_end":71001,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     std::process::exit(code);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":71002,"byte_end":71035,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":71036,"byte_end":71041,"line_start":59,"line_end":59,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":71042,"byte_end":71049,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":71468,"byte_end":71475,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"builder","qualname":"<System>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Build a new system with a customized tokio runtime.","sig":null,"attributes":[{"value":"/ Build a new system with a customized tokio runtime.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":71282,"byte_end":71337,"line_start":71,"line_end":71,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":71342,"byte_end":71345,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This allows to customize the runtime. See struct level docs on","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":71350,"byte_end":71416,"line_start":73,"line_end":73,"column_start":5,"column_end":71}},{"value":"/ `Builder` for more information.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":71421,"byte_end":71456,"line_start":74,"line_end":74,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":71695,"byte_end":71698,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<System>::new","value":"pub fn new<T: Into<String>>(T) -> SystemRunner","parent":null,"children":[],"decl_id":null,"docs":" Create new system.","sig":null,"attributes":[{"value":"/ Create new system.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":71591,"byte_end":71613,"line_start":80,"line_end":80,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":71618,"byte_end":71621,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This method panics if it can not create tokio runtime","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":71626,"byte_end":71683,"line_start":82,"line_end":82,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":71840,"byte_end":71847,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"current","qualname":"<System>::current","value":"pub fn current() -> System","parent":null,"children":[],"decl_id":null,"docs":" Get current running system.\n","sig":null,"attributes":[{"value":"/ Get current running system.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":71797,"byte_end":71828,"line_start":87,"line_end":87,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":72244,"byte_end":72255,"line_start":103,"line_end":103,"column_start":12,"column_end":23},"name":"set_current","qualname":"<System>::set_current","value":"pub fn set_current(System)","parent":null,"children":[],"decl_id":null,"docs":" Set current running system.\n","sig":null,"attributes":[{"value":"/ Set current running system.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":72182,"byte_end":72213,"line_start":101,"line_end":101,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":72416,"byte_end":72428,"line_start":110,"line_end":110,"column_start":12,"column_end":24},"name":"with_current","qualname":"<System>::with_current","value":"pub fn with_current<F, R>(F) -> R where F: FnOnce(&System) -> R","parent":null,"children":[],"decl_id":null,"docs":" Execute function with system reference.\n","sig":null,"attributes":[{"value":"/ Execute function with system reference.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":72361,"byte_end":72404,"line_start":109,"line_end":109,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":72689,"byte_end":72693,"line_start":121,"line_end":121,"column_start":12,"column_end":16},"name":"stop","qualname":"<System>::stop","value":"pub fn stop(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Stop the system\n","sig":null,"attributes":[{"value":"/ Stop the system","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":72658,"byte_end":72677,"line_start":120,"line_end":120,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":72805,"byte_end":72819,"line_start":126,"line_end":126,"column_start":12,"column_end":26},"name":"stop_with_code","qualname":"<System>::stop_with_code","value":"pub fn stop_with_code(&Self, i32)","parent":null,"children":[],"decl_id":null,"docs":" Stop the system with a particular exit code.\n","sig":null,"attributes":[{"value":"/ Stop the system with a particular exit code.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":72745,"byte_end":72793,"line_start":125,"line_end":125,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":73005,"byte_end":73012,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"arbiter","qualname":"<System>::arbiter","value":"pub fn arbiter(&Self) -> &Addr<Arbiter>","parent":null,"children":[],"decl_id":null,"docs":" System arbiter\n","sig":null,"attributes":[{"value":"/ System arbiter","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":72975,"byte_end":72993,"line_start":134,"line_end":134,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":73117,"byte_end":73125,"line_start":140,"line_end":140,"column_start":12,"column_end":20},"name":"registry","qualname":"<System>::registry","value":"pub fn registry(&Self) -> &SystemRegistry","parent":null,"children":[],"decl_id":null,"docs":" Get current system registry.\n","sig":null,"attributes":[{"value":"/ Get current system registry.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":73073,"byte_end":73105,"line_start":139,"line_end":139,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":73374,"byte_end":73377,"line_start":147,"line_end":147,"column_start":12,"column_end":15},"name":"run","qualname":"<System>::run","value":"pub fn run<F>(F) -> i32 where F: FnOnce() -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" This function will start tokio runtime and will finish once the\n `System::stop()` message get called.\n Function `f` get called within tokio runtime context.\n","sig":null,"attributes":[{"value":"/ This function will start tokio runtime and will finish once the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":73188,"byte_end":73255,"line_start":144,"line_end":144,"column_start":5,"column_end":72}},{"value":"/ `System::stop()` message get called.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":73260,"byte_end":73300,"line_start":145,"line_end":145,"column_start":5,"column_end":45}},{"value":"/ Function `f` get called within tokio runtime context.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":73305,"byte_end":73362,"line_start":146,"line_end":146,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":2624},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":73598,"byte_end":73610,"line_start":158,"line_end":158,"column_start":12,"column_end":24},"name":"SystemRunner","qualname":"::system::SystemRunner","value":"SystemRunner {  }","parent":null,"children":[{"krate":0,"index":2625},{"krate":0,"index":2626}],"decl_id":null,"docs":" Helper object that runs System's event loop\n","sig":null,"attributes":[{"value":"/ Helper object that runs System's event loop","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":73481,"byte_end":73528,"line_start":155,"line_end":155,"column_start":1,"column_end":48}},{"value":"must_use = \"SystemRunner must be run\"","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":73529,"byte_end":73569,"line_start":156,"line_end":156,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":73803,"byte_end":73806,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"run","qualname":"<SystemRunner>::run","value":"pub fn run(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" This function will start event loop and will finish once the\n `System::stop()` function is called.\n","sig":null,"attributes":[{"value":"/ This function will start event loop and will finish once the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":73682,"byte_end":73746,"line_start":164,"line_end":164,"column_start":5,"column_end":69}},{"value":"/ `System::stop()` function is called.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":73751,"byte_end":73791,"line_start":165,"line_end":165,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":74244,"byte_end":74252,"line_start":183,"line_end":183,"column_start":12,"column_end":20},"name":"block_on","qualname":"<SystemRunner>::block_on","value":"pub fn block_on<F, I, E>(&mut Self, F) -> Result<I, E> where F: Future<Item =\nI, Error = I>","parent":null,"children":[],"decl_id":null,"docs":" Execute a future and wait for result.\n","sig":null,"attributes":[{"value":"/ Execute a future and wait for result.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":74191,"byte_end":74232,"line_start":182,"line_end":182,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":740},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77634,"byte_end":77641,"line_start":322,"line_end":322,"column_start":12,"column_end":19},"name":"Builder","qualname":"::system::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742}],"decl_id":null,"docs":" Builder struct for a System actor.","sig":null,"attributes":[{"value":"/ Builder struct for a System actor.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76386,"byte_end":76424,"line_start":275,"line_end":275,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76425,"byte_end":76428,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ Either use `Builder::build` to create a system and start actors.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76429,"byte_end":76497,"line_start":277,"line_end":277,"column_start":1,"column_end":69}},{"value":"/ Alternatively, use `Builder::run` to start the tokio runtime and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76498,"byte_end":76566,"line_start":278,"line_end":278,"column_start":1,"column_end":69}},{"value":"/ run a function in its context.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76567,"byte_end":76601,"line_start":279,"line_end":279,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76602,"byte_end":76605,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76606,"byte_end":76620,"line_start":281,"line_end":281,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76621,"byte_end":76624,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76625,"byte_end":76636,"line_start":283,"line_end":283,"column_start":1,"column_end":12}},{"value":"/ extern crate actix;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76637,"byte_end":76660,"line_start":284,"line_end":284,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76661,"byte_end":76664,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76665,"byte_end":76691,"line_start":286,"line_end":286,"column_start":1,"column_end":27}},{"value":"/ use actix::clock::Clock;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76692,"byte_end":76720,"line_start":287,"line_end":287,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76721,"byte_end":76749,"line_start":288,"line_end":288,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76750,"byte_end":76753,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ struct Timer {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76754,"byte_end":76772,"line_start":290,"line_end":290,"column_start":1,"column_end":19}},{"value":"/     dur: Duration,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76773,"byte_end":76795,"line_start":291,"line_end":291,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76796,"byte_end":76801,"line_start":292,"line_end":292,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76802,"byte_end":76805,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ impl Actor for Timer {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76806,"byte_end":76832,"line_start":294,"line_end":294,"column_start":1,"column_end":27}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76833,"byte_end":76870,"line_start":295,"line_end":295,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76871,"byte_end":76874,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/     // stop system after `self.dur` seconds","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76875,"byte_end":76922,"line_start":297,"line_end":297,"column_start":1,"column_end":48}},{"value":"/     fn started(&mut self, ctx: &mut Context<Self>) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76923,"byte_end":76979,"line_start":298,"line_end":298,"column_start":1,"column_end":57}},{"value":"/         ctx.run_later(self.dur, |act, ctx| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76980,"byte_end":77028,"line_start":299,"line_end":299,"column_start":1,"column_end":49}},{"value":"/             // Stop current running system.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77029,"byte_end":77076,"line_start":300,"line_end":300,"column_start":1,"column_end":48}},{"value":"/             System::current().stop();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77077,"byte_end":77118,"line_start":301,"line_end":301,"column_start":1,"column_end":42}},{"value":"/         });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77119,"byte_end":77134,"line_start":302,"line_end":302,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77135,"byte_end":77144,"line_start":303,"line_end":303,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77145,"byte_end":77150,"line_start":304,"line_end":304,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77151,"byte_end":77154,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77155,"byte_end":77170,"line_start":306,"line_end":306,"column_start":1,"column_end":16}},{"value":"/     // create a custom clock instance","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77171,"byte_end":77212,"line_start":307,"line_end":307,"column_start":1,"column_end":42}},{"value":"/     let clock = Clock::new();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77213,"byte_end":77246,"line_start":308,"line_end":308,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77247,"byte_end":77250,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/     // initialize system and run it","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77251,"byte_end":77290,"line_start":310,"line_end":310,"column_start":1,"column_end":40}},{"value":"/     // This function blocks current thread","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77291,"byte_end":77337,"line_start":311,"line_end":311,"column_start":1,"column_end":47}},{"value":"/     let code = System::builder().clock(clock).run(|| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77338,"byte_end":77396,"line_start":312,"line_end":312,"column_start":1,"column_end":59}},{"value":"/         // Start `Timer` actor. It will use the provided clock instance.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77397,"byte_end":77473,"line_start":313,"line_end":313,"column_start":1,"column_end":77}},{"value":"/         Timer {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77474,"byte_end":77493,"line_start":314,"line_end":314,"column_start":1,"column_end":20}},{"value":"/             dur: Duration::new(0, 1),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77494,"byte_end":77535,"line_start":315,"line_end":315,"column_start":1,"column_end":42}},{"value":"/         }.start();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77536,"byte_end":77558,"line_start":316,"line_end":316,"column_start":1,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77559,"byte_end":77570,"line_start":317,"line_end":317,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77571,"byte_end":77574,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/     std::process::exit(code);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77575,"byte_end":77608,"line_start":319,"line_end":319,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77609,"byte_end":77614,"line_start":320,"line_end":320,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77615,"byte_end":77622,"line_start":321,"line_end":321,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":78002,"byte_end":78006,"line_start":339,"line_end":339,"column_start":12,"column_end":16},"name":"name","qualname":"<Builder>::name","value":"pub fn name<T: Into<String>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the name of the System.\n","sig":null,"attributes":[{"value":"/ Sets the name of the System.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77958,"byte_end":77990,"line_start":338,"line_end":338,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":78240,"byte_end":78245,"line_start":347,"line_end":347,"column_start":12,"column_end":17},"name":"clock","qualname":"<Builder>::clock","value":"pub fn clock(Self, Clock) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the Clock instance that will be used by this System.","sig":null,"attributes":[{"value":"/ Set the Clock instance that will be used by this System.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":78122,"byte_end":78182,"line_start":344,"line_end":344,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":78187,"byte_end":78190,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Defaults to the system clock.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":78195,"byte_end":78228,"line_start":346,"line_end":346,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":78443,"byte_end":78448,"line_start":355,"line_end":355,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(Self) -> SystemRunner","parent":null,"children":[],"decl_id":null,"docs":" Create new System.","sig":null,"attributes":[{"value":"/ Create new System.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":78339,"byte_end":78361,"line_start":352,"line_end":352,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":78366,"byte_end":78369,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ This method panics if it can not create tokio runtime","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":78374,"byte_end":78431,"line_start":354,"line_end":354,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":78705,"byte_end":78708,"line_start":362,"line_end":362,"column_start":12,"column_end":15},"name":"run","qualname":"<Builder>::run","value":"pub fn run<F>(Self, F) -> i32 where F: FnOnce() -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" This function will start tokio runtime and will finish once the\n `System::stop()` message get called.\n Function `f` get called within tokio runtime context.\n","sig":null,"attributes":[{"value":"/ This function will start tokio runtime and will finish once the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":78519,"byte_end":78586,"line_start":359,"line_end":359,"column_start":5,"column_end":72}},{"value":"/ `System::stop()` message get called.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":78591,"byte_end":78631,"line_start":360,"line_end":360,"column_start":5,"column_end":45}},{"value":"/ Function `f` get called within tokio runtime context.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":78636,"byte_end":78693,"line_start":361,"line_end":361,"column_start":5,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":798},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":89099,"byte_end":89105,"line_start":22,"line_end":22,"column_start":11,"column_end":17},"name":"Sender","qualname":"::address::channel::Sender","value":"Sender<M>: Send","parent":null,"children":[{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":89174,"byte_end":89181,"line_start":27,"line_end":27,"column_start":8,"column_end":15},"name":"do_send","qualname":"::address::channel::Sender::do_send","value":"pub fn do_send(&Self, M) -> Result<(), SendError<M>>","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":89234,"byte_end":89242,"line_start":29,"line_end":29,"column_start":8,"column_end":16},"name":"try_send","qualname":"::address::channel::Sender::try_send","value":"pub fn try_send(&Self, M) -> Result<(), SendError<M>>","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":89295,"byte_end":89299,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"send","qualname":"::address::channel::Sender::send","value":"pub fn send(&Self, M) -> Result<Receiver<M::Result>, SendError<M>>","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":89369,"byte_end":89374,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"boxed","qualname":"::address::channel::Sender::boxed","value":"pub fn boxed(&Self) -> Box<Sender<M>>","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":89409,"byte_end":89413,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"hash","qualname":"::address::channel::Sender::hash","value":"pub fn hash(&Self) -> usize","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":805},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":89562,"byte_end":89575,"line_start":41,"line_end":41,"column_start":12,"column_end":25},"name":"AddressSender","qualname":"::address::channel::AddressSender","value":"AddressSender {  }","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809}],"decl_id":null,"docs":" The transmission end of a channel which is used to send values.","sig":null,"attributes":[{"value":"/ The transmission end of a channel which is used to send values.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":89434,"byte_end":89501,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":89502,"byte_end":89505,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This is created by the `channel` method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":89506,"byte_end":89550,"line_start":40,"line_end":40,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":814},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":90651,"byte_end":90666,"line_start":71,"line_end":71,"column_start":12,"column_end":27},"name":"AddressReceiver","qualname":"::address::channel::AddressReceiver","value":"AddressReceiver {  }","parent":null,"children":[{"krate":0,"index":816}],"decl_id":null,"docs":" The receiving end of a channel which implements the `Stream` trait.","sig":null,"attributes":[{"value":"/ The receiving end of a channel which implements the `Stream` trait.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":90389,"byte_end":90460,"line_start":66,"line_end":66,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":90461,"byte_end":90464,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ This is a concrete implementation of a stream which can be used to represent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":90465,"byte_end":90545,"line_start":68,"line_end":68,"column_start":1,"column_end":81}},{"value":"/ a stream of values being computed elsewhere. This is created by the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":90546,"byte_end":90617,"line_start":69,"line_end":69,"column_start":1,"column_end":72}},{"value":"/ `channel` method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":90618,"byte_end":90639,"line_start":70,"line_end":70,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":817},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":90765,"byte_end":90786,"line_start":76,"line_end":76,"column_start":12,"column_end":33},"name":"AddressSenderProducer","qualname":"::address::channel::AddressSenderProducer","value":"AddressSenderProducer {  }","parent":null,"children":[{"krate":0,"index":819}],"decl_id":null,"docs":" Generate `AddressSenders` for the channel\n","sig":null,"attributes":[{"value":"/ Generate `AddressSenders` for the channel","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":90708,"byte_end":90753,"line_start":75,"line_end":75,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":840},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":93727,"byte_end":93734,"line_start":177,"line_end":177,"column_start":8,"column_end":15},"name":"channel","qualname":"::address::channel::channel","value":"pub fn channel<A: Actor>(usize) -> (AddressSender<A>, AddressReceiver<A>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an in-memory channel implementation of the `Stream` trait with\n bounded capacity.","sig":null,"attributes":[{"value":"/ Creates an in-memory channel implementation of the `Stream` trait with","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":92954,"byte_end":93028,"line_start":164,"line_end":164,"column_start":1,"column_end":75}},{"value":"/ bounded capacity.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":93029,"byte_end":93050,"line_start":165,"line_end":165,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":93051,"byte_end":93054,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ This method creates a concrete implementation of the `Stream` trait which","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":93055,"byte_end":93132,"line_start":167,"line_end":167,"column_start":1,"column_end":78}},{"value":"/ can be used to send values across threads in a streaming fashion. This","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":93133,"byte_end":93207,"line_start":168,"line_end":168,"column_start":1,"column_end":75}},{"value":"/ channel is unique in that it implements back pressure to ensure that the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":93208,"byte_end":93284,"line_start":169,"line_end":169,"column_start":1,"column_end":77}},{"value":"/ sender never outpaces the receiver. The channel capacity is equal to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":93285,"byte_end":93357,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ `buffer + num-senders`. In other words, each sender gets a guaranteed slot","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":93358,"byte_end":93436,"line_start":171,"line_end":171,"column_start":1,"column_end":79}},{"value":"/ in the channel capacity, and on top of that there are `buffer` \"first come,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":93437,"byte_end":93516,"line_start":172,"line_end":172,"column_start":1,"column_end":80}},{"value":"/ first serve\" slots available to all senders.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":93517,"byte_end":93565,"line_start":173,"line_end":173,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":93566,"byte_end":93569,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ The `Receiver` returned implements the `Stream` trait and has access to any","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":93570,"byte_end":93649,"line_start":175,"line_end":175,"column_start":1,"column_end":80}},{"value":"/ number of the associated combinators for transforming the result.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":93650,"byte_end":93719,"line_start":176,"line_end":176,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":94709,"byte_end":94718,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"connected","qualname":"<AddressSender<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the channel still open\n","sig":null,"attributes":[{"value":"/ Is the channel still open","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":94668,"byte_end":94697,"line_start":211,"line_end":211,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":95006,"byte_end":95010,"line_start":222,"line_end":222,"column_start":12,"column_end":16},"name":"send","qualname":"<AddressSender<A>>::send","value":"pub fn send<M>(&Self, M) -> Result<Receiver<M::Result>, SendError<M>> where\nA: Handler<M>, A::Context: ToEnvelope<A, M>, M::Result: Send, M: Message +\nSend","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `Sender<A>` with blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `Sender<A>` with blocking.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":94860,"byte_end":94925,"line_start":219,"line_end":219,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":94930,"byte_end":94933,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This function, must be called from inside of a task.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":94938,"byte_end":94994,"line_start":221,"line_end":221,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":96400,"byte_end":96408,"line_start":258,"line_end":258,"column_start":12,"column_end":20},"name":"try_send","qualname":"<AddressSender<A>>::try_send","value":"pub fn try_send<M>(&Self, M, bool) -> Result<(), SendError<M>> where\nA: Handler<M>, <A as Actor>::Context: ToEnvelope<A, M>, M::Result: Send,\nM: Message + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `Sender<A>` without blocking.\n","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `Sender<A>` without blocking.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":96320,"byte_end":96388,"line_start":257,"line_end":257,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":97289,"byte_end":97296,"line_start":286,"line_end":286,"column_start":12,"column_end":19},"name":"do_send","qualname":"<AddressSender<A>>::do_send","value":"pub fn do_send<M>(&Self, M) -> Result<(), SendError<M>> where A: Handler<M>,\n<A as Actor>::Context: ToEnvelope<A, M>, M::Result: Send, M: Message + Send","parent":null,"children":[],"decl_id":null,"docs":" Send a message on this `Sender<A>` without blocking.","sig":null,"attributes":[{"value":"/ Send a message on this `Sender<A>` without blocking.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":97163,"byte_end":97219,"line_start":283,"line_end":283,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":97224,"byte_end":97227,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This function does not park current task.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":97232,"byte_end":97277,"line_start":285,"line_end":285,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":104221,"byte_end":104230,"line_start":508,"line_end":508,"column_start":12,"column_end":21},"name":"connected","qualname":"<AddressSenderProducer<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Are any senders connected\n","sig":null,"attributes":[{"value":"/ Are any senders connected","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":104180,"byte_end":104209,"line_start":507,"line_end":507,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":104344,"byte_end":104352,"line_start":513,"line_end":513,"column_start":12,"column_end":20},"name":"capacity","qualname":"<AddressSenderProducer<A>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get channel capacity\n","sig":null,"attributes":[{"value":"/ Get channel capacity","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":104308,"byte_end":104332,"line_start":512,"line_end":512,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":104563,"byte_end":104575,"line_start":521,"line_end":521,"column_start":12,"column_end":24},"name":"set_capacity","qualname":"<AddressSenderProducer<A>>::set_capacity","value":"pub fn set_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Set channel capacity","sig":null,"attributes":[{"value":"/ Set channel capacity","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":104422,"byte_end":104446,"line_start":517,"line_end":517,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":104451,"byte_end":104454,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ This method wakes up all waiting senders if new capacity is greater","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":104459,"byte_end":104530,"line_start":519,"line_end":519,"column_start":5,"column_end":76}},{"value":"/ than current","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":104535,"byte_end":104551,"line_start":520,"line_end":520,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":105363,"byte_end":105369,"line_start":546,"line_end":546,"column_start":12,"column_end":18},"name":"sender","qualname":"<AddressSenderProducer<A>>::sender","value":"pub fn sender(&Self) -> AddressSender<A>","parent":null,"children":[],"decl_id":null,"docs":" Get sender side of the channel\n","sig":null,"attributes":[{"value":"/ Get sender side of the channel","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":105317,"byte_end":105351,"line_start":545,"line_end":545,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":106467,"byte_end":106476,"line_start":581,"line_end":581,"column_start":12,"column_end":21},"name":"connected","qualname":"<AddressReceiver<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Are any senders still connected\n","sig":null,"attributes":[{"value":"/ Are any senders still connected","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":106420,"byte_end":106455,"line_start":580,"line_end":580,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":106590,"byte_end":106598,"line_start":586,"line_end":586,"column_start":12,"column_end":20},"name":"capacity","qualname":"<AddressReceiver<A>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get channel capacity\n","sig":null,"attributes":[{"value":"/ Get channel capacity","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":106554,"byte_end":106578,"line_start":585,"line_end":585,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":106809,"byte_end":106821,"line_start":594,"line_end":594,"column_start":12,"column_end":24},"name":"set_capacity","qualname":"<AddressReceiver<A>>::set_capacity","value":"pub fn set_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Set channel capacity","sig":null,"attributes":[{"value":"/ Set channel capacity","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":106668,"byte_end":106692,"line_start":590,"line_end":590,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":106697,"byte_end":106700,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ This method wakes up all waiting senders if new capacity is greater","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":106705,"byte_end":106776,"line_start":592,"line_end":592,"column_start":5,"column_end":76}},{"value":"/ than current","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":106781,"byte_end":106797,"line_start":593,"line_end":593,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":107609,"byte_end":107615,"line_start":619,"line_end":619,"column_start":12,"column_end":18},"name":"sender","qualname":"<AddressReceiver<A>>::sender","value":"pub fn sender(&Self) -> AddressSender<A>","parent":null,"children":[],"decl_id":null,"docs":" Get sender side of the channel\n","sig":null,"attributes":[{"value":"/ Get sender side of the channel","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":107563,"byte_end":107597,"line_start":618,"line_end":618,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":108625,"byte_end":108640,"line_start":647,"line_end":647,"column_start":12,"column_end":27},"name":"sender_producer","qualname":"<AddressReceiver<A>>::sender_producer","value":"pub fn sender_producer(&Self) -> AddressSenderProducer<A>","parent":null,"children":[],"decl_id":null,"docs":" Create sender producer\n","sig":null,"attributes":[{"value":"/ Create sender producer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":108587,"byte_end":108613,"line_start":646,"line_end":646,"column_start":5,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":924},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/envelope.rs","byte_start":117612,"byte_end":117622,"line_start":10,"line_end":10,"column_start":11,"column_end":21},"name":"ToEnvelope","qualname":"::address::envelope::ToEnvelope","value":"ToEnvelope<A, M: Message>","parent":null,"children":[{"krate":0,"index":927}],"decl_id":null,"docs":" Converter trait, packs message to suitable envelope\n","sig":null,"attributes":[{"value":"/ Converter trait, packs message to suitable envelope","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/envelope.rs","byte_start":117546,"byte_end":117601,"line_start":9,"line_end":9,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/envelope.rs","byte_start":117758,"byte_end":117762,"line_start":16,"line_end":16,"column_start":8,"column_end":12},"name":"pack","qualname":"::address::envelope::ToEnvelope::pack","value":"pub fn pack(M, Option<Sender<M::Result>>) -> Envelope<A>","parent":{"krate":0,"index":924},"children":[],"decl_id":null,"docs":" Pack message into suitable envelope\n","sig":null,"attributes":[{"value":"/ Pack message into suitable envelope","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/envelope.rs","byte_start":117711,"byte_end":117750,"line_start":15,"line_end":15,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":928},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/envelope.rs","byte_start":117831,"byte_end":117844,"line_start":19,"line_end":19,"column_start":11,"column_end":24},"name":"EnvelopeProxy","qualname":"::address::envelope::EnvelopeProxy","value":"EnvelopeProxy","parent":null,"children":[{"krate":0,"index":929},{"krate":0,"index":930}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":929},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/envelope.rs","byte_start":117856,"byte_end":117861,"line_start":20,"line_end":20,"column_start":10,"column_end":15},"name":"Actor","qualname":"::address::envelope::EnvelopeProxy::Actor","value":"type Actor: Actor;","parent":{"krate":0,"index":928},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/envelope.rs","byte_start":117930,"byte_end":117936,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"handle","qualname":"::address::envelope::EnvelopeProxy::handle","value":"pub fn handle(&mut Self, &mut Self::Actor,\n              &mut <Self::Actor as Actor>::Context)","parent":{"krate":0,"index":928},"children":[],"decl_id":null,"docs":" handle message within new actor and context\n","sig":null,"attributes":[{"value":"/ handle message within new actor and context","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/envelope.rs","byte_start":117875,"byte_end":117922,"line_start":22,"line_end":22,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":935},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/envelope.rs","byte_start":118306,"byte_end":118314,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"Envelope","qualname":"::address::envelope::Envelope","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/envelope.rs","byte_start":118405,"byte_end":118408,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Envelope<A>>::new","value":"pub fn new<M>(M, Option<Sender<M::Result>>) -> Envelope<A> where\nA: Handler<M>, A::Context: AsyncContext<A>, M: Message + Send + 'static,\nM::Result: Send","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/envelope.rs","byte_start":118754,"byte_end":118764,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"with_proxy","qualname":"<Envelope<A>>::with_proxy","value":"pub fn with_proxy(Box<EnvelopeProxy<Actor = A> + Send>) -> Envelope<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":982},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/message.rs","byte_start":120419,"byte_end":120426,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"Request","qualname":"::address::message::Request","value":"Request {  }","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988}],"decl_id":null,"docs":" `Request` is a `Future` which represents asynchronous message sending\n process.\n","sig":null,"attributes":[{"value":"/ `Request` is a `Future` which represents asynchronous message sending","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/message.rs","byte_start":120241,"byte_end":120314,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ process.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/message.rs","byte_start":120315,"byte_end":120327,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"must_use =\n  \"You have to wait on request otherwise Message wont be delivered\"","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/message.rs","byte_start":120328,"byte_end":120407,"line_start":16,"line_end":16,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/message.rs","byte_start":121160,"byte_end":121167,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Request<A, M>>::timeout","value":"pub fn timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set message delivery timeout\n","sig":null,"attributes":[{"value":"/ Set message delivery timeout","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/message.rs","byte_start":121116,"byte_end":121148,"line_start":51,"line_end":51,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1001},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/message.rs","byte_start":122864,"byte_end":122880,"line_start":107,"line_end":107,"column_start":12,"column_end":28},"name":"RecipientRequest","qualname":"::address::message::RecipientRequest","value":"RecipientRequest {  }","parent":null,"children":[{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005}],"decl_id":null,"docs":" `RecipientRequest` is a `Future` which represents asynchronous message\n sending process.\n","sig":null,"attributes":[{"value":"/ `RecipientRequest` is a `Future` which represents asynchronous message","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/message.rs","byte_start":122709,"byte_end":122783,"line_start":104,"line_end":104,"column_start":1,"column_end":75}},{"value":"/ sending process.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/message.rs","byte_start":122784,"byte_end":122804,"line_start":105,"line_end":105,"column_start":1,"column_end":21}},{"value":"must_use = \"future do nothing unless polled\"","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/message.rs","byte_start":122805,"byte_end":122852,"line_start":106,"line_end":106,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/message.rs","byte_start":123163,"byte_end":123166,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"new","qualname":"<RecipientRequest<M>>::new","value":"pub fn new(Option<oneshot::Receiver<M::Result>>, Option<(Box<Sender<M>>, M)>)\n-> RecipientRequest<M>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/message.rs","byte_start":123437,"byte_end":123444,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"timeout","qualname":"<RecipientRequest<M>>::timeout","value":"pub fn timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set message delivery timeout\n","sig":null,"attributes":[{"value":"/ Set message delivery timeout","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/message.rs","byte_start":123393,"byte_end":123425,"line_start":132,"line_end":132,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1067},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":80363,"byte_end":80367,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"Full","qualname":"::address::SendError::Full","value":"SendError::Full(T)","parent":{"krate":0,"index":1065},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1070},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":80376,"byte_end":80382,"line_start":21,"line_end":21,"column_start":5,"column_end":11},"name":"Closed","qualname":"::address::SendError::Closed","value":"SendError::Closed(T)","parent":{"krate":0,"index":1065},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1065},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":80344,"byte_end":80353,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"name":"SendError","qualname":"::address::SendError","value":"pub enum SendError<T> { Full(T), Closed(T), }","parent":null,"children":[{"krate":0,"index":1067},{"krate":0,"index":1070}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2667},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":80545,"byte_end":80551,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"Closed","qualname":"::address::MailboxError::Closed","value":"MailboxError::Closed","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"fail(display = \"Mailbox has closed\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":80501,"byte_end":80540,"line_start":27,"line_end":27,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2669},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":80609,"byte_end":80616,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"Timeout","qualname":"::address::MailboxError::Timeout","value":"MailboxError::Timeout","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"fail(display = \"Message delivery timed out\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":80557,"byte_end":80604,"line_start":29,"line_end":29,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":2666},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":80482,"byte_end":80494,"line_start":26,"line_end":26,"column_start":10,"column_end":22},"name":"MailboxError","qualname":"::address::MailboxError","value":"pub enum MailboxError {\n\n    #[fail(display = \"Mailbox has closed\")]\n    Closed,\n\n    #[fail(display = \"Message delivery timed out\")]\n    Timeout,\n}","parent":null,"children":[{"krate":0,"index":2667},{"krate":0,"index":2669}],"decl_id":null,"docs":" Set of error that can occurred during message delivery process\n","sig":null,"attributes":[{"value":"/ Set of error that can occurred during message delivery process","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":80406,"byte_end":80472,"line_start":25,"line_end":25,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":80655,"byte_end":80665,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SendError<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2679},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":81666,"byte_end":81670,"line_start":71,"line_end":71,"column_start":12,"column_end":16},"name":"Addr","qualname":"::address::Addr","value":"Addr {  }","parent":null,"children":[{"krate":0,"index":2681}],"decl_id":null,"docs":" Address of the actor\n","sig":null,"attributes":[{"value":"/ Address of the actor","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":81613,"byte_end":81637,"line_start":69,"line_end":69,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":81748,"byte_end":81751,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<Addr<A>>::new","value":"pub fn new(AddressSender<A>) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":81881,"byte_end":81890,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"name":"connected","qualname":"<Addr<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if actor is still alive\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":81818,"byte_end":81827,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ Indicates if actor is still alive","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":81832,"byte_end":81869,"line_start":81,"line_end":81,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":82115,"byte_end":82122,"line_start":91,"line_end":91,"column_start":12,"column_end":19},"name":"do_send","qualname":"<Addr<A>>::do_send","value":"pub fn do_send<M>(&Self, M) where M: Message + Send, M::Result: Send,\nA: Handler<M>, A::Context: ToEnvelope<A, M>","parent":null,"children":[],"decl_id":null,"docs":" Send message unconditionally","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":81947,"byte_end":81956,"line_start":86,"line_end":86,"column_start":5,"column_end":14}},{"value":"/ Send message unconditionally","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":81961,"byte_end":81993,"line_start":87,"line_end":87,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":81998,"byte_end":82001,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This method ignores actor's mailbox capacity, it silently fails if","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":82006,"byte_end":82076,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ mailbox is closed.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":82081,"byte_end":82103,"line_start":90,"line_end":90,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":82485,"byte_end":82493,"line_start":105,"line_end":105,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Addr<A>>::try_send","value":"pub fn try_send<M>(&Self, M) -> Result<(), SendError<M>> where M: Message +\nSend + 'static, M::Result: Send, A: Handler<M>, A::Context: ToEnvelope<A, M>","parent":null,"children":[],"decl_id":null,"docs":" Try send message","sig":null,"attributes":[{"value":"/ Try send message","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":82319,"byte_end":82339,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":82344,"byte_end":82347,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method fails if actor's mailbox is full or closed. This method","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":82352,"byte_end":82423,"line_start":103,"line_end":103,"column_start":5,"column_end":76}},{"value":"/ register current task in receivers queue.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":82428,"byte_end":82473,"line_start":104,"line_end":104,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":82933,"byte_end":82937,"line_start":120,"line_end":120,"column_start":12,"column_end":16},"name":"send","qualname":"<Addr<A>>::send","value":"pub fn send<M>(&Self, M) -> Request<A, M> where M: Message + Send,\nM::Result: Send, A: Handler<M>, A::Context: ToEnvelope<A, M>","parent":null,"children":[],"decl_id":null,"docs":" Send asynchronous message and wait for response.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":82726,"byte_end":82735,"line_start":115,"line_end":115,"column_start":5,"column_end":14}},{"value":"/ Send asynchronous message and wait for response.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":82740,"byte_end":82792,"line_start":116,"line_end":116,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":82797,"byte_end":82800,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ Communication channel to the actor is bounded. if returned `Future`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":82805,"byte_end":82876,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/ object get dropped, message cancels.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":82881,"byte_end":82921,"line_start":119,"line_end":119,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":83424,"byte_end":83433,"line_start":135,"line_end":135,"column_start":12,"column_end":21},"name":"recipient","qualname":"<Addr<A>>::recipient","value":"pub fn recipient<M: 'static>(Self) -> Recipient<M> where A: Handler<M>,\nA::Context: ToEnvelope<A, M>, M: Message + Send, M::Result: Send","parent":null,"children":[],"decl_id":null,"docs":" Get `Recipient` for specific message type\n","sig":null,"attributes":[{"value":"/ Get `Recipient` for specific message type","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":83367,"byte_end":83412,"line_start":134,"line_end":134,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1110},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":84255,"byte_end":84264,"line_start":172,"line_end":172,"column_start":12,"column_end":21},"name":"Recipient","qualname":"::address::Recipient","value":"Recipient {  }","parent":null,"children":[{"krate":0,"index":1112}],"decl_id":null,"docs":" `Recipient` type allows to send one specific message to an actor.","sig":null,"attributes":[{"value":"/ `Recipient` type allows to send one specific message to an actor.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":84030,"byte_end":84099,"line_start":168,"line_end":168,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":84100,"byte_end":84103,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ You can get recipient with `Addr<_, _>::recipient()` method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":84104,"byte_end":84168,"line_start":170,"line_end":170,"column_start":1,"column_end":65}},{"value":"/ It is possible to use `Clone::clone()` method to get cloned recipient.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":84169,"byte_end":84243,"line_start":171,"line_end":171,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":84650,"byte_end":84657,"line_start":193,"line_end":193,"column_start":12,"column_end":19},"name":"do_send","qualname":"<Recipient<M>>::do_send","value":"pub fn do_send(&Self, M) -> Result<(), SendError<M>>","parent":null,"children":[],"decl_id":null,"docs":" Send message","sig":null,"attributes":[{"value":"/ Send message","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":84554,"byte_end":84570,"line_start":190,"line_end":190,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":84575,"byte_end":84578,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Deliver message even if recipient's mailbox is full","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":84583,"byte_end":84638,"line_start":192,"line_end":192,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":84909,"byte_end":84917,"line_start":201,"line_end":201,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Recipient<M>>::try_send","value":"pub fn try_send(&Self, M) -> Result<(), SendError<M>>","parent":null,"children":[],"decl_id":null,"docs":" Try send message","sig":null,"attributes":[{"value":"/ Try send message","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":84743,"byte_end":84763,"line_start":197,"line_end":197,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":84768,"byte_end":84771,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ This method fails if actor's mailbox is full or closed. This method","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":84776,"byte_end":84847,"line_start":199,"line_end":199,"column_start":5,"column_end":76}},{"value":"/ register current task in receivers queue.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":84852,"byte_end":84897,"line_start":200,"line_end":200,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":85200,"byte_end":85204,"line_start":209,"line_end":209,"column_start":12,"column_end":16},"name":"send","qualname":"<Recipient<M>>::send","value":"pub fn send(&Self, M) -> RecipientRequest<M>","parent":null,"children":[],"decl_id":null,"docs":" Send message and asynchronously wait for response.","sig":null,"attributes":[{"value":"/ Send message and asynchronously wait for response.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":85004,"byte_end":85058,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":85063,"byte_end":85066,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Communication channel to the actor is bounded. if returned `Request`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":85071,"byte_end":85143,"line_start":207,"line_end":207,"column_start":5,"column_end":77}},{"value":"/ object get dropped, message cancels.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":85148,"byte_end":85188,"line_start":208,"line_end":208,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1151},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/mailbox.rs","byte_start":131060,"byte_end":131067,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"Mailbox","qualname":"::mailbox::Mailbox","value":"Mailbox {  }","parent":null,"children":[{"krate":0,"index":1153}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/mailbox.rs","byte_start":131862,"byte_end":131865,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<Mailbox<A>>::new","value":"pub fn new(AddressReceiver<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/mailbox.rs","byte_start":131841,"byte_end":131850,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/mailbox.rs","byte_start":131945,"byte_end":131953,"line_start":64,"line_end":64,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Mailbox<A>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/mailbox.rs","byte_start":132019,"byte_end":132031,"line_start":68,"line_end":68,"column_start":12,"column_end":24},"name":"set_capacity","qualname":"<Mailbox<A>>::set_capacity","value":"pub fn set_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/mailbox.rs","byte_start":132126,"byte_end":132135,"line_start":73,"line_end":73,"column_start":12,"column_end":21},"name":"connected","qualname":"<Mailbox<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/mailbox.rs","byte_start":132105,"byte_end":132114,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/mailbox.rs","byte_start":132201,"byte_end":132208,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"address","qualname":"<Mailbox<A>>::address","value":"pub fn address(&Self) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/mailbox.rs","byte_start":132285,"byte_end":132300,"line_start":81,"line_end":81,"column_start":12,"column_end":27},"name":"sender_producer","qualname":"<Mailbox<A>>::sender_producer","value":"pub fn sender_producer(&Self) -> AddressSenderProducer<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/mailbox.rs","byte_start":132392,"byte_end":132396,"line_start":85,"line_end":85,"column_start":12,"column_end":16},"name":"poll","qualname":"<Mailbox<A>>::poll","value":"pub fn poll(&mut Self, &mut A, &mut A::Context)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1174},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"actors","qualname":"::actors","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mod.rs","parent":null,"children":[{"krate":0,"index":1175},{"krate":0,"index":1205},{"krate":0,"index":1301}],"decl_id":null,"docs":" Helper actors\n","sig":null,"attributes":[{"value":"/ Helper actors","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mod.rs","byte_start":133263,"byte_end":133280,"line_start":1,"line_end":1,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":1175},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mocker","qualname":"::actors::mocker","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","parent":null,"children":[{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":3503},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1185},{"krate":0,"index":1188},{"krate":0,"index":1190},{"krate":0,"index":1192},{"krate":0,"index":1194},{"krate":0,"index":1197},{"krate":0,"index":1200}],"decl_id":null,"docs":" Mocking utility actor\n This actor wraps any actor, and replaces instances of that actor with\n mocker actor, which is able to accept all messages which the actor can\n receive.","sig":null,"attributes":[{"value":"/ Mocking utility actor","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":133391,"byte_end":133416,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/ This actor wraps any actor, and replaces instances of that actor with","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":133417,"byte_end":133490,"line_start":2,"line_end":2,"column_start":1,"column_end":74}},{"value":"/ mocker actor, which is able to accept all messages which the actor can","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":133491,"byte_end":133565,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ receive.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":133566,"byte_end":133578,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":133579,"byte_end":133582,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Mocking is intended to be achieved by using a pattern similar to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":133583,"byte_end":133651,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":133652,"byte_end":133670,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"/ #[cfg(not(test))]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":133671,"byte_end":133692,"line_start":8,"line_end":8,"column_start":1,"column_end":22}},{"value":"/ type DBClientAct = DBClientActor;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":133693,"byte_end":133730,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"/ #[cfg(test)]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":133731,"byte_end":133747,"line_start":10,"line_end":10,"column_start":1,"column_end":17}},{"value":"/ type DBClientAct = Mocker<DBClientActor>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":133748,"byte_end":133793,"line_start":11,"line_end":11,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":133794,"byte_end":133801,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ Then, the actor should be used as a System Service (or Arbiter Service, but","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":133802,"byte_end":133881,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ take care that all the places which will use the mocked actor is on the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":133882,"byte_end":133957,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ same arbiter). Thus, in a test, it will retrieve the mocker from the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":133958,"byte_end":134030,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ registry instead of the actual actor.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":134031,"byte_end":134072,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":134073,"byte_end":134076,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ To set the mock function in the actor, the init_actor function is used,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":134077,"byte_end":134152,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ which allows the state of an actor to be set when it is started as a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":134153,"byte_end":134225,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/ arbiter or system service. A closure which takes Box<Any> is evaluated for","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":134226,"byte_end":134304,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ every message, and must return Box<Any>, specifically the return type","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":134305,"byte_end":134378,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/ for the message type send.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":134379,"byte_end":134409,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":134410,"byte_end":134413,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ See the mock example to see how it can be used.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":134414,"byte_end":134465,"line_start":24,"line_end":24,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1181},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":134759,"byte_end":134765,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"Mocker","qualname":"::actors::mocker::Mocker","value":"Mocker {  }","parent":null,"children":[{"krate":0,"index":1183},{"krate":0,"index":1184}],"decl_id":null,"docs":" This actor is able to wrap another actor and accept all the messages the\n wrapped actor can, passing it to a closure which can mock the response of\n the actors\n","sig":null,"attributes":[{"value":"/ This actor is able to wrap another actor and accept all the messages the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":134578,"byte_end":134654,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ wrapped actor can, passing it to a closure which can mock the response of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":134655,"byte_end":134732,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ the actors","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":134733,"byte_end":134747,"line_start":35,"line_end":35,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":134920,"byte_end":134924,"line_start":42,"line_end":42,"column_start":12,"column_end":16},"name":"mock","qualname":"<Mocker<T>>::mock","value":"pub fn mock(Box<FnMut(Box<Any>, &mut Context<Mocker<T>>) -> Box<Any>>)\n-> Mocker<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1205},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"resolver","qualname":"::actors::resolver","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","parent":null,"children":[{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":2685},{"krate":0,"index":2694},{"krate":0,"index":2695},{"krate":0,"index":2690},{"krate":0,"index":2691},{"krate":0,"index":2688},{"krate":0,"index":1229},{"krate":0,"index":1234},{"krate":0,"index":2697},{"krate":0,"index":2707},{"krate":0,"index":2708},{"krate":0,"index":2703},{"krate":0,"index":2704},{"krate":0,"index":2701},{"krate":0,"index":1236},{"krate":0,"index":1242},{"krate":0,"index":2710},{"krate":0,"index":2719},{"krate":0,"index":2720},{"krate":0,"index":2715},{"krate":0,"index":2716},{"krate":0,"index":2713},{"krate":0,"index":1244},{"krate":0,"index":2722},{"krate":0,"index":2736},{"krate":0,"index":2741},{"krate":0,"index":2734},{"krate":0,"index":1246},{"krate":0,"index":1250},{"krate":0,"index":1254},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1261},{"krate":0,"index":1264},{"krate":0,"index":1268},{"krate":0,"index":1271},{"krate":0,"index":1277},{"krate":0,"index":1283},{"krate":0,"index":1289},{"krate":0,"index":1293},{"krate":0,"index":1296}],"decl_id":null,"docs":" DNS resolver and connector utility actor","sig":null,"attributes":[{"value":"cfg(feature = \"resolver\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mod.rs","byte_start":133299,"byte_end":133327,"line_start":5,"line_end":5,"column_start":1,"column_end":29}},{"value":"/ DNS resolver and connector utility actor","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136024,"byte_end":136068,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136069,"byte_end":136072,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136073,"byte_end":136087,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136088,"byte_end":136091,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136092,"byte_end":136103,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/ # extern crate actix;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136104,"byte_end":136129,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136130,"byte_end":136157,"line_start":7,"line_end":7,"column_start":1,"column_end":28}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136158,"byte_end":136183,"line_start":8,"line_end":8,"column_start":1,"column_end":26}},{"value":"/ # use futures::{future, Future};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136184,"byte_end":136220,"line_start":9,"line_end":9,"column_start":1,"column_end":37}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136221,"byte_end":136247,"line_start":10,"line_end":10,"column_start":1,"column_end":27}},{"value":"/ use actix::actors::resolver;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136248,"byte_end":136280,"line_start":11,"line_end":11,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136281,"byte_end":136284,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136285,"byte_end":136300,"line_start":13,"line_end":13,"column_start":1,"column_end":16}},{"value":"/     System::run(|| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136301,"byte_end":136325,"line_start":14,"line_end":14,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136326,"byte_end":136329,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn({","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136330,"byte_end":136356,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/             let resolver = resolver::Resolver::from_registry();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136357,"byte_end":136424,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136425,"byte_end":136428,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/             resolver.send(","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136429,"byte_end":136459,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/                 // resolve \"localhost\"","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136460,"byte_end":136502,"line_start":20,"line_end":20,"column_start":1,"column_end":43}},{"value":"/                 resolver::Resolve::host(\"localhost\"))","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136503,"byte_end":136560,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"/                     .then(|addrs| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136561,"byte_end":136600,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/                         println!(\"RESULT: {:?}\", addrs);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136601,"byte_end":136661,"line_start":23,"line_end":23,"column_start":1,"column_end":61}},{"value":"/ #                       System::current().stop();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136662,"byte_end":136715,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"/                         Ok::<_, ()>(())","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136716,"byte_end":136759,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/                     })","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136760,"byte_end":136786,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/         });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136787,"byte_end":136802,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136803,"byte_end":136806,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn({","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136807,"byte_end":136833,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/             let resolver = resolver::Resolver::from_registry();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136834,"byte_end":136901,"line_start":30,"line_end":30,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136902,"byte_end":136905,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/             resolver.send(","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136906,"byte_end":136936,"line_start":32,"line_end":32,"column_start":1,"column_end":31}},{"value":"/                 // connect to a \"localhost:5000\"","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136937,"byte_end":136989,"line_start":33,"line_end":33,"column_start":1,"column_end":53}},{"value":"/                 resolver::Connect::host_and_port(\"localhost\", 5000))","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":136990,"byte_end":137062,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"/                     .then(|stream| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":137063,"byte_end":137103,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/                         println!(\"RESULT: {:?}\", stream);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":137104,"byte_end":137165,"line_start":36,"line_end":36,"column_start":1,"column_end":62}},{"value":"/                         Ok::<_, ()>(())","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":137166,"byte_end":137209,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/                     })","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":137210,"byte_end":137236,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/        });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":137237,"byte_end":137251,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/    });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":137252,"byte_end":137262,"line_start":40,"line_end":40,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":137263,"byte_end":137268,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":137269,"byte_end":137276,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":1227},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":137807,"byte_end":137816,"line_start":62,"line_end":62,"column_start":10,"column_end":19},"name":"Connector","qualname":"::actors::resolver::Connector","value":"Resolver","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.7.0\", note = \"please use `Resolver` instead\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":137727,"byte_end":137797,"line_start":61,"line_end":61,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":1228},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":137915,"byte_end":137929,"line_start":65,"line_end":65,"column_start":10,"column_end":24},"name":"ConnectorError","qualname":"::actors::resolver::ConnectorError","value":"ResolverError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.7.0\", note = \"please use `ResolverError` instead\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":137830,"byte_end":137905,"line_start":64,"line_end":64,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2685},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":137991,"byte_end":137998,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"Resolve","qualname":"::actors::resolver::Resolve","value":"Resolve { name, port }","parent":null,"children":[{"krate":0,"index":2686},{"krate":0,"index":2687}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2686},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":138009,"byte_end":138013,"line_start":69,"line_end":69,"column_start":9,"column_end":13},"name":"name","qualname":"::actors::resolver::Resolve::name","value":"std::string::String","parent":{"krate":0,"index":2685},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2687},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":138031,"byte_end":138035,"line_start":70,"line_end":70,"column_start":9,"column_end":13},"name":"port","qualname":"::actors::resolver::Resolve::port","value":"std::option::Option<u16>","parent":{"krate":0,"index":2685},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":138079,"byte_end":138083,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"host","qualname":"<Resolve>::host","value":"pub fn host<T: AsRef<str>>(T) -> Resolve","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":138235,"byte_end":138248,"line_start":81,"line_end":81,"column_start":12,"column_end":25},"name":"host_and_port","qualname":"<Resolve>::host_and_port","value":"pub fn host_and_port<T: AsRef<str>>(T, u16) -> Resolve","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2697},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":138544,"byte_end":138551,"line_start":94,"line_end":94,"column_start":12,"column_end":19},"name":"Connect","qualname":"::actors::resolver::Connect","value":"Connect { name, port, timeout }","parent":null,"children":[{"krate":0,"index":2698},{"krate":0,"index":2699},{"krate":0,"index":2700}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2698},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":138562,"byte_end":138566,"line_start":95,"line_end":95,"column_start":9,"column_end":13},"name":"name","qualname":"::actors::resolver::Connect::name","value":"std::string::String","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2699},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":138584,"byte_end":138588,"line_start":96,"line_end":96,"column_start":9,"column_end":13},"name":"port","qualname":"::actors::resolver::Connect::port","value":"std::option::Option<u16>","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2700},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":138611,"byte_end":138618,"line_start":97,"line_end":97,"column_start":9,"column_end":16},"name":"timeout","qualname":"::actors::resolver::Connect::timeout","value":"std::time::Duration","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":138659,"byte_end":138663,"line_start":101,"line_end":101,"column_start":12,"column_end":16},"name":"host","qualname":"<Connect>::host","value":"pub fn host<T: AsRef<str>>(T) -> Connect","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":138860,"byte_end":138873,"line_start":109,"line_end":109,"column_start":12,"column_end":25},"name":"host_and_port","qualname":"<Connect>::host_and_port","value":"pub fn host_and_port<T: AsRef<str>>(T, u16) -> Connect","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1241},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":139172,"byte_end":139179,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Connect>::timeout","value":"pub fn timeout(Self, Duration) -> Connect","parent":null,"children":[],"decl_id":null,"docs":" Set connect timeout","sig":null,"attributes":[{"value":"/ Set connect timeout","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":139080,"byte_end":139103,"line_start":117,"line_end":117,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":139108,"byte_end":139111,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ By default timeout is set to a 1 second.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":139116,"byte_end":139160,"line_start":119,"line_end":119,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2710},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":139401,"byte_end":139412,"line_start":131,"line_end":131,"column_start":12,"column_end":23},"name":"ConnectAddr","qualname":"::actors::resolver::ConnectAddr","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2712},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":139413,"byte_end":139427,"line_start":131,"line_end":131,"column_start":24,"column_end":38},"name":"0","qualname":"::actors::resolver::ConnectAddr::0","value":"std::net::SocketAddr","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2723},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":139667,"byte_end":139675,"line_start":141,"line_end":141,"column_start":5,"column_end":13},"name":"Resolver","qualname":"::actors::resolver::ResolverError::Resolver","value":"ResolverError::Resolver(String)","parent":{"krate":0,"index":2722},"children":[],"decl_id":null,"docs":" Failed to resolve the hostname\n","sig":null,"attributes":[{"value":"/ Failed to resolve the hostname","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":139569,"byte_end":139603,"line_start":139,"line_end":139,"column_start":5,"column_end":39}},{"value":"fail(display = \"Failed resolving hostname: {}\", _0)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":139608,"byte_end":139662,"line_start":140,"line_end":140,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2726},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":139764,"byte_end":139776,"line_start":145,"line_end":145,"column_start":5,"column_end":17},"name":"InvalidInput","qualname":"::actors::resolver::ResolverError::InvalidInput","value":"ResolverError::InvalidInput(&'static str)","parent":{"krate":0,"index":2722},"children":[],"decl_id":null,"docs":" Address is invalid\n","sig":null,"attributes":[{"value":"/ Address is invalid","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":139690,"byte_end":139712,"line_start":143,"line_end":143,"column_start":5,"column_end":27}},{"value":"fail(display = \"Invalid input: {}\", _0)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":139717,"byte_end":139759,"line_start":144,"line_end":144,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2729},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":139897,"byte_end":139904,"line_start":149,"line_end":149,"column_start":5,"column_end":12},"name":"Timeout","qualname":"::actors::resolver::ResolverError::Timeout","value":"ResolverError::Timeout","parent":{"krate":0,"index":2722},"children":[],"decl_id":null,"docs":" Connecting took too long\n","sig":null,"attributes":[{"value":"/ Connecting took too long","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":139797,"byte_end":139825,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"fail(display = \"Timeout out while establishing connection\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":139830,"byte_end":139892,"line_start":148,"line_end":148,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2731},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":139971,"byte_end":139978,"line_start":153,"line_end":153,"column_start":5,"column_end":12},"name":"IoError","qualname":"::actors::resolver::ResolverError::IoError","value":"ResolverError::IoError(io::Error)","parent":{"krate":0,"index":2722},"children":[],"decl_id":null,"docs":" Connection io error\n","sig":null,"attributes":[{"value":"/ Connection io error","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":139911,"byte_end":139934,"line_start":151,"line_end":151,"column_start":5,"column_end":28}},{"value":"fail(display = \"{}\", _0)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":139939,"byte_end":139966,"line_start":152,"line_end":152,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":2722},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":139549,"byte_end":139562,"line_start":138,"line_end":138,"column_start":10,"column_end":23},"name":"ResolverError","qualname":"::actors::resolver::ResolverError","value":"pub enum ResolverError {\n\n    /// Failed to resolve the hostname\n    #[fail(display = \"Failed resolving hostname: {}\", _0)]\n    Resolver(String),\n\n    /// Address is invalid\n    #[fail(display = \"Invalid input: {}\", _0)]\n    InvalidInput(&'static str),\n\n    /// Connecting took too long\n    #[fail(display = \"Timeout out while establishing connection\")]\n    Timeout,\n\n    /// Connection io error\n    #[fail(display = \"{}\", _0)]\n    IoError(io::Error),\n}","parent":null,"children":[{"krate":0,"index":2723},{"krate":0,"index":2726},{"krate":0,"index":2729},{"krate":0,"index":2731}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1246},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":140005,"byte_end":140013,"line_start":156,"line_end":156,"column_start":12,"column_end":20},"name":"Resolver","qualname":"::actors::resolver::Resolver","value":"Resolver {  }","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":140157,"byte_end":140160,"line_start":163,"line_end":163,"column_start":12,"column_end":15},"name":"new","qualname":"<Resolver>::new","value":"pub fn new(ResolverConfig, ResolverOpts) -> Resolver","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1289},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":146952,"byte_end":146964,"line_start":382,"line_end":382,"column_start":12,"column_end":24},"name":"TcpConnector","qualname":"::actors::resolver::TcpConnector","value":"TcpConnector {  }","parent":null,"children":[{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292}],"decl_id":null,"docs":" Tcp stream connector\n","sig":null,"attributes":[{"value":"/ Tcp stream connector","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":146916,"byte_end":146940,"line_start":381,"line_end":381,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":147089,"byte_end":147092,"line_start":389,"line_end":389,"column_start":12,"column_end":15},"name":"new","qualname":"<TcpConnector>::new","value":"pub fn new(VecDeque<SocketAddr>) -> TcpConnector","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":147224,"byte_end":147236,"line_start":393,"line_end":393,"column_start":12,"column_end":24},"name":"with_timeout","qualname":"<TcpConnector>::with_timeout","value":"pub fn with_timeout(VecDeque<SocketAddr>, Duration) -> TcpConnector","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1301},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"signal","qualname":"::actors::signal","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","parent":null,"children":[{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":2744},{"krate":0,"index":2760},{"krate":0,"index":2761},{"krate":0,"index":2758},{"krate":0,"index":2757},{"krate":0,"index":2755},{"krate":0,"index":1310},{"krate":0,"index":2763},{"krate":0,"index":2766},{"krate":0,"index":1312},{"krate":0,"index":1314},{"krate":0,"index":1316},{"krate":0,"index":1318},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1342},{"krate":0,"index":1345},{"krate":0,"index":1348},{"krate":0,"index":1350},{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1357},{"krate":0,"index":1362}],"decl_id":null,"docs":" An actor implementation of Unix signal handling","sig":null,"attributes":[{"value":"cfg(feature = \"signal\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mod.rs","byte_start":133347,"byte_end":133373,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"/ An actor implementation of Unix signal handling","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":148495,"byte_end":148546,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":148547,"byte_end":148550,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module implements asynchronous signal handling for Actix. For each","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":148551,"byte_end":148626,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ signal `ProcessSignals` actor sends `Signal` message to all subscriber. To","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":148627,"byte_end":148705,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ subscriber, send `Subscribe` message to `ProcessSignals` actor.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":148706,"byte_end":148773,"line_start":5,"line_end":5,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":148774,"byte_end":148777,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":148778,"byte_end":148792,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":148793,"byte_end":148796,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":148797,"byte_end":148808,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/ # extern crate actix;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":148809,"byte_end":148834,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/ use actix::actors::signal;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":148835,"byte_end":148865,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":148866,"byte_end":148892,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":148893,"byte_end":148896,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ struct Signals;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":148897,"byte_end":148916,"line_start":14,"line_end":14,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":148917,"byte_end":148920,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ impl Actor for Signals {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":148921,"byte_end":148949,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":148950,"byte_end":148987,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":148988,"byte_end":148993,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":148994,"byte_end":148997,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // Shutdown system on and of `SIGINT`, `SIGTERM`, `SIGQUIT` signals","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":148998,"byte_end":149069,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ impl Handler<signal::Signal> for Signals {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149070,"byte_end":149116,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/     type Result = ();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149117,"byte_end":149142,"line_start":22,"line_end":22,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149143,"byte_end":149146,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/     fn handle(&mut self, msg: signal::Signal, _: &mut Context<Self>) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149147,"byte_end":149221,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/         match msg.0 {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149222,"byte_end":149247,"line_start":25,"line_end":25,"column_start":1,"column_end":26}},{"value":"/             signal::SignalType::Int => {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149248,"byte_end":149292,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/                 println!(\"SIGINT received, exiting\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149293,"byte_end":149350,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/                 System::current().stop();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149351,"byte_end":149396,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149397,"byte_end":149414,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/             signal::SignalType::Hup => {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149415,"byte_end":149459,"line_start":30,"line_end":30,"column_start":1,"column_end":45}},{"value":"/                 println!(\"SIGHUP received, reloading\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149460,"byte_end":149519,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/             }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149520,"byte_end":149537,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/             signal::SignalType::Term => {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149538,"byte_end":149583,"line_start":33,"line_end":33,"column_start":1,"column_end":46}},{"value":"/                 println!(\"SIGTERM received, stopping\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149584,"byte_end":149643,"line_start":34,"line_end":34,"column_start":1,"column_end":60}},{"value":"/                 System::current().stop();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149644,"byte_end":149689,"line_start":35,"line_end":35,"column_start":1,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149690,"byte_end":149707,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/             signal::SignalType::Quit => {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149708,"byte_end":149753,"line_start":37,"line_end":37,"column_start":1,"column_end":46}},{"value":"/                 println!(\"SIGQUIT received, exiting\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149754,"byte_end":149812,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/                 System::current().stop();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149813,"byte_end":149858,"line_start":39,"line_end":39,"column_start":1,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149859,"byte_end":149876,"line_start":40,"line_end":40,"column_start":1,"column_end":18}},{"value":"/             _ => (),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149877,"byte_end":149901,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/         }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149902,"byte_end":149915,"line_start":42,"line_end":42,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149916,"byte_end":149925,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149926,"byte_end":149931,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149932,"byte_end":149935,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149936,"byte_end":149951,"line_start":46,"line_end":46,"column_start":1,"column_end":16}},{"value":"/     // initialize system","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149952,"byte_end":149980,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/     System::run(|| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":149981,"byte_end":150005,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/         // Start signals handler","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150006,"byte_end":150042,"line_start":49,"line_end":49,"column_start":1,"column_end":37}},{"value":"/         let addr = Signals.start();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150043,"byte_end":150082,"line_start":50,"line_end":50,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150083,"byte_end":150086,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/         // send SIGTERM","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150087,"byte_end":150114,"line_start":52,"line_end":52,"column_start":1,"column_end":28}},{"value":"/         std::thread::spawn(move || {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150115,"byte_end":150155,"line_start":53,"line_end":53,"column_start":1,"column_end":41}},{"value":"/             // emulate SIGNTERM","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150156,"byte_end":150191,"line_start":54,"line_end":54,"column_start":1,"column_end":36}},{"value":"/             addr.do_send(signal::Signal(signal::SignalType::Term));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150192,"byte_end":150263,"line_start":55,"line_end":55,"column_start":1,"column_end":72}},{"value":"/         });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150264,"byte_end":150279,"line_start":56,"line_end":56,"column_start":1,"column_end":16}},{"value":"/     });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150280,"byte_end":150291,"line_start":57,"line_end":57,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150292,"byte_end":150295,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/     std::process::exit(0);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150296,"byte_end":150326,"line_start":59,"line_end":59,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150327,"byte_end":150332,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150333,"byte_end":150340,"line_start":61,"line_end":61,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2745},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150614,"byte_end":150617,"line_start":77,"line_end":77,"column_start":5,"column_end":8},"name":"Hup","qualname":"::actors::signal::SignalType::Hup","value":"SignalType::Hup","parent":{"krate":0,"index":2744},"children":[],"decl_id":null,"docs":" SIGHUP\n","sig":null,"attributes":[{"value":"/ SIGHUP","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150599,"byte_end":150609,"line_start":76,"line_end":76,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2747},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150638,"byte_end":150641,"line_start":79,"line_end":79,"column_start":5,"column_end":8},"name":"Int","qualname":"::actors::signal::SignalType::Int","value":"SignalType::Int","parent":{"krate":0,"index":2744},"children":[],"decl_id":null,"docs":" SIGINT\n","sig":null,"attributes":[{"value":"/ SIGINT","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150623,"byte_end":150633,"line_start":78,"line_end":78,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2749},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150663,"byte_end":150667,"line_start":81,"line_end":81,"column_start":5,"column_end":9},"name":"Term","qualname":"::actors::signal::SignalType::Term","value":"SignalType::Term","parent":{"krate":0,"index":2744},"children":[],"decl_id":null,"docs":" SIGTERM\n","sig":null,"attributes":[{"value":"/ SIGTERM","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150647,"byte_end":150658,"line_start":80,"line_end":80,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2751},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150689,"byte_end":150693,"line_start":83,"line_end":83,"column_start":5,"column_end":9},"name":"Quit","qualname":"::actors::signal::SignalType::Quit","value":"SignalType::Quit","parent":{"krate":0,"index":2744},"children":[],"decl_id":null,"docs":" SIGQUIT\n","sig":null,"attributes":[{"value":"/ SIGQUIT","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150673,"byte_end":150684,"line_start":82,"line_end":82,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2753},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150716,"byte_end":150721,"line_start":85,"line_end":85,"column_start":5,"column_end":10},"name":"Child","qualname":"::actors::signal::SignalType::Child","value":"SignalType::Child","parent":{"krate":0,"index":2744},"children":[],"decl_id":null,"docs":" SIGCHILD\n","sig":null,"attributes":[{"value":"/ SIGCHILD","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150699,"byte_end":150711,"line_start":84,"line_end":84,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":2744},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150582,"byte_end":150592,"line_start":75,"line_end":75,"column_start":10,"column_end":20},"name":"SignalType","qualname":"::actors::signal::SignalType","value":"pub enum SignalType {\n\n    /// SIGHUP\n    Hup,\n\n    /// SIGINT\n    Int,\n\n    /// SIGTERM\n    Term,\n\n    /// SIGQUIT\n    Quit,\n\n    /// SIGCHILD\n    Child,\n}","parent":null,"children":[{"krate":0,"index":2745},{"krate":0,"index":2747},{"krate":0,"index":2749},{"krate":0,"index":2751},{"krate":0,"index":2753}],"decl_id":null,"docs":" Different types of process signals\n","sig":null,"attributes":[{"value":"/ Different types of process signals","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150493,"byte_end":150531,"line_start":73,"line_end":73,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2763},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150836,"byte_end":150842,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"name":"Signal","qualname":"::actors::signal::Signal","value":"","parent":null,"children":[],"decl_id":null,"docs":" Process signal message\n","sig":null,"attributes":[{"value":"/ Process signal message","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150781,"byte_end":150807,"line_start":92,"line_end":92,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":2765},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150843,"byte_end":150857,"line_start":94,"line_end":94,"column_start":19,"column_end":33},"name":"0","qualname":"::actors::signal::Signal::0","value":"actors::signal::SignalType","parent":{"krate":0,"index":2763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1314},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150975,"byte_end":150989,"line_start":101,"line_end":101,"column_start":12,"column_end":26},"name":"ProcessSignals","qualname":"::actors::signal::ProcessSignals","value":"ProcessSignals {  }","parent":null,"children":[{"krate":0,"index":1315}],"decl_id":null,"docs":" An actor implementation of Unix signal handling\n","sig":null,"attributes":[{"value":"/ An actor implementation of Unix signal handling","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150912,"byte_end":150963,"line_start":100,"line_end":100,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1345},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":153562,"byte_end":153571,"line_start":188,"line_end":188,"column_start":12,"column_end":21},"name":"Subscribe","qualname":"::actors::signal::Subscribe","value":"","parent":null,"children":[],"decl_id":null,"docs":" Subscribe to process signals.\n","sig":null,"attributes":[{"value":"/ Subscribe to process signals.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":153517,"byte_end":153550,"line_start":187,"line_end":187,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1347},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":153572,"byte_end":153593,"line_start":188,"line_end":188,"column_start":22,"column_end":43},"name":"0","qualname":"::actors::signal::Subscribe::0","value":"address::Recipient<actors::signal::Signal>","parent":{"krate":0,"index":1345},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1353},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":154015,"byte_end":154036,"line_start":205,"line_end":205,"column_start":12,"column_end":33},"name":"DefaultSignalsHandler","qualname":"::actors::signal::DefaultSignalsHandler","value":"","parent":null,"children":[],"decl_id":null,"docs":" Default signals handler. This actor sends `SystemExit` message to `System`\n actor for each of `SIGINT`, `SIGTERM`, `SIGQUIT` signals.\n","sig":null,"attributes":[{"value":"/ Default signals handler. This actor sends `SystemExit` message to `System`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":153863,"byte_end":153941,"line_start":203,"line_end":203,"column_start":1,"column_end":79}},{"value":"/ actor for each of `SIGINT`, `SIGTERM`, `SIGQUIT` signals.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":153942,"byte_end":154003,"line_start":204,"line_end":204,"column_start":1,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":1365},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/clock.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"clock","qualname":"::clock","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/clock.rs","parent":null,"children":[{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369}],"decl_id":null,"docs":" A configurable source of time.","sig":null,"attributes":[{"value":"/ A configurable source of time.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/clock.rs","byte_start":155369,"byte_end":155403,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/clock.rs","byte_start":155404,"byte_end":155407,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides an API to get the current instant in such a way that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/clock.rs","byte_start":155408,"byte_end":155485,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ the source of time may be configured. This allows mocking out the source of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/clock.rs","byte_start":155486,"byte_end":155565,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ time in tests.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/clock.rs","byte_start":155566,"byte_end":155584,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/clock.rs","byte_start":155585,"byte_end":155588,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [Module `tokio_timer::clock`] for full documentation.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/clock.rs","byte_start":155589,"byte_end":155650,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/clock.rs","byte_start":155651,"byte_end":155654,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [Module `tokio_timer::clock`]: https://docs.rs/tokio-timer/latest/tokio_timer/clock/index.html","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/clock.rs","byte_start":155655,"byte_end":155753,"line_start":9,"line_end":9,"column_start":1,"column_end":99}}]},{"kind":"Mod","id":{"krate":0,"index":1370},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fut","qualname":"::fut","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","parent":null,"children":[{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":3563},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1398},{"krate":0,"index":1412},{"krate":0,"index":1428},{"krate":0,"index":1445},{"krate":0,"index":1464},{"krate":0,"index":1481},{"krate":0,"index":1510},{"krate":0,"index":1542},{"krate":0,"index":1563},{"krate":0,"index":1579},{"krate":0,"index":1603},{"krate":0,"index":1621},{"krate":0,"index":1637},{"krate":0,"index":1658},{"krate":0,"index":1676},{"krate":0,"index":1696},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1760},{"krate":0,"index":1783},{"krate":0,"index":1789},{"krate":0,"index":1796},{"krate":0,"index":1802},{"krate":0,"index":1809},{"krate":0,"index":1817},{"krate":0,"index":1822},{"krate":0,"index":1825},{"krate":0,"index":1832},{"krate":0,"index":1839},{"krate":0,"index":1847},{"krate":0,"index":1852},{"krate":0,"index":1855}],"decl_id":null,"docs":" Custom `Future` implementation with `Actix` support\n","sig":null,"attributes":[{"value":"/ Custom `Future` implementation with `Actix` support","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":155803,"byte_end":155858,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2768},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/and_then.rs","byte_start":168748,"byte_end":168755,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::fut::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":2772}],"decl_id":null,"docs":" Future for the `and_then` combinator, chaining a computation onto the end of\n another future which completes successfully.","sig":null,"attributes":[{"value":"/ Future for the `and_then` combinator, chaining a computation onto the end of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/and_then.rs","byte_start":168483,"byte_end":168563,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ another future which completes successfully.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/and_then.rs","byte_start":168564,"byte_end":168612,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/and_then.rs","byte_start":168613,"byte_end":168616,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::and_then` method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/and_then.rs","byte_start":168617,"byte_end":168670,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/and_then.rs","byte_start":168688,"byte_end":168736,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2799},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/either.rs","byte_start":171388,"byte_end":171389,"line_start":11,"line_end":11,"column_start":5,"column_end":6},"name":"A","qualname":"::fut::either::Either::A","value":"Either::A(A)","parent":{"krate":0,"index":2796},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/either.rs","byte_start":171355,"byte_end":171383,"line_start":10,"line_end":10,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2802},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/either.rs","byte_start":171432,"byte_end":171433,"line_start":13,"line_end":13,"column_start":5,"column_end":6},"name":"B","qualname":"::fut::either::Either::B","value":"Either::B(B)","parent":{"krate":0,"index":2796},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/either.rs","byte_start":171398,"byte_end":171427,"line_start":12,"line_end":12,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":2796},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/either.rs","byte_start":171336,"byte_end":171342,"line_start":9,"line_end":9,"column_start":10,"column_end":16},"name":"Either","qualname":"::fut::either::Either","value":"pub enum Either<A, B> {\n\n    /// First branch of the type\n    A(A),\n\n    /// Second branch of the type\n    B(B),\n}","parent":null,"children":[{"krate":0,"index":2799},{"krate":0,"index":2802}],"decl_id":null,"docs":" Combines two different futures yielding the same item and error\n types into a single type.\n","sig":null,"attributes":[{"value":"/ Combines two different futures yielding the same item and error","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/either.rs","byte_start":171212,"byte_end":171279,"line_start":6,"line_end":6,"column_start":1,"column_end":68}},{"value":"/ types into a single type.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/either.rs","byte_start":171280,"byte_end":171309,"line_start":7,"line_end":7,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1420},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/either.rs","byte_start":171666,"byte_end":171671,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"name":"split","qualname":"<Either<(T, A), (T, B)>>::split","value":"pub fn split(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Splits out the homogeneous type from an either of tuples.","sig":null,"attributes":[{"value":"/ Splits out the homogeneous type from an either of tuples.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/either.rs","byte_start":171484,"byte_end":171545,"line_start":17,"line_end":17,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/either.rs","byte_start":171550,"byte_end":171553,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method is typically useful when combined with the `Future::select2`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/either.rs","byte_start":171558,"byte_end":171634,"line_start":19,"line_end":19,"column_start":5,"column_end":81}},{"value":"/ combinator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/either.rs","byte_start":171639,"byte_end":171654,"line_start":20,"line_end":20,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2809},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/from_err.rs","byte_start":172655,"byte_end":172662,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"FromErr","qualname":"::fut::from_err::FromErr","value":"FromErr {  }","parent":null,"children":[{"krate":0,"index":2812},{"krate":0,"index":2813}],"decl_id":null,"docs":" Future for the `from_err` combinator, changing the error type of a future.","sig":null,"attributes":[{"value":"/ Future for the `from_err` combinator, changing the error type of a future.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/from_err.rs","byte_start":172441,"byte_end":172519,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/from_err.rs","byte_start":172520,"byte_end":172523,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::from_err` method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/from_err.rs","byte_start":172524,"byte_end":172577,"line_start":9,"line_end":9,"column_start":1,"column_end":54}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/from_err.rs","byte_start":172595,"byte_end":172643,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":1451},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/helpers.rs","byte_start":173471,"byte_end":173483,"line_start":5,"line_end":5,"column_start":11,"column_end":23},"name":"FinishStream","qualname":"::fut::helpers::FinishStream","value":"FinishStream: Sized","parent":null,"children":[{"krate":0,"index":1452}],"decl_id":null,"docs":" Helper trait that add helper method `finish()` to stream objects.\n","sig":null,"attributes":[{"value":"/ Helper trait that add helper method `finish()` to stream objects.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/helpers.rs","byte_start":173376,"byte_end":173445,"line_start":3,"line_end":3,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1452},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/helpers.rs","byte_start":173500,"byte_end":173506,"line_start":6,"line_end":6,"column_start":8,"column_end":14},"name":"finish","qualname":"::fut::helpers::FinishStream::finish","value":"pub fn finish(Self) -> Finish<Self>","parent":{"krate":0,"index":1451},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2818},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/helpers.rs","byte_start":173988,"byte_end":173994,"line_start":23,"line_end":23,"column_start":12,"column_end":18},"name":"Finish","qualname":"::fut::helpers::Finish","value":"","parent":null,"children":[],"decl_id":null,"docs":" A combinator used to convert stream into a future, future resolves\n when stream completes.","sig":null,"attributes":[{"value":"/ A combinator used to convert stream into a future, future resolves","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/helpers.rs","byte_start":173746,"byte_end":173816,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ when stream completes.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/helpers.rs","byte_start":173817,"byte_end":173843,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/helpers.rs","byte_start":173844,"byte_end":173847,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `Stream::finish` method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/helpers.rs","byte_start":173848,"byte_end":173910,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/helpers.rs","byte_start":173928,"byte_end":173976,"line_start":22,"line_end":22,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/helpers.rs","byte_start":174034,"byte_end":174037,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<Finish<S>>::new","value":"pub fn new(S) -> Finish<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2825},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/map.rs","byte_start":174821,"byte_end":174824,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"Map","qualname":"::fut::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":2828},{"krate":0,"index":2829}],"decl_id":null,"docs":" Future for the `map` combinator, changing the type of a future.","sig":null,"attributes":[{"value":"/ Future for the `map` combinator, changing the type of a future.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/map.rs","byte_start":174618,"byte_end":174685,"line_start":6,"line_end":6,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/map.rs","byte_start":174686,"byte_end":174689,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is created by the `ActorFuture::map` method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/map.rs","byte_start":174690,"byte_end":174743,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/map.rs","byte_start":174761,"byte_end":174809,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2834},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/map_err.rs","byte_start":176035,"byte_end":176041,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"MapErr","qualname":"::fut::map_err::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":2837},{"krate":0,"index":2838}],"decl_id":null,"docs":" Future for the `map_err` combinator, changing the error type of a future.","sig":null,"attributes":[{"value":"/ Future for the `map_err` combinator, changing the error type of a future.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/map_err.rs","byte_start":175823,"byte_end":175900,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/map_err.rs","byte_start":175901,"byte_end":175904,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::map_err` method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/map_err.rs","byte_start":175905,"byte_end":175957,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/map_err.rs","byte_start":175975,"byte_end":176023,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1498},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/map_err.rs","byte_start":176925,"byte_end":176932,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"DropErr","qualname":"::fut::map_err::DropErr","value":"DropErr {  }","parent":null,"children":[{"krate":0,"index":1500}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2843},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":177988,"byte_end":178000,"line_start":15,"line_end":15,"column_start":12,"column_end":24},"name":"FutureResult","qualname":"::fut::result::FutureResult","value":"FutureResult {  }","parent":null,"children":[{"krate":0,"index":2847},{"krate":0,"index":2848}],"decl_id":null,"docs":" A future representing a value that is immediately ready.","sig":null,"attributes":[{"value":"/ A future representing a value that is immediately ready.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":177749,"byte_end":177809,"line_start":9,"line_end":9,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":177810,"byte_end":177813,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Created by the `result` function.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":177814,"byte_end":177851,"line_start":11,"line_end":11,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":177869,"byte_end":177917,"line_start":13,"line_end":13,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":1517},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":178694,"byte_end":178700,"line_start":39,"line_end":39,"column_start":8,"column_end":14},"name":"result","qualname":"::fut::result::result","value":"pub fn result<T, E, A>(Result<T, E>) -> FutureResult<T, E, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new \"leaf future\" which will resolve with the given result.","sig":null,"attributes":[{"value":"/ Creates a new \"leaf future\" which will resolve with the given result.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":178073,"byte_end":178146,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":178147,"byte_end":178150,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The returned future represents a computation which is finished immediately.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":178151,"byte_end":178230,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ This can be useful with the `finished` and `failed` base future types to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":178231,"byte_end":178307,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ convert an immediate value to a future to interoperate elsewhere.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":178308,"byte_end":178377,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":178378,"byte_end":178381,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":178382,"byte_end":178396,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":178397,"byte_end":178400,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":178401,"byte_end":178408,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use actix::{fut, Actor, Context};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":178409,"byte_end":178446,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":178447,"byte_end":178450,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":178451,"byte_end":178470,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":178471,"byte_end":178499,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":178500,"byte_end":178537,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":178538,"byte_end":178543,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":178544,"byte_end":178547,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let future_of_1 = fut::result::<u32, u32, MyActor>(Ok(1));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":178548,"byte_end":178610,"line_start":36,"line_end":36,"column_start":1,"column_end":63}},{"value":"/ let future_of_err_2 = fut::result::<u32, u32, MyActor>(Err(2));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":178611,"byte_end":178678,"line_start":37,"line_end":37,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":178679,"byte_end":178686,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1521},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179314,"byte_end":179316,"line_start":65,"line_end":65,"column_start":8,"column_end":10},"name":"ok","qualname":"::fut::result::ok","value":"pub fn ok<T, E, S>(T) -> FutureResult<T, E, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a \"leaf future\" from an immediate value of a finished and\n successful computation.","sig":null,"attributes":[{"value":"/ Creates a \"leaf future\" from an immediate value of a finished and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":178832,"byte_end":178901,"line_start":46,"line_end":46,"column_start":1,"column_end":70}},{"value":"/ successful computation.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":178902,"byte_end":178929,"line_start":47,"line_end":47,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":178930,"byte_end":178933,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The returned future is similar to `result` where it will immediately run a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":178934,"byte_end":179012,"line_start":49,"line_end":49,"column_start":1,"column_end":79}},{"value":"/ scheduled callback with the provided value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179013,"byte_end":179060,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179061,"byte_end":179064,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179065,"byte_end":179079,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179080,"byte_end":179083,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179084,"byte_end":179091,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use actix::fut::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179092,"byte_end":179114,"line_start":55,"line_end":55,"column_start":1,"column_end":23}},{"value":"/ use actix::{Actor, Context};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179115,"byte_end":179147,"line_start":56,"line_end":56,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179148,"byte_end":179151,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179152,"byte_end":179171,"line_start":58,"line_end":58,"column_start":1,"column_end":20}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179172,"byte_end":179200,"line_start":59,"line_end":59,"column_start":1,"column_end":29}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179201,"byte_end":179238,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179239,"byte_end":179244,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179245,"byte_end":179248,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ let future_of_1 = ok::<u32, u32, MyActor>(1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179249,"byte_end":179298,"line_start":63,"line_end":63,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179299,"byte_end":179306,"line_start":64,"line_end":64,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1525},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179833,"byte_end":179836,"line_start":86,"line_end":86,"column_start":8,"column_end":11},"name":"err","qualname":"::fut::result::err","value":"pub fn err<T, E, A>(E) -> FutureResult<T, E, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a \"leaf future\" from an immediate value of a failed computation.","sig":null,"attributes":[{"value":"/ Creates a \"leaf future\" from an immediate value of a failed computation.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179380,"byte_end":179456,"line_start":69,"line_end":69,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179457,"byte_end":179460,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ The returned future is similar to `result` where it will immediately run a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179461,"byte_end":179539,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ scheduled callback with the provided value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179540,"byte_end":179587,"line_start":72,"line_end":72,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179588,"byte_end":179591,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179592,"byte_end":179606,"line_start":74,"line_end":74,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179607,"byte_end":179610,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179611,"byte_end":179618,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/ use actix::{fut, Actor, Context};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179619,"byte_end":179656,"line_start":77,"line_end":77,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179657,"byte_end":179660,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179661,"byte_end":179680,"line_start":79,"line_end":79,"column_start":1,"column_end":20}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179681,"byte_end":179709,"line_start":80,"line_end":80,"column_start":1,"column_end":29}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179710,"byte_end":179747,"line_start":81,"line_end":81,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179748,"byte_end":179753,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179754,"byte_end":179757,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ let future_of_err_1 = fut::err::<u32, u32, MyActor>(1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179758,"byte_end":179817,"line_start":84,"line_end":84,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179818,"byte_end":179825,"line_start":85,"line_end":85,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2854},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_and_then.rs","byte_start":180747,"byte_end":180760,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"StreamAndThen","qualname":"::fut::stream_and_then::StreamAndThen","value":"StreamAndThen {  }","parent":null,"children":[{"krate":0,"index":2858},{"krate":0,"index":2859},{"krate":0,"index":2860}],"decl_id":null,"docs":" A stream combinator which chains a computation onto values produced by a\n stream.","sig":null,"attributes":[{"value":"/ A stream combinator which chains a computation onto values produced by a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_and_then.rs","byte_start":180507,"byte_end":180583,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_and_then.rs","byte_start":180584,"byte_end":180595,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_and_then.rs","byte_start":180596,"byte_end":180599,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `ActorStream::and_then` method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_and_then.rs","byte_start":180600,"byte_end":180669,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_and_then.rs","byte_start":180687,"byte_end":180735,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2866},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_finish.rs","byte_start":182605,"byte_end":182617,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"StreamFinish","qualname":"::fut::stream_finish::StreamFinish","value":"","parent":null,"children":[],"decl_id":null,"docs":" A combinator used to convert stream into a future, future resolves\n when stream completes.","sig":null,"attributes":[{"value":"/ A combinator used to convert stream into a future, future resolves","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_finish.rs","byte_start":182358,"byte_end":182428,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ when stream completes.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_finish.rs","byte_start":182429,"byte_end":182455,"line_start":7,"line_end":7,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_finish.rs","byte_start":182456,"byte_end":182459,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `ActorStream::finish` method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_finish.rs","byte_start":182460,"byte_end":182527,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_finish.rs","byte_start":182545,"byte_end":182593,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2873},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_fold.rs","byte_start":183681,"byte_end":183691,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"StreamFold","qualname":"::fut::stream_fold::StreamFold","value":"StreamFold {  }","parent":null,"children":[{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2880}],"decl_id":null,"docs":" A future used to collect all the results of a stream into one generic type.","sig":null,"attributes":[{"value":"/ A future used to collect all the results of a stream into one generic type.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_fold.rs","byte_start":183457,"byte_end":183536,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_fold.rs","byte_start":183537,"byte_end":183540,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This future is returned by the `ActorStream::fold` method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_fold.rs","byte_start":183541,"byte_end":183603,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_fold.rs","byte_start":183621,"byte_end":183669,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2902},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_map.rs","byte_start":186331,"byte_end":186340,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"StreamMap","qualname":"::fut::stream_map::StreamMap","value":"StreamMap {  }","parent":null,"children":[{"krate":0,"index":2905},{"krate":0,"index":2906}],"decl_id":null,"docs":" A stream combinator which will change the type of a stream from one\n type to another.","sig":null,"attributes":[{"value":"/ A stream combinator which will change the type of a stream from one","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_map.rs","byte_start":186102,"byte_end":186173,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/ type to another.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_map.rs","byte_start":186174,"byte_end":186194,"line_start":7,"line_end":7,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_map.rs","byte_start":186195,"byte_end":186198,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is produced by the `ActorStream::map` method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_map.rs","byte_start":186199,"byte_end":186253,"line_start":9,"line_end":9,"column_start":1,"column_end":55}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_map.rs","byte_start":186271,"byte_end":186319,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2911},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_map_err.rs","byte_start":187632,"byte_end":187644,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"StreamMapErr","qualname":"::fut::stream_map_err::StreamMapErr","value":"StreamMapErr {  }","parent":null,"children":[{"krate":0,"index":2914},{"krate":0,"index":2915}],"decl_id":null,"docs":" A stream combinator which will change the error type of a stream from one\n type to another.","sig":null,"attributes":[{"value":"/ A stream combinator which will change the error type of a stream from one","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_map_err.rs","byte_start":187393,"byte_end":187470,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ type to another.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_map_err.rs","byte_start":187471,"byte_end":187491,"line_start":7,"line_end":7,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_map_err.rs","byte_start":187492,"byte_end":187495,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is produced by the `ActorStream::map_err` method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_map_err.rs","byte_start":187496,"byte_end":187554,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_map_err.rs","byte_start":187572,"byte_end":187620,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2920},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_then.rs","byte_start":188724,"byte_end":188734,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"StreamThen","qualname":"::fut::stream_then::StreamThen","value":"StreamThen {  }","parent":null,"children":[{"krate":0,"index":2924},{"krate":0,"index":2925},{"krate":0,"index":2926}],"decl_id":null,"docs":" A stream combinator which chains a computation onto each item produced by a\n stream.","sig":null,"attributes":[{"value":"/ A stream combinator which chains a computation onto each item produced by a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_then.rs","byte_start":188485,"byte_end":188564,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ stream.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_then.rs","byte_start":188565,"byte_end":188576,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_then.rs","byte_start":188577,"byte_end":188580,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `ActorStream::then` method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_then.rs","byte_start":188581,"byte_end":188646,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_then.rs","byte_start":188664,"byte_end":188712,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2932},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_timeout.rs","byte_start":190829,"byte_end":190842,"line_start":16,"line_end":16,"column_start":12,"column_end":25},"name":"StreamTimeout","qualname":"::fut::stream_timeout::StreamTimeout","value":"StreamTimeout {  }","parent":null,"children":[{"krate":0,"index":2934},{"krate":0,"index":2935},{"krate":0,"index":2936},{"krate":0,"index":2937}],"decl_id":null,"docs":" Future for the `timeout` combinator, interrupts computations if it takes\n more than `timeout`.","sig":null,"attributes":[{"value":"/ Future for the `timeout` combinator, interrupts computations if it takes","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_timeout.rs","byte_start":190586,"byte_end":190662,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ more than `timeout`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_timeout.rs","byte_start":190663,"byte_end":190687,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_timeout.rs","byte_start":190688,"byte_end":190691,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This is created by the `ActorFuture::timeout()` method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_timeout.rs","byte_start":190692,"byte_end":190751,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_timeout.rs","byte_start":190769,"byte_end":190817,"line_start":15,"line_end":15,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2941},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/then.rs","byte_start":192534,"byte_end":192538,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Then","qualname":"::fut::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":2945}],"decl_id":null,"docs":" Future for the `then` combinator, chaining computations on the end of\n another future regardless of its outcome.","sig":null,"attributes":[{"value":"/ Future for the `then` combinator, chaining computations on the end of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/then.rs","byte_start":192283,"byte_end":192356,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ another future regardless of its outcome.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/then.rs","byte_start":192357,"byte_end":192402,"line_start":8,"line_end":8,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/then.rs","byte_start":192403,"byte_end":192406,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::then` method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/then.rs","byte_start":192407,"byte_end":192456,"line_start":10,"line_end":10,"column_start":1,"column_end":50}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/then.rs","byte_start":192474,"byte_end":192522,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2951},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/timeout.rs","byte_start":193792,"byte_end":193799,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"Timeout","qualname":"::fut::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":2953},{"krate":0,"index":2954},{"krate":0,"index":2955}],"decl_id":null,"docs":" Future for the `timeout` combinator, interrupts computations if it takes\n more than `timeout`.","sig":null,"attributes":[{"value":"/ Future for the `timeout` combinator, interrupts computations if it takes","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/timeout.rs","byte_start":193549,"byte_end":193625,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ more than `timeout`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/timeout.rs","byte_start":193626,"byte_end":193650,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/timeout.rs","byte_start":193651,"byte_end":193654,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This is created by the `ActorFuture::timeout()` method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/timeout.rs","byte_start":193655,"byte_end":193714,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/timeout.rs","byte_start":193732,"byte_end":193780,"line_start":15,"line_end":15,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":1739},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":158285,"byte_end":158296,"line_start":80,"line_end":80,"column_start":11,"column_end":22},"name":"ActorFuture","qualname":"::fut::ActorFuture","value":"ActorFuture","parent":null,"children":[{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1747},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1753},{"krate":0,"index":1756},{"krate":0,"index":1759}],"decl_id":null,"docs":" Trait for types which are a placeholder of a value that may become\n available at some later point in time.","sig":null,"attributes":[{"value":"/ Trait for types which are a placeholder of a value that may become","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":156840,"byte_end":156910,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/ available at some later point in time.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":156911,"byte_end":156953,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":156954,"byte_end":156957,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ `ActorFuture` is very similar to a regular `Future`, only with subsequent combinator closures accepting the actor and its context, in addition to the result.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":156958,"byte_end":157119,"line_start":47,"line_end":47,"column_start":1,"column_end":162}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":157120,"byte_end":157123,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ `ActorFuture` allows for use cases where future processing requires access to the actor or its context.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":157124,"byte_end":157231,"line_start":49,"line_end":49,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":157232,"byte_end":157235,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Here is an example of a handler on a single actor, deferring work to another actor, and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":157236,"byte_end":157327,"line_start":51,"line_end":51,"column_start":1,"column_end":92}},{"value":"/ then updating the initiating actor's state:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":157328,"byte_end":157375,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":157376,"byte_end":157379,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":157380,"byte_end":157398,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/ impl Message for SomeMessage {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":157399,"byte_end":157433,"line_start":55,"line_end":55,"column_start":1,"column_end":35}},{"value":"/     type Result = ();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":157434,"byte_end":157459,"line_start":56,"line_end":56,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":157460,"byte_end":157465,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":157466,"byte_end":157469,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ impl Handler<DeferredWork> for OriginalActor {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":157470,"byte_end":157520,"line_start":59,"line_end":59,"column_start":1,"column_end":51}},{"value":"/     type Result = ResponseActFuture<Self, (), Error>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":157521,"byte_end":157578,"line_start":60,"line_end":60,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":157579,"byte_end":157582,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     fn handle(&mut self, _msg: Refresh, ctx: &mut Context<Self>) -> Self::Result {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":157583,"byte_end":157669,"line_start":62,"line_end":62,"column_start":1,"column_end":87}},{"value":"/         let send_to_other = self.other_actor_addr","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":157670,"byte_end":157723,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"/             .send(OtherMessage::new())","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":157724,"byte_end":157766,"line_start":64,"line_end":64,"column_start":1,"column_end":43}},{"value":"/             .map_err(Error::from);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":157767,"byte_end":157805,"line_start":65,"line_end":65,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":157806,"byte_end":157809,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/         let update_self =","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":157810,"byte_end":157839,"line_start":67,"line_end":67,"column_start":1,"column_end":30}},{"value":"/             wrap_future::<_, Self>(send_to_other).map(|result, actor, _ctx| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":157840,"byte_end":157921,"line_start":68,"line_end":68,"column_start":1,"column_end":82}},{"value":"/                 // Actor's state updated here","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":157922,"byte_end":157971,"line_start":69,"line_end":69,"column_start":1,"column_end":50}},{"value":"/                 actor.inner_state.update_from(result);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":157972,"byte_end":158030,"line_start":70,"line_end":70,"column_start":1,"column_end":59}},{"value":"/             });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":158031,"byte_end":158050,"line_start":71,"line_end":71,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":158051,"byte_end":158054,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/         // return the wrapping future","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":158055,"byte_end":158096,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/         Box::new(update_self);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":158097,"byte_end":158131,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":158132,"byte_end":158141,"line_start":75,"line_end":75,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":158142,"byte_end":158147,"line_start":76,"line_end":76,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":158148,"byte_end":158155,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":158156,"byte_end":158159,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ See also [into_actor](trait.WrapFuture.html#tymethod.into_actor), which provides future conversion using trait","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":158160,"byte_end":158274,"line_start":79,"line_end":79,"column_start":1,"column_end":115}}]},{"kind":"Type","id":{"krate":0,"index":1740},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":158399,"byte_end":158403,"line_start":83,"line_end":83,"column_start":10,"column_end":14},"name":"Item","qualname":"::fut::ActorFuture::Item","value":"type Item;","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" The type of value that this future will resolved with if it is\n successful.\n","sig":null,"attributes":[{"value":"/ The type of value that this future will resolved with if it is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":158303,"byte_end":158369,"line_start":81,"line_end":81,"column_start":5,"column_end":71}},{"value":"/ successful.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":158374,"byte_end":158389,"line_start":82,"line_end":82,"column_start":5,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":1741},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":158517,"byte_end":158522,"line_start":87,"line_end":87,"column_start":10,"column_end":15},"name":"Error","qualname":"::fut::ActorFuture::Error","value":"type Error;","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" The type of error that this future will resolve with if it fails in a\n normal fashion.\n","sig":null,"attributes":[{"value":"/ The type of error that this future will resolve with if it fails in a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":158410,"byte_end":158483,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ normal fashion.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":158488,"byte_end":158507,"line_start":86,"line_end":86,"column_start":5,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":1742},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":158582,"byte_end":158587,"line_start":90,"line_end":90,"column_start":10,"column_end":15},"name":"Actor","qualname":"::fut::ActorFuture::Actor","value":"type Actor: Actor;","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" The actor within which this future runs\n","sig":null,"attributes":[{"value":"/ The actor within which this future runs","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":158529,"byte_end":158572,"line_start":89,"line_end":89,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1743},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":158604,"byte_end":158608,"line_start":92,"line_end":92,"column_start":8,"column_end":12},"name":"poll","qualname":"::fut::ActorFuture::poll","value":"pub fn poll(&mut Self, &mut Self::Actor, &mut <Self::Actor as Actor>::Context)\n-> Poll<Self::Item, Self::Error>","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1744},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":158867,"byte_end":158870,"line_start":100,"line_end":100,"column_start":8,"column_end":11},"name":"map","qualname":"::fut::ActorFuture::map","value":"pub fn map<F, U>(Self, F) -> Map<Self, F> where\nF: FnOnce(Self::Item, &mut Self::Actor, &mut <Self::Actor as Actor>::Context)\n-> U, Self: Sized","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Map this future's result to a different type, returning a new future of\n the resulting type.\n","sig":null,"attributes":[{"value":"/ Map this future's result to a different type, returning a new future of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":158756,"byte_end":158831,"line_start":98,"line_end":98,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":158836,"byte_end":158859,"line_start":99,"line_end":99,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":159164,"byte_end":159171,"line_start":110,"line_end":110,"column_start":8,"column_end":15},"name":"map_err","qualname":"::fut::ActorFuture::map_err","value":"pub fn map_err<F, E>(Self, F) -> MapErr<Self, F> where\nF: FnOnce(Self::Error, &mut Self::Actor, &mut <Self::Actor as Actor>::Context)\n-> E, Self: Sized","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Map this future's error to a different error, returning a new future.\n","sig":null,"attributes":[{"value":"/ Map this future's error to a different error, returning a new future.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":159083,"byte_end":159156,"line_start":109,"line_end":109,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":159453,"byte_end":159461,"line_start":120,"line_end":120,"column_start":8,"column_end":16},"name":"drop_err","qualname":"::fut::ActorFuture::drop_err","value":"pub fn drop_err(Self) -> DropErr<Self> where Self: Sized","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Drop this future's error, returning a new future.\n","sig":null,"attributes":[{"value":"/ Drop this future's error, returning a new future.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":159392,"byte_end":159445,"line_start":119,"line_end":119,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1751},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":159696,"byte_end":159704,"line_start":129,"line_end":129,"column_start":8,"column_end":16},"name":"from_err","qualname":"::fut::ActorFuture::from_err","value":"pub fn from_err<E: From<Self::Error>>(Self) -> FromErr<Self, E> where\nSelf: Sized","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Map this future's error to any error implementing `From` for\n this future's `Error`, returning a new future.\n","sig":null,"attributes":[{"value":"/ Map this future's error to any error implementing `From` for","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":159569,"byte_end":159633,"line_start":127,"line_end":127,"column_start":5,"column_end":69}},{"value":"/ this future's `Error`, returning a new future.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":159638,"byte_end":159688,"line_start":128,"line_end":128,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1753},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":159961,"byte_end":159965,"line_start":138,"line_end":138,"column_start":8,"column_end":12},"name":"then","qualname":"::fut::ActorFuture::then","value":"pub fn then<F, B>(Self, F) -> Then<Self, B, F> where\nF: FnOnce(Result<Self::Item, Self::Error>, &mut Self::Actor,\n          &mut <Self::Actor as Actor>::Context) -> B, B: IntoActorFuture<Actor\n= Self::Actor>, Self: Sized","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.\n","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":159829,"byte_end":159905,"line_start":136,"line_end":136,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":159910,"byte_end":159953,"line_start":137,"line_end":137,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":160364,"byte_end":160372,"line_start":152,"line_end":152,"column_start":8,"column_end":16},"name":"and_then","qualname":"::fut::ActorFuture::and_then","value":"pub fn and_then<F, B>(Self, F) -> AndThen<Self, B, F> where\nF: FnOnce(Self::Item, &mut Self::Actor, &mut <Self::Actor as Actor>::Context)\n-> B, B: IntoActorFuture<Error = Self::Error, Actor = Self::Error>,\nSelf: Sized","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Execute another future after this one has resolved successfully.\n","sig":null,"attributes":[{"value":"/ Execute another future after this one has resolved successfully.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":160288,"byte_end":160356,"line_start":151,"line_end":151,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1759},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":160769,"byte_end":160776,"line_start":165,"line_end":165,"column_start":8,"column_end":15},"name":"timeout","qualname":"::fut::ActorFuture::timeout","value":"pub fn timeout(Self, Duration, Self::Error) -> Timeout<Self> where Self: Sized","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Add timeout to futures chain.","sig":null,"attributes":[{"value":"/ Add timeout to futures chain.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":160667,"byte_end":160700,"line_start":162,"line_end":162,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":160705,"byte_end":160708,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ `err` value get returned as a timeout error.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":160713,"byte_end":160761,"line_start":164,"line_end":164,"column_start":5,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":1760},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":161084,"byte_end":161095,"line_start":176,"line_end":176,"column_start":11,"column_end":22},"name":"ActorStream","qualname":"::fut::ActorStream","value":"ActorStream","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1768},{"krate":0,"index":1771},{"krate":0,"index":1774},{"krate":0,"index":1777},{"krate":0,"index":1781},{"krate":0,"index":1782}],"decl_id":null,"docs":" A stream of values, not all of which may have been produced yet.","sig":null,"attributes":[{"value":"/ A stream of values, not all of which may have been produced yet.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":160924,"byte_end":160992,"line_start":173,"line_end":173,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":160993,"byte_end":160996,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ This is similar to `futures::Stream` trait, except it works with `Actor`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":160997,"byte_end":161073,"line_start":175,"line_end":175,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":1761},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":161167,"byte_end":161171,"line_start":178,"line_end":178,"column_start":10,"column_end":14},"name":"Item","qualname":"::fut::ActorStream::Item","value":"type Item;","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" The type of item this stream will yield on success.\n","sig":null,"attributes":[{"value":"/ The type of item this stream will yield on success.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":161102,"byte_end":161157,"line_start":177,"line_end":177,"column_start":5,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":1762},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":161235,"byte_end":161240,"line_start":181,"line_end":181,"column_start":10,"column_end":15},"name":"Error","qualname":"::fut::ActorStream::Error","value":"type Error;","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" The type of error this stream may generate.\n","sig":null,"attributes":[{"value":"/ The type of error this stream may generate.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":161178,"byte_end":161225,"line_start":180,"line_end":180,"column_start":5,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1763},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":161301,"byte_end":161306,"line_start":184,"line_end":184,"column_start":10,"column_end":15},"name":"Actor","qualname":"::fut::ActorStream::Actor","value":"type Actor: Actor;","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" The actor within which this stream runs.\n","sig":null,"attributes":[{"value":"/ The actor within which this stream runs.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":161247,"byte_end":161291,"line_start":183,"line_end":183,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1764},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":161323,"byte_end":161327,"line_start":186,"line_end":186,"column_start":8,"column_end":12},"name":"poll","qualname":"::fut::ActorStream::poll","value":"pub fn poll(&mut Self, &mut Self::Actor, &mut <Self::Actor as Actor>::Context)\n-> Poll<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1765},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":161549,"byte_end":161552,"line_start":193,"line_end":193,"column_start":8,"column_end":11},"name":"map","qualname":"::fut::ActorStream::map","value":"pub fn map<U, F>(Self, F) -> StreamMap<Self, F> where\nF: FnMut(Self::Item, &mut Self::Actor, &mut <Self::Actor as Actor>::Context)\n-> U, Self: Sized","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Converts a stream of type `T` to a stream of type `U`.\n","sig":null,"attributes":[{"value":"/ Converts a stream of type `T` to a stream of type `U`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":161483,"byte_end":161541,"line_start":192,"line_end":192,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":161855,"byte_end":161862,"line_start":203,"line_end":203,"column_start":8,"column_end":15},"name":"map_err","qualname":"::fut::ActorStream::map_err","value":"pub fn map_err<E, F>(Self, F) -> StreamMapErr<Self, F> where\nF: FnMut(Self::Error, &mut Self::Actor, &mut <Self::Actor as Actor>::Context)\n-> E, Self: Sized","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Converts a stream of error type `T` to a stream of error type `E`.\n","sig":null,"attributes":[{"value":"/ Converts a stream of error type `T` to a stream of error type `E`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":161777,"byte_end":161847,"line_start":202,"line_end":202,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1771},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":162220,"byte_end":162224,"line_start":214,"line_end":214,"column_start":8,"column_end":12},"name":"then","qualname":"::fut::ActorStream::then","value":"pub fn then<F, U>(Self, F) -> StreamThen<Self, F, U> where\nF: FnMut(Result<Self::Item, Self::Error>, &mut Self::Actor,\n         &mut <Self::Actor as Actor>::Context) -> U, U: IntoActorFuture<Actor\n= Self::Actor>, Self: Sized","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the resulting\n item to the provided closure `f`.\n","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the resulting","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":162095,"byte_end":162170,"line_start":212,"line_end":212,"column_start":5,"column_end":80}},{"value":"/ item to the provided closure `f`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":162175,"byte_end":162212,"line_start":213,"line_end":213,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":162688,"byte_end":162696,"line_start":229,"line_end":229,"column_start":8,"column_end":16},"name":"and_then","qualname":"::fut::ActorStream::and_then","value":"pub fn and_then<F, U>(Self, F) -> StreamAndThen<Self, F, U> where\nF: FnMut(Self::Item, &mut Self::Actor, &mut <Self::Actor as Actor>::Context)\n-> U, U: IntoActorFuture<Error = Self::Error, Actor = Self::Error>,\nSelf: Sized","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.\n","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":162559,"byte_end":162635,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":162640,"byte_end":162680,"line_start":228,"line_end":228,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1777},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":163122,"byte_end":163126,"line_start":241,"line_end":241,"column_start":8,"column_end":12},"name":"fold","qualname":"::fut::ActorStream::fold","value":"pub fn fold<F, T, Fut>(Self, T, F) -> StreamFold<Self, F, Fut, T> where\nF: FnMut(T, Self::Item, &mut Self::Actor,\n         &mut <Self::Actor as Actor>::Context) -> Fut,\nFut: IntoActorFuture<Actor = Self::Actor, Item = Self::Actor>,\nSelf::Error: From<Fut::Error>, Self: Sized","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Execute an accumulating computation over a stream, collecting all the\n values into one final result.\n","sig":null,"attributes":[{"value":"/ Execute an accumulating computation over a stream, collecting all the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":163003,"byte_end":163076,"line_start":239,"line_end":239,"column_start":5,"column_end":78}},{"value":"/ values into one final result.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":163081,"byte_end":163114,"line_start":240,"line_end":240,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1781},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":163581,"byte_end":163588,"line_start":255,"line_end":255,"column_start":8,"column_end":15},"name":"timeout","qualname":"::fut::ActorStream::timeout","value":"pub fn timeout(Self, Duration, Self::Error) -> StreamTimeout<Self> where\nSelf: Sized, Self::Error: Clone","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Add timeout to stream.","sig":null,"attributes":[{"value":"/ Add timeout to stream.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":163486,"byte_end":163512,"line_start":252,"line_end":252,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":163517,"byte_end":163520,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ `err` value get returned as a timeout error.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":163525,"byte_end":163573,"line_start":254,"line_end":254,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":163856,"byte_end":163862,"line_start":264,"line_end":264,"column_start":8,"column_end":14},"name":"finish","qualname":"::fut::ActorStream::finish","value":"pub fn finish(Self) -> StreamFinish<Self> where Self: Sized","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Converts a stream to a future that resolves when stream finishes.\n","sig":null,"attributes":[{"value":"/ Converts a stream to a future that resolves when stream finishes.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":163779,"byte_end":163848,"line_start":263,"line_end":263,"column_start":5,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":1783},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":164165,"byte_end":164180,"line_start":276,"line_end":276,"column_start":11,"column_end":26},"name":"IntoActorFuture","qualname":"::fut::IntoActorFuture","value":"IntoActorFuture","parent":null,"children":[{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788}],"decl_id":null,"docs":" Class of types which can be converted into an actor future.","sig":null,"attributes":[{"value":"/ Class of types which can be converted into an actor future.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":163970,"byte_end":164033,"line_start":272,"line_end":272,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":164034,"byte_end":164037,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ This trait is very similar to the `IntoIterator` trait and is intended to be","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":164038,"byte_end":164118,"line_start":274,"line_end":274,"column_start":1,"column_end":81}},{"value":"/ used in a very similar fashion.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":164119,"byte_end":164154,"line_start":275,"line_end":275,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1784},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":164288,"byte_end":164294,"line_start":279,"line_end":279,"column_start":10,"column_end":16},"name":"Future","qualname":"::fut::IntoActorFuture::Future","value":"type Future: ActorFuture<Item=Self::Item, Error=Self::Error, Actor=Self::Actor>;","parent":{"krate":0,"index":1783},"children":[],"decl_id":null,"docs":" The future that this type can be converted into.\n","sig":null,"attributes":[{"value":"/ The future that this type can be converted into.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":164187,"byte_end":164239,"line_start":277,"line_end":277,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":1785},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":164425,"byte_end":164429,"line_start":282,"line_end":282,"column_start":10,"column_end":14},"name":"Item","qualname":"::fut::IntoActorFuture::Item","value":"type Item;","parent":{"krate":0,"index":1783},"children":[],"decl_id":null,"docs":" The item that the future may resolve with.\n","sig":null,"attributes":[{"value":"/ The item that the future may resolve with.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":164369,"byte_end":164415,"line_start":281,"line_end":281,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":1786},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":164492,"byte_end":164497,"line_start":284,"line_end":284,"column_start":10,"column_end":15},"name":"Error","qualname":"::fut::IntoActorFuture::Error","value":"type Error;","parent":{"krate":0,"index":1783},"children":[],"decl_id":null,"docs":" The error that the future may resolve with.\n","sig":null,"attributes":[{"value":"/ The error that the future may resolve with.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":164435,"byte_end":164482,"line_start":283,"line_end":283,"column_start":5,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1787},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":164556,"byte_end":164561,"line_start":286,"line_end":286,"column_start":10,"column_end":15},"name":"Actor","qualname":"::fut::IntoActorFuture::Actor","value":"type Actor: Actor;","parent":{"krate":0,"index":1783},"children":[],"decl_id":null,"docs":" The actor within which this future runs\n","sig":null,"attributes":[{"value":"/ The actor within which this future runs","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":164503,"byte_end":164546,"line_start":285,"line_end":285,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":164630,"byte_end":164641,"line_start":289,"line_end":289,"column_start":8,"column_end":19},"name":"into_future","qualname":"::fut::IntoActorFuture::into_future","value":"pub fn into_future(Self) -> Self::Future","parent":{"krate":0,"index":1783},"children":[],"decl_id":null,"docs":" Consumes this object and produces a future.\n","sig":null,"attributes":[{"value":"/ Consumes this object and produces a future.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":164575,"byte_end":164622,"line_start":288,"line_end":288,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":1802},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":165285,"byte_end":165295,"line_start":318,"line_end":318,"column_start":11,"column_end":21},"name":"WrapFuture","qualname":"::fut::WrapFuture","value":"WrapFuture<A>","parent":null,"children":[{"krate":0,"index":1804},{"krate":0,"index":1805},{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1808}],"decl_id":null,"docs":" Helper trait that allows conversion of normal future into `ActorFuture`\n","sig":null,"attributes":[{"value":"/ Helper trait that allows conversion of normal future into `ActorFuture`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":165199,"byte_end":165274,"line_start":317,"line_end":317,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":1804},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":165387,"byte_end":165393,"line_start":323,"line_end":323,"column_start":10,"column_end":16},"name":"Future","qualname":"::fut::WrapFuture::Future","value":"type Future: ActorFuture<Item = Self::Item, Error = Self::Error, Actor = A>;","parent":{"krate":0,"index":1802},"children":[],"decl_id":null,"docs":" The future that this type can be converted into.\n","sig":null,"attributes":[{"value":"/ The future that this type can be converted into.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":165325,"byte_end":165377,"line_start":322,"line_end":322,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":1805},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":165520,"byte_end":165524,"line_start":326,"line_end":326,"column_start":10,"column_end":14},"name":"Item","qualname":"::fut::WrapFuture::Item","value":"type Item;","parent":{"krate":0,"index":1802},"children":[],"decl_id":null,"docs":" The item that the future may resolve with.\n","sig":null,"attributes":[{"value":"/ The item that the future may resolve with.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":165464,"byte_end":165510,"line_start":325,"line_end":325,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":1806},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":165587,"byte_end":165592,"line_start":328,"line_end":328,"column_start":10,"column_end":15},"name":"Error","qualname":"::fut::WrapFuture::Error","value":"type Error;","parent":{"krate":0,"index":1802},"children":[],"decl_id":null,"docs":" The error that the future may resolve with.\n","sig":null,"attributes":[{"value":"/ The error that the future may resolve with.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":165530,"byte_end":165577,"line_start":327,"line_end":327,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1807},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":165621,"byte_end":165630,"line_start":331,"line_end":331,"column_start":8,"column_end":17},"name":"actfuture","qualname":"::fut::WrapFuture::actfuture","value":"pub fn actfuture(Self) -> Self::Future","parent":{"krate":0,"index":1802},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":165709,"byte_end":165719,"line_start":334,"line_end":334,"column_start":8,"column_end":18},"name":"into_actor","qualname":"::fut::WrapFuture::into_actor","value":"pub fn into_actor(Self, &A) -> Self::Future","parent":{"krate":0,"index":1802},"children":[],"decl_id":null,"docs":" Convert normal future to a ActorFuture\n","sig":null,"attributes":[{"value":"/ Convert normal future to a ActorFuture","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":165659,"byte_end":165701,"line_start":333,"line_end":333,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1817},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":166078,"byte_end":166088,"line_start":352,"line_end":352,"column_start":12,"column_end":22},"name":"FutureWrap","qualname":"::fut::FutureWrap","value":"FutureWrap {  }","parent":null,"children":[{"krate":0,"index":1820},{"krate":0,"index":1821}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1822},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":166413,"byte_end":166424,"line_start":365,"line_end":365,"column_start":8,"column_end":19},"name":"wrap_future","qualname":"::fut::wrap_future","value":"pub fn wrap_future<F, A>(F) -> FutureWrap<F, A> where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Converts normal future into `ActorFuture`, allowing its processing to\n use the actor's state.","sig":null,"attributes":[{"value":"/ Converts normal future into `ActorFuture`, allowing its processing to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":166158,"byte_end":166231,"line_start":360,"line_end":360,"column_start":1,"column_end":74}},{"value":"/ use the actor's state.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":166232,"byte_end":166258,"line_start":361,"line_end":361,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":166259,"byte_end":166262,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ See the documentation for [ActorFuture](trait.ActorFuture.html) for a practical example involving both","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":166263,"byte_end":166369,"line_start":363,"line_end":363,"column_start":1,"column_end":107}},{"value":"/ `wrap_future` and `ActorFuture`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":166370,"byte_end":166405,"line_start":364,"line_end":364,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":1832},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":166972,"byte_end":166982,"line_start":394,"line_end":394,"column_start":11,"column_end":21},"name":"WrapStream","qualname":"::fut::WrapStream","value":"WrapStream<A>","parent":null,"children":[{"krate":0,"index":1834},{"krate":0,"index":1835},{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1838}],"decl_id":null,"docs":" Helper trait that allows conversion of normal stream into `ActorStream`\n","sig":null,"attributes":[{"value":"/ Helper trait that allows conversion of normal stream into `ActorStream`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":166886,"byte_end":166961,"line_start":393,"line_end":393,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":1834},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":167074,"byte_end":167080,"line_start":399,"line_end":399,"column_start":10,"column_end":16},"name":"Stream","qualname":"::fut::WrapStream::Stream","value":"type Stream: ActorStream<Item = Self::Item, Error = Self::Error, Actor = A>;","parent":{"krate":0,"index":1832},"children":[],"decl_id":null,"docs":" The stream that this type can be converted into.\n","sig":null,"attributes":[{"value":"/ The stream that this type can be converted into.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":167012,"byte_end":167064,"line_start":398,"line_end":398,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":1835},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":167207,"byte_end":167211,"line_start":402,"line_end":402,"column_start":10,"column_end":14},"name":"Item","qualname":"::fut::WrapStream::Item","value":"type Item;","parent":{"krate":0,"index":1832},"children":[],"decl_id":null,"docs":" The item that the future may resolve with.\n","sig":null,"attributes":[{"value":"/ The item that the future may resolve with.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":167151,"byte_end":167197,"line_start":401,"line_end":401,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":1836},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":167274,"byte_end":167279,"line_start":404,"line_end":404,"column_start":10,"column_end":15},"name":"Error","qualname":"::fut::WrapStream::Error","value":"type Error;","parent":{"krate":0,"index":1832},"children":[],"decl_id":null,"docs":" The error that the future may resolve with.\n","sig":null,"attributes":[{"value":"/ The error that the future may resolve with.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":167217,"byte_end":167264,"line_start":403,"line_end":403,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1837},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":167308,"byte_end":167317,"line_start":407,"line_end":407,"column_start":8,"column_end":17},"name":"actstream","qualname":"::fut::WrapStream::actstream","value":"pub fn actstream(Self) -> Self::Stream","parent":{"krate":0,"index":1832},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1838},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":167396,"byte_end":167406,"line_start":410,"line_end":410,"column_start":8,"column_end":18},"name":"into_actor","qualname":"::fut::WrapStream::into_actor","value":"pub fn into_actor(Self, &A) -> Self::Stream","parent":{"krate":0,"index":1832},"children":[],"decl_id":null,"docs":" Convert normal stream to a ActorStream\n","sig":null,"attributes":[{"value":"/ Convert normal stream to a ActorStream","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":167346,"byte_end":167388,"line_start":409,"line_end":409,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1847},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":167765,"byte_end":167775,"line_start":428,"line_end":428,"column_start":12,"column_end":22},"name":"StreamWrap","qualname":"::fut::StreamWrap","value":"StreamWrap {  }","parent":null,"children":[{"krate":0,"index":1850},{"krate":0,"index":1851}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1852},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":167897,"byte_end":167908,"line_start":437,"line_end":437,"column_start":8,"column_end":19},"name":"wrap_stream","qualname":"::fut::wrap_stream","value":"pub fn wrap_stream<S, A>(S) -> StreamWrap<S, A> where S: Stream","parent":null,"children":[],"decl_id":null,"docs":" Converts normal stream into `ActorStream`\n","sig":null,"attributes":[{"value":"/ Converts normal stream into `ActorStream`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":167844,"byte_end":167889,"line_start":436,"line_end":436,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":1862},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","parent":null,"children":[{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":3789},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":2959},{"krate":0,"index":2981},{"krate":0,"index":2977},{"krate":0,"index":2978},{"krate":0,"index":2974},{"krate":0,"index":2975},{"krate":0,"index":2972},{"krate":0,"index":2966},{"krate":0,"index":2964},{"krate":0,"index":2961},{"krate":0,"index":2982},{"krate":0,"index":2988},{"krate":0,"index":2990},{"krate":0,"index":2992},{"krate":0,"index":2994},{"krate":0,"index":2996},{"krate":0,"index":3004},{"krate":0,"index":3007},{"krate":0,"index":3009},{"krate":0,"index":3012},{"krate":0,"index":3014},{"krate":0,"index":3017},{"krate":0,"index":3019},{"krate":0,"index":3022},{"krate":0,"index":3024},{"krate":0,"index":3027},{"krate":0,"index":3030},{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1887},{"krate":0,"index":1891},{"krate":0,"index":1897},{"krate":0,"index":1901},{"krate":0,"index":1910},{"krate":0,"index":1921},{"krate":0,"index":1927},{"krate":0,"index":1935},{"krate":0,"index":1941},{"krate":0,"index":1949},{"krate":0,"index":1954}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1881},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":195134,"byte_end":195146,"line_start":19,"line_end":19,"column_start":11,"column_end":23},"name":"WriteHandler","qualname":"::io::WriteHandler","value":"WriteHandler<E>","parent":null,"children":[{"krate":0,"index":1883},{"krate":0,"index":1884}],"decl_id":null,"docs":" Write handler","sig":null,"attributes":[{"value":"/ Write handler","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":194935,"byte_end":194952,"line_start":14,"line_end":14,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":194953,"byte_end":194956,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `WriteHandler` is a helper for `AsyncWrite` types. Implementation","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":194957,"byte_end":195026,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/ of this trait is required for `Writer` and `FramedWrite` support.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":195027,"byte_end":195096,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"allow(unused_variables)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":195097,"byte_end":195123,"line_start":18,"line_end":18,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1883},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":195399,"byte_end":195404,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"error","qualname":"::io::WriteHandler::error","value":"pub fn error(&mut Self, E, &mut Self::Context) -> Running","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":" Method is called when writer emits error.","sig":null,"attributes":[{"value":"/ Method is called when writer emits error.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":195212,"byte_end":195257,"line_start":24,"line_end":24,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":195262,"byte_end":195265,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ If this method returns `ErrorAction::Continue` writer processing","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":195270,"byte_end":195338,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ continues otherwise stream processing stops.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":195343,"byte_end":195391,"line_start":27,"line_end":27,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1884},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":195609,"byte_end":195617,"line_start":35,"line_end":35,"column_start":8,"column_end":16},"name":"finished","qualname":"::io::WriteHandler::finished","value":"pub fn finished(&mut Self, &mut Self::Context)","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":" Method is called when writer finishes.","sig":null,"attributes":[{"value":"/ Method is called when writer finishes.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":195495,"byte_end":195537,"line_start":32,"line_end":32,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":195542,"byte_end":195545,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ By default this method stops actor's `Context`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":195550,"byte_end":195601,"line_start":34,"line_end":34,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1887},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":195936,"byte_end":195942,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"Writer","qualname":"::io::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":1890}],"decl_id":null,"docs":" Wrapper for `AsyncWrite` types\n","sig":null,"attributes":[{"value":"/ Wrapper for `AsyncWrite` types","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":195890,"byte_end":195924,"line_start":50,"line_end":50,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1913},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":196560,"byte_end":196563,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<Writer<T, E>>::new","value":"pub fn new<A, C>(T, &mut C) -> Writer<T, E> where A: Actor<Context = C> +\nWriteHandler<E>, C: AsyncContext<A>, T: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1916},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":197438,"byte_end":197443,"line_start":108,"line_end":108,"column_start":12,"column_end":17},"name":"close","qualname":"<Writer<T, E>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Gracefully close sink","sig":null,"attributes":[{"value":"/ Gracefully close sink","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":197354,"byte_end":197379,"line_start":105,"line_end":105,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":197384,"byte_end":197387,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Close process is asynchronous.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":197392,"byte_end":197426,"line_start":107,"line_end":107,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1917},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":197571,"byte_end":197577,"line_start":113,"line_end":113,"column_start":12,"column_end":18},"name":"closed","qualname":"<Writer<T, E>>::closed","value":"pub fn closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if sink is closed\n","sig":null,"attributes":[{"value":"/ Check if sink is closed","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":197532,"byte_end":197559,"line_start":112,"line_end":112,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1918},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":197707,"byte_end":197726,"line_start":118,"line_end":118,"column_start":12,"column_end":31},"name":"set_buffer_capacity","qualname":"<Writer<T, E>>::set_buffer_capacity","value":"pub fn set_buffer_capacity(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Set write buffer capacity\n","sig":null,"attributes":[{"value":"/ Set write buffer capacity","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":197666,"byte_end":197695,"line_start":117,"line_end":117,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1919},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":197955,"byte_end":197960,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"write","qualname":"<Writer<T, E>>::write","value":"pub fn write(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Send item to a sink.\n","sig":null,"attributes":[{"value":"/ Send item to a sink.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":197919,"byte_end":197943,"line_start":124,"line_end":124,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1920},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":198223,"byte_end":198229,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"name":"handle","qualname":"<Writer<T, E>>::handle","value":"pub fn handle(&Self) -> SpawnHandle","parent":null,"children":[],"decl_id":null,"docs":" `SpawnHandle` for this writer\n","sig":null,"attributes":[{"value":"/ `SpawnHandle` for this writer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":198178,"byte_end":198211,"line_start":133,"line_end":133,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1949},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":202862,"byte_end":202873,"line_start":288,"line_end":288,"column_start":12,"column_end":23},"name":"FramedWrite","qualname":"::io::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1952},{"krate":0,"index":1953}],"decl_id":null,"docs":" Wrapper for `AsyncWrite` and `Encoder` types\n","sig":null,"attributes":[{"value":"/ Wrapper for `AsyncWrite` and `Encoder` types","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":202802,"byte_end":202850,"line_start":287,"line_end":287,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1957},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":203019,"byte_end":203022,"line_start":294,"line_end":294,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, U>>::new","value":"pub fn new<A, C>(T, U, &mut C) -> FramedWrite<T, U> where A: Actor<Context =\nC> + WriteHandler<U::Error>, C: AsyncContext<A>, U::Error: 'static, T: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1960},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":203877,"byte_end":203888,"line_start":323,"line_end":323,"column_start":12,"column_end":23},"name":"from_buffer","qualname":"<FramedWrite<T, U>>::from_buffer","value":"pub fn from_buffer<A, C>(T, U, BytesMut, &mut C) -> FramedWrite<T, U> where\nA: Actor<Context = C> + WriteHandler<U::Error>, C: AsyncContext<A>,\nU::Error: 'static, T: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1963},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":204836,"byte_end":204841,"line_start":357,"line_end":357,"column_start":12,"column_end":17},"name":"close","qualname":"<FramedWrite<T, U>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Gracefully close sink","sig":null,"attributes":[{"value":"/ Gracefully close sink","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":204752,"byte_end":204777,"line_start":354,"line_end":354,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":204782,"byte_end":204785,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ Close process is asynchronous.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":204790,"byte_end":204824,"line_start":356,"line_end":356,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1964},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":204969,"byte_end":204975,"line_start":362,"line_end":362,"column_start":12,"column_end":18},"name":"closed","qualname":"<FramedWrite<T, U>>::closed","value":"pub fn closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if sink is closed\n","sig":null,"attributes":[{"value":"/ Check if sink is closed","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":204930,"byte_end":204957,"line_start":361,"line_end":361,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1965},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":205105,"byte_end":205124,"line_start":367,"line_end":367,"column_start":12,"column_end":31},"name":"set_buffer_capacity","qualname":"<FramedWrite<T, U>>::set_buffer_capacity","value":"pub fn set_buffer_capacity(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Set write buffer capacity\n","sig":null,"attributes":[{"value":"/ Set write buffer capacity","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":205064,"byte_end":205093,"line_start":366,"line_end":366,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1966},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":205303,"byte_end":205308,"line_start":374,"line_end":374,"column_start":12,"column_end":17},"name":"write","qualname":"<FramedWrite<T, U>>::write","value":"pub fn write(&mut Self, U::Item)","parent":null,"children":[],"decl_id":null,"docs":" Write item\n","sig":null,"attributes":[{"value":"/ Write item","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":205277,"byte_end":205291,"line_start":373,"line_end":373,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1968},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":205647,"byte_end":205653,"line_start":385,"line_end":385,"column_start":12,"column_end":18},"name":"handle","qualname":"<FramedWrite<T, U>>::handle","value":"pub fn handle(&Self) -> SpawnHandle","parent":null,"children":[],"decl_id":null,"docs":" `SpawnHandle` for this writer\n","sig":null,"attributes":[{"value":"/ `SpawnHandle` for this writer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":205602,"byte_end":205635,"line_start":384,"line_end":384,"column_start":5,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":1969},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"msgs","qualname":"::msgs","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","parent":null,"children":[{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1972},{"krate":0,"index":1973},{"krate":0,"index":1974},{"krate":0,"index":1977},{"krate":0,"index":1979},{"krate":0,"index":1983},{"krate":0,"index":1986},{"krate":0,"index":1992},{"krate":0,"index":1995},{"krate":0,"index":1999},{"krate":0,"index":2004},{"krate":0,"index":2008},{"krate":0,"index":2014},{"krate":0,"index":2018}],"decl_id":null,"docs":" Actix system messages\n","sig":null,"attributes":[{"value":"/ Actix system messages","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":205724,"byte_end":205749,"line_start":1,"line_end":1,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1974},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":205871,"byte_end":205882,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"StopArbiter","qualname":"::msgs::StopArbiter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stop arbiter execution\n","sig":null,"attributes":[{"value":"/ Stop arbiter execution","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":205833,"byte_end":205859,"line_start":8,"line_end":8,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":1976},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":205883,"byte_end":205890,"line_start":9,"line_end":9,"column_start":24,"column_end":31},"name":"0","qualname":"::msgs::StopArbiter::0","value":"i32","parent":{"krate":0,"index":1974},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1979},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":205997,"byte_end":206007,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"StartActor","qualname":"::msgs::StartActor","value":"","parent":null,"children":[],"decl_id":null,"docs":" Start actor in arbiter's thread\n","sig":null,"attributes":[{"value":"/ Start actor in arbiter's thread","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":205950,"byte_end":205985,"line_start":15,"line_end":15,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1988},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":206172,"byte_end":206175,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<StartActor<A>>::new","value":"pub fn new<F>(F) -> Self where F: FnOnce(&mut Context<A>) -> A + Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1999},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":207421,"byte_end":207428,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"Execute","qualname":"::msgs::Execute","value":"","parent":null,"children":[],"decl_id":null,"docs":" Execute function in arbiter's thread","sig":null,"attributes":[{"value":"/ Execute function in arbiter's thread","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":206794,"byte_end":206834,"line_start":50,"line_end":50,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":206835,"byte_end":206838,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Arbiter` actor handles Execute message.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":206839,"byte_end":206882,"line_start":52,"line_end":52,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":206883,"byte_end":206886,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":206887,"byte_end":206900,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":206901,"byte_end":206904,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":206905,"byte_end":206916,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/ # extern crate actix;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":206917,"byte_end":206942,"line_start":57,"line_end":57,"column_start":1,"column_end":26}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":206943,"byte_end":206969,"line_start":58,"line_end":58,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":206970,"byte_end":206973,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ struct MyActor {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":206974,"byte_end":206994,"line_start":60,"line_end":60,"column_start":1,"column_end":21}},{"value":"/     addr: Addr<Arbiter>,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":206995,"byte_end":207023,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":207024,"byte_end":207029,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":207030,"byte_end":207033,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":207034,"byte_end":207062,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":207063,"byte_end":207100,"line_start":65,"line_end":65,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":207101,"byte_end":207104,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/     fn started(&mut self, ctx: &mut Context<Self>) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":207105,"byte_end":207161,"line_start":67,"line_end":67,"column_start":1,"column_end":57}},{"value":"/         self.addr","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":207162,"byte_end":207183,"line_start":68,"line_end":68,"column_start":1,"column_end":22}},{"value":"/             .do_send(actix::msgs::Execute::new(|| -> Result<(), ()> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":207184,"byte_end":207257,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/                 // do something","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":207258,"byte_end":207293,"line_start":70,"line_end":70,"column_start":1,"column_end":36}},{"value":"/                 // ...","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":207294,"byte_end":207320,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/                 Ok(())","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":207321,"byte_end":207347,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/             }));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":207348,"byte_end":207368,"line_start":73,"line_end":73,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":207369,"byte_end":207378,"line_start":74,"line_end":74,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":207379,"byte_end":207384,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/ fn main() {}","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":207385,"byte_end":207401,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":207402,"byte_end":207409,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2011},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":207703,"byte_end":207706,"line_start":90,"line_end":90,"column_start":12,"column_end":15},"name":"new","qualname":"<Execute<I, E>>::new","value":"pub fn new<F>(F) -> Self where F: FnOnce() -> Result<I, E> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2013},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":207875,"byte_end":207879,"line_start":98,"line_end":98,"column_start":12,"column_end":16},"name":"exec","qualname":"<Execute<I, E>>::exec","value":"pub fn exec(Self) -> Result<I, E>","parent":null,"children":[],"decl_id":null,"docs":" Execute enclosed function\n","sig":null,"attributes":[{"value":"/ Execute enclosed function","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":207834,"byte_end":207863,"line_start":97,"line_end":97,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":2023},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"registry","qualname":"::registry","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","parent":null,"children":[{"krate":0,"index":2024},{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":3833},{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032},{"krate":0,"index":2033},{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2043},{"krate":0,"index":3050},{"krate":0,"index":3052},{"krate":0,"index":2044},{"krate":0,"index":2049},{"krate":0,"index":3054},{"krate":0,"index":3057},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2065},{"krate":0,"index":2073}],"decl_id":null,"docs":" Actors registry","sig":null,"attributes":[{"value":"/ Actors registry","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":208338,"byte_end":208357,"line_start":1,"line_end":1,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":208358,"byte_end":208361,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An Actor can register itself as a service. A Service can be defined as an","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":208362,"byte_end":208439,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ `ArbiterService`, which is unique per arbiter, or a `SystemService`, which","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":208440,"byte_end":208518,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ is unique per system.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":208519,"byte_end":208544,"line_start":5,"line_end":5,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":3050},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210541,"byte_end":210549,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"name":"Registry","qualname":"::registry::Registry","value":"Registry {  }","parent":null,"children":[{"krate":0,"index":3051}],"decl_id":null,"docs":" Actors registry","sig":null,"attributes":[{"value":"/ Actors registry","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209000,"byte_end":209019,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209020,"byte_end":209023,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ An Actor can register itself as a service. A Service can be defined as an","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209024,"byte_end":209101,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ `ArbiterService`, which is unique per arbiter, or a `SystemService`, which","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209102,"byte_end":209180,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ is unique per system.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209181,"byte_end":209206,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209207,"byte_end":209210,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ If an arbiter service is used outside of a running arbiter, it panics.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209211,"byte_end":209285,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209286,"byte_end":209289,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209290,"byte_end":209303,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209304,"byte_end":209307,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209308,"byte_end":209319,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate actix;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209320,"byte_end":209358,"line_start":37,"line_end":37,"column_start":1,"column_end":39}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209359,"byte_end":209385,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209386,"byte_end":209389,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ #[derive(Message)]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209390,"byte_end":209412,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"/ struct Ping;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209413,"byte_end":209429,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209430,"byte_end":209433,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ #[derive(Default)]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209434,"byte_end":209456,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"/ struct MyActor1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209457,"byte_end":209477,"line_start":44,"line_end":44,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209478,"byte_end":209481,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor1 {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209482,"byte_end":209511,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209512,"byte_end":209549,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209550,"byte_end":209555,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ impl actix::Supervised for MyActor1 {}","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209556,"byte_end":209598,"line_start":49,"line_end":49,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209599,"byte_end":209602,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ impl ArbiterService for MyActor1 {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209603,"byte_end":209641,"line_start":51,"line_end":51,"column_start":1,"column_end":39}},{"value":"/    fn service_started(&mut self, ctx: &mut Context<Self>) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209642,"byte_end":209705,"line_start":52,"line_end":52,"column_start":1,"column_end":64}},{"value":"/       println!(\"Service started\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209706,"byte_end":209744,"line_start":53,"line_end":53,"column_start":1,"column_end":39}},{"value":"/    }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209745,"byte_end":209753,"line_start":54,"line_end":54,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209754,"byte_end":209759,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209760,"byte_end":209763,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ impl Handler<Ping> for MyActor1 {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209764,"byte_end":209801,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/    type Result = ();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209802,"byte_end":209826,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209827,"byte_end":209830,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/    fn handle(&mut self, _: Ping, ctx: &mut Context<Self>) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209831,"byte_end":209894,"line_start":60,"line_end":60,"column_start":1,"column_end":64}},{"value":"/       println!(\"ping\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209895,"byte_end":209922,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/ #     System::current().stop();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209923,"byte_end":209958,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/    }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209959,"byte_end":209967,"line_start":63,"line_end":63,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209968,"byte_end":209973,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209974,"byte_end":209977,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ struct MyActor2;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209978,"byte_end":209998,"line_start":66,"line_end":66,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":209999,"byte_end":210002,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor2 {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210003,"byte_end":210032,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/    type Context = Context<Self>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210033,"byte_end":210069,"line_start":69,"line_end":69,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210070,"byte_end":210073,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/    fn started(&mut self, _: &mut Context<Self>) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210074,"byte_end":210127,"line_start":71,"line_end":71,"column_start":1,"column_end":54}},{"value":"/       // get MyActor1 address from the registry","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210128,"byte_end":210179,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/       let act = Arbiter::registry().get::<MyActor1>();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210180,"byte_end":210238,"line_start":73,"line_end":73,"column_start":1,"column_end":59}},{"value":"/       act.do_send(Ping);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210239,"byte_end":210267,"line_start":74,"line_end":74,"column_start":1,"column_end":29}},{"value":"/    }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210268,"byte_end":210276,"line_start":75,"line_end":75,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210277,"byte_end":210282,"line_start":76,"line_end":76,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210283,"byte_end":210286,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210287,"byte_end":210302,"line_start":78,"line_end":78,"column_start":1,"column_end":16}},{"value":"/     // initialize system","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210303,"byte_end":210331,"line_start":79,"line_end":79,"column_start":1,"column_end":29}},{"value":"/     let code = System::run(|| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210332,"byte_end":210367,"line_start":80,"line_end":80,"column_start":1,"column_end":36}},{"value":"/         // Start MyActor2 in new Arbiter","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210368,"byte_end":210412,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/         Arbiter::start(|_| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210413,"byte_end":210445,"line_start":82,"line_end":82,"column_start":1,"column_end":33}},{"value":"/             MyActor2","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210446,"byte_end":210470,"line_start":83,"line_end":83,"column_start":1,"column_end":25}},{"value":"/         });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210471,"byte_end":210486,"line_start":84,"line_end":84,"column_start":1,"column_end":16}},{"value":"/     });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210487,"byte_end":210498,"line_start":85,"line_end":85,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210499,"byte_end":210504,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210505,"byte_end":210512,"line_start":87,"line_end":87,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":2044},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210664,"byte_end":210678,"line_start":95,"line_end":95,"column_start":11,"column_end":25},"name":"ArbiterService","qualname":"::registry::ArbiterService","value":"ArbiterService: Actor<Context = Context<Self>> + Supervised + Default","parent":null,"children":[{"krate":0,"index":2045},{"krate":0,"index":2047},{"krate":0,"index":2048}],"decl_id":null,"docs":" Trait defines arbiter's service.\n","sig":null,"attributes":[{"value":"/ Trait defines arbiter's service.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210590,"byte_end":210626,"line_start":93,"line_end":93,"column_start":1,"column_end":37}},{"value":"allow(unused_variables)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210627,"byte_end":210653,"line_start":94,"line_end":94,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2045},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210787,"byte_end":210800,"line_start":97,"line_end":97,"column_start":8,"column_end":21},"name":"start_service","qualname":"::registry::ArbiterService::start_service","value":"pub fn start_service() -> Addr<Self>","parent":{"krate":0,"index":2044},"children":[],"decl_id":null,"docs":" Construct and start arbiter service\n","sig":null,"attributes":[{"value":"/ Construct and start arbiter service","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210740,"byte_end":210779,"line_start":96,"line_end":96,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2047},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":211031,"byte_end":211046,"line_start":106,"line_end":106,"column_start":8,"column_end":23},"name":"service_started","qualname":"::registry::ArbiterService::service_started","value":"pub fn service_started(&mut Self, &mut Context<Self>)","parent":{"krate":0,"index":2044},"children":[],"decl_id":null,"docs":" Method is called during service initialization.\n","sig":null,"attributes":[{"value":"/ Method is called during service initialization.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210972,"byte_end":211023,"line_start":105,"line_end":105,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2048},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":211144,"byte_end":211157,"line_start":109,"line_end":109,"column_start":8,"column_end":21},"name":"from_registry","qualname":"::registry::ArbiterService::from_registry","value":"pub fn from_registry() -> Addr<Self>","parent":{"krate":0,"index":2044},"children":[],"decl_id":null,"docs":" Get actor's address from arbiter registry\n","sig":null,"attributes":[{"value":"/ Get actor's address from arbiter registry","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":211091,"byte_end":211136,"line_start":108,"line_end":108,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2051},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":211566,"byte_end":211569,"line_start":124,"line_end":124,"column_start":12,"column_end":15},"name":"get","qualname":"<Registry>::get","value":"pub fn get<A: ArbiterService + Actor<Context = Context<A>>>(&Self) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":" Query registry for specific actor. Returns address of the actor.\n If actor is not registered, starts new actor and\n return address of newly created actor.\n","sig":null,"attributes":[{"value":"/ Query registry for specific actor. Returns address of the actor.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":211382,"byte_end":211450,"line_start":121,"line_end":121,"column_start":5,"column_end":73}},{"value":"/ If actor is not registered, starts new actor and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":211455,"byte_end":211507,"line_start":122,"line_end":122,"column_start":5,"column_end":57}},{"value":"/ return address of newly created actor.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":211512,"byte_end":211554,"line_start":123,"line_end":123,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2053},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":212105,"byte_end":212110,"line_start":140,"line_end":140,"column_start":12,"column_end":17},"name":"query","qualname":"<Registry>::query","value":"pub fn query<A: ArbiterService + Actor<Context = Context<A>>>(&Self)\n-> Option<Addr<A>>","parent":null,"children":[],"decl_id":null,"docs":" Check if actor is in registry, if so, return its address\n","sig":null,"attributes":[{"value":"/ Check if actor is in registry, if so, return its address","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":212033,"byte_end":212093,"line_start":139,"line_end":139,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2055},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":212533,"byte_end":212536,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"set","qualname":"<Registry>::set","value":"pub fn set<A: ArbiterService + Actor<Context = Context<A>>>(&Self, Addr<A>)","parent":null,"children":[],"decl_id":null,"docs":" Add new actor to the registry by address, panic if actor is already running\n","sig":null,"attributes":[{"value":"/ Add new actor to the registry by address, panic if actor is already running","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":212442,"byte_end":212521,"line_start":150,"line_end":150,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":3054},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":214251,"byte_end":214265,"line_start":220,"line_end":220,"column_start":12,"column_end":26},"name":"SystemRegistry","qualname":"::registry::SystemRegistry","value":"SystemRegistry {  }","parent":null,"children":[{"krate":0,"index":3055},{"krate":0,"index":3056}],"decl_id":null,"docs":" System wide actors registry","sig":null,"attributes":[{"value":"/ System wide actors registry","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":212912,"byte_end":212943,"line_start":163,"line_end":163,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":212944,"byte_end":212947,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ System registry serves same purpose as [Registry](struct.Registry.html),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":212948,"byte_end":213024,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/ except it is shared across all arbiters.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213025,"byte_end":213069,"line_start":166,"line_end":166,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213070,"byte_end":213073,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213074,"byte_end":213087,"line_start":168,"line_end":168,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213088,"byte_end":213091,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213092,"byte_end":213103,"line_start":170,"line_end":170,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate actix;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213104,"byte_end":213142,"line_start":171,"line_end":171,"column_start":1,"column_end":39}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213143,"byte_end":213169,"line_start":172,"line_end":172,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213170,"byte_end":213173,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ #[derive(Message)]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213174,"byte_end":213196,"line_start":174,"line_end":174,"column_start":1,"column_end":23}},{"value":"/ struct Ping;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213197,"byte_end":213213,"line_start":175,"line_end":175,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213214,"byte_end":213217,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ #[derive(Default)]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213218,"byte_end":213240,"line_start":177,"line_end":177,"column_start":1,"column_end":23}},{"value":"/ struct MyActor1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213241,"byte_end":213261,"line_start":178,"line_end":178,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213262,"byte_end":213265,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor1 {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213266,"byte_end":213295,"line_start":180,"line_end":180,"column_start":1,"column_end":30}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213296,"byte_end":213333,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213334,"byte_end":213339,"line_start":182,"line_end":182,"column_start":1,"column_end":6}},{"value":"/ impl actix::Supervised for MyActor1 {}","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213340,"byte_end":213382,"line_start":183,"line_end":183,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213383,"byte_end":213386,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ impl SystemService for MyActor1 {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213387,"byte_end":213424,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"/     fn service_started(&mut self, ctx: &mut Context<Self>) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213425,"byte_end":213489,"line_start":186,"line_end":186,"column_start":1,"column_end":65}},{"value":"/         println!(\"Service started\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213490,"byte_end":213530,"line_start":187,"line_end":187,"column_start":1,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213531,"byte_end":213540,"line_start":188,"line_end":188,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213541,"byte_end":213546,"line_start":189,"line_end":189,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213547,"byte_end":213550,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ impl Handler<Ping> for MyActor1 {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213551,"byte_end":213588,"line_start":191,"line_end":191,"column_start":1,"column_end":38}},{"value":"/     type Result = ();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213589,"byte_end":213614,"line_start":192,"line_end":192,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213615,"byte_end":213618,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/     fn handle(&mut self, _: Ping, ctx: &mut Context<Self>) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213619,"byte_end":213683,"line_start":194,"line_end":194,"column_start":1,"column_end":65}},{"value":"/         println!(\"ping\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213684,"byte_end":213713,"line_start":195,"line_end":195,"column_start":1,"column_end":30}},{"value":"/ #       System::current().stop();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213714,"byte_end":213751,"line_start":196,"line_end":196,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213752,"byte_end":213761,"line_start":197,"line_end":197,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213762,"byte_end":213767,"line_start":198,"line_end":198,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213768,"byte_end":213771,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ struct MyActor2;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213772,"byte_end":213792,"line_start":200,"line_end":200,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213793,"byte_end":213796,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor2 {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213797,"byte_end":213826,"line_start":202,"line_end":202,"column_start":1,"column_end":30}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213827,"byte_end":213864,"line_start":203,"line_end":203,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213865,"byte_end":213868,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/     fn started(&mut self, _: &mut Context<Self>) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213869,"byte_end":213923,"line_start":205,"line_end":205,"column_start":1,"column_end":55}},{"value":"/         let act = System::current().registry().get::<MyActor1>();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213924,"byte_end":213993,"line_start":206,"line_end":206,"column_start":1,"column_end":70}},{"value":"/         act.do_send(Ping);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":213994,"byte_end":214024,"line_start":207,"line_end":207,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":214025,"byte_end":214034,"line_start":208,"line_end":208,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":214035,"byte_end":214040,"line_start":209,"line_end":209,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":214041,"byte_end":214044,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":214045,"byte_end":214060,"line_start":211,"line_end":211,"column_start":1,"column_end":16}},{"value":"/     // initialize system","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":214061,"byte_end":214089,"line_start":212,"line_end":212,"column_start":1,"column_end":29}},{"value":"/     let code = System::run(|| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":214090,"byte_end":214125,"line_start":213,"line_end":213,"column_start":1,"column_end":36}},{"value":"/         // Start MyActor2","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":214126,"byte_end":214155,"line_start":214,"line_end":214,"column_start":1,"column_end":30}},{"value":"/         let addr = MyActor2.start();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":214156,"byte_end":214196,"line_start":215,"line_end":215,"column_start":1,"column_end":41}},{"value":"/     });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":214197,"byte_end":214208,"line_start":216,"line_end":216,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":214209,"byte_end":214214,"line_start":217,"line_end":217,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":214215,"byte_end":214222,"line_start":218,"line_end":218,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":2059},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":214547,"byte_end":214560,"line_start":230,"line_end":230,"column_start":11,"column_end":24},"name":"SystemService","qualname":"::registry::SystemService","value":"SystemService: Actor<Context = Context<Self>> + Supervised + Default","parent":null,"children":[{"krate":0,"index":2060},{"krate":0,"index":2062},{"krate":0,"index":2063}],"decl_id":null,"docs":" Trait defines system's service.\n","sig":null,"attributes":[{"value":"/ Trait defines system's service.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":214474,"byte_end":214509,"line_start":228,"line_end":228,"column_start":1,"column_end":36}},{"value":"allow(unused_variables)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":214510,"byte_end":214536,"line_start":229,"line_end":229,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":214668,"byte_end":214681,"line_start":232,"line_end":232,"column_start":8,"column_end":21},"name":"start_service","qualname":"::registry::SystemService::start_service","value":"pub fn start_service(&Addr<Arbiter>) -> Addr<Self>","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Construct and start system service\n","sig":null,"attributes":[{"value":"/ Construct and start system service","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":214622,"byte_end":214660,"line_start":231,"line_end":231,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":214947,"byte_end":214962,"line_start":241,"line_end":241,"column_start":8,"column_end":23},"name":"service_started","qualname":"::registry::SystemService::service_started","value":"pub fn service_started(&mut Self, &mut Context<Self>)","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Method is called during service initialization.\n","sig":null,"attributes":[{"value":"/ Method is called during service initialization.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":214888,"byte_end":214939,"line_start":240,"line_end":240,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":215059,"byte_end":215072,"line_start":244,"line_end":244,"column_start":8,"column_end":21},"name":"from_registry","qualname":"::registry::SystemService::from_registry","value":"pub fn from_registry() -> Addr<Self>","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Get actor's address from system registry\n","sig":null,"attributes":[{"value":"/ Get actor's address from system registry","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":215007,"byte_end":215051,"line_start":243,"line_end":243,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":215511,"byte_end":215514,"line_start":259,"line_end":259,"column_start":12,"column_end":15},"name":"get","qualname":"<SystemRegistry>::get","value":"pub fn get<A: SystemService + Actor<Context = Context<A>>>(&Self) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":" Return address of the service. If service actor is not running\n it get started in the system.\n","sig":null,"attributes":[{"value":"/ Return address of the service. If service actor is not running","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":215395,"byte_end":215461,"line_start":257,"line_end":257,"column_start":5,"column_end":71}},{"value":"/ it get started in the system.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":215466,"byte_end":215499,"line_start":258,"line_end":258,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":216115,"byte_end":216120,"line_start":275,"line_end":275,"column_start":12,"column_end":17},"name":"query","qualname":"<SystemRegistry>::query","value":"pub fn query<A: SystemService + Actor<Context = Context<A>>>(&Self)\n-> Option<Addr<A>>","parent":null,"children":[],"decl_id":null,"docs":" Check if actor is in registry, if so, return its address\n","sig":null,"attributes":[{"value":"/ Check if actor is in registry, if so, return its address","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":216043,"byte_end":216103,"line_start":274,"line_end":274,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":216587,"byte_end":216590,"line_start":288,"line_end":288,"column_start":12,"column_end":15},"name":"set","qualname":"<SystemRegistry>::set","value":"pub fn set<A: SystemService + Actor<Context = Context<A>>>(&Self, Addr<A>)","parent":null,"children":[],"decl_id":null,"docs":" Add new actor to the registry by address, panic if actor is already running\n","sig":null,"attributes":[{"value":"/ Add new actor to the registry by address, panic if actor is already running","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":216496,"byte_end":216575,"line_start":287,"line_end":287,"column_start":5,"column_end":84}}]},{"kind":"Mod","id":{"krate":0,"index":2075},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","parent":null,"children":[{"krate":0,"index":2076},{"krate":0,"index":3859},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":2100},{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2104},{"krate":0,"index":2105},{"krate":0,"index":2109},{"krate":0,"index":2114},{"krate":0,"index":2117},{"krate":0,"index":2122},{"krate":0,"index":2126},{"krate":0,"index":2133},{"krate":0,"index":2137},{"krate":0,"index":2142},{"krate":0,"index":2148},{"krate":0,"index":2151},{"krate":0,"index":2155}],"decl_id":null,"docs":" Sync actors support","sig":null,"attributes":[{"value":"/ Sync actors support","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":217186,"byte_end":217209,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":217210,"byte_end":217213,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Sync actors could be used for cpu bound load. Only one sync actor","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":217214,"byte_end":217283,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ runs within arbiter's thread. Sync actor process one message at a time.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":217284,"byte_end":217359,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ Sync arbiter can start multiple threads with separate instance of actor in","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":217360,"byte_end":217438,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ each. Note on actor `stopping` lifecycle event, sync actor can not prevent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":217439,"byte_end":217517,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ stopping by returning `false` from `stopping` method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":217518,"byte_end":217575,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ Multi consumer queue is used as a communication channel queue.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":217576,"byte_end":217642,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/ To be able to start sync actor via `SyncArbiter`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":217643,"byte_end":217695,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"/ Actor has to use `SyncContext` as an execution context.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":217696,"byte_end":217755,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":217756,"byte_end":217759,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":217760,"byte_end":217774,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":217775,"byte_end":217778,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":217779,"byte_end":217790,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ # extern crate actix;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":217791,"byte_end":217816,"line_start":15,"line_end":15,"column_start":1,"column_end":26}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":217817,"byte_end":217844,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":217845,"byte_end":217871,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":217872,"byte_end":217875,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ struct Fibonacci(pub u32);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":217876,"byte_end":217906,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":217907,"byte_end":217910,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ impl Message for Fibonacci {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":217911,"byte_end":217943,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/     type Result = Result<u64, ()>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":217944,"byte_end":217982,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":217983,"byte_end":217988,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":217989,"byte_end":217992,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ struct SyncActor;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":217993,"byte_end":218014,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218015,"byte_end":218018,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ impl Actor for SyncActor {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218019,"byte_end":218049,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"/     type Context = SyncContext<Self>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218050,"byte_end":218091,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218092,"byte_end":218097,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218098,"byte_end":218101,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ impl Handler<Fibonacci> for SyncActor {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218102,"byte_end":218145,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/     type Result = Result<u64, ()>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218146,"byte_end":218184,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218185,"byte_end":218188,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     fn handle(&mut self, msg: Fibonacci, _: &mut Self::Context) -> Self::Result {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218189,"byte_end":218274,"line_start":34,"line_end":34,"column_start":1,"column_end":86}},{"value":"/         if msg.0 == 0 {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218275,"byte_end":218302,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/             Err(())","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218303,"byte_end":218326,"line_start":36,"line_end":36,"column_start":1,"column_end":24}},{"value":"/         } else if msg.0 == 1 {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218327,"byte_end":218361,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/             Ok(1)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218362,"byte_end":218383,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/         } else {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218384,"byte_end":218404,"line_start":39,"line_end":39,"column_start":1,"column_end":21}},{"value":"/             let mut i = 0;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218405,"byte_end":218435,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/             let mut sum = 0;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218436,"byte_end":218468,"line_start":41,"line_end":41,"column_start":1,"column_end":33}},{"value":"/             let mut last = 0;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218469,"byte_end":218502,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"/             let mut curr = 1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218503,"byte_end":218536,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/             while i < msg.0 - 1 {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218537,"byte_end":218574,"line_start":44,"line_end":44,"column_start":1,"column_end":38}},{"value":"/                 sum = last + curr;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218575,"byte_end":218613,"line_start":45,"line_end":45,"column_start":1,"column_end":39}},{"value":"/                 last = curr;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218614,"byte_end":218646,"line_start":46,"line_end":46,"column_start":1,"column_end":33}},{"value":"/                 curr = sum;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218647,"byte_end":218678,"line_start":47,"line_end":47,"column_start":1,"column_end":32}},{"value":"/                 i += 1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218679,"byte_end":218706,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218707,"byte_end":218724,"line_start":49,"line_end":49,"column_start":1,"column_end":18}},{"value":"/             Ok(sum)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218725,"byte_end":218748,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/         }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218749,"byte_end":218762,"line_start":51,"line_end":51,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218763,"byte_end":218772,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218773,"byte_end":218778,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218779,"byte_end":218782,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218783,"byte_end":218798,"line_start":55,"line_end":55,"column_start":1,"column_end":16}},{"value":"/     System::run(|| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218799,"byte_end":218823,"line_start":56,"line_end":56,"column_start":1,"column_end":25}},{"value":"/         // start sync arbiter with 2 threads","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218824,"byte_end":218872,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/         let addr = SyncArbiter::start(2, || SyncActor);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218873,"byte_end":218932,"line_start":58,"line_end":58,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218933,"byte_end":218936,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/         // send 5 messages","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218937,"byte_end":218967,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/         for n in 5..10 {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218968,"byte_end":218996,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"/             addr.do_send(Fibonacci(n));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":218997,"byte_end":219040,"line_start":62,"line_end":62,"column_start":1,"column_end":44}},{"value":"/         }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":219041,"byte_end":219054,"line_start":63,"line_end":63,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":219055,"byte_end":219058,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ #       System::current().stop();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":219059,"byte_end":219096,"line_start":65,"line_end":65,"column_start":1,"column_end":38}},{"value":"/     });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":219097,"byte_end":219108,"line_start":66,"line_end":66,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":219109,"byte_end":219114,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":219115,"byte_end":219122,"line_start":68,"line_end":68,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2105},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":219618,"byte_end":219629,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"SyncArbiter","qualname":"::sync::SyncArbiter","value":"SyncArbiter {  }","parent":null,"children":[{"krate":0,"index":2107},{"krate":0,"index":2108}],"decl_id":null,"docs":" Sync arbiter\n","sig":null,"attributes":[{"value":"/ Sync arbiter","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":219590,"byte_end":219606,"line_start":85,"line_end":85,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":219966,"byte_end":219971,"line_start":100,"line_end":100,"column_start":12,"column_end":17},"name":"start","qualname":"<SyncArbiter<A>>::start","value":"pub fn start<F>(usize, F) -> Addr<A> where F: Fn() -> A + Send + Sync +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Start new sync arbiter with specified number of worker threads.\n Returns address of the started actor.\n","sig":null,"attributes":[{"value":"/ Start new sync arbiter with specified number of worker threads.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":219841,"byte_end":219908,"line_start":98,"line_end":98,"column_start":5,"column_end":72}},{"value":"/ Returns address of the started actor.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":219913,"byte_end":219954,"line_start":99,"line_end":99,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2126},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":221968,"byte_end":221979,"line_start":179,"line_end":179,"column_start":12,"column_end":23},"name":"SyncContext","qualname":"::sync::SyncContext","value":"SyncContext {  }","parent":null,"children":[{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2131},{"krate":0,"index":2132}],"decl_id":null,"docs":" Sync actor execution context\n","sig":null,"attributes":[{"value":"/ Sync actor execution context","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":221924,"byte_end":221956,"line_start":178,"line_end":178,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":2160},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::utils","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","parent":null,"children":[{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":2176},{"krate":0,"index":2179},{"krate":0,"index":2183},{"krate":0,"index":2186},{"krate":0,"index":2190},{"krate":0,"index":2194},{"krate":0,"index":2197},{"krate":0,"index":2201},{"krate":0,"index":2207},{"krate":0,"index":2211},{"krate":0,"index":2215},{"krate":0,"index":2218},{"krate":0,"index":2222}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2176},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":225753,"byte_end":225762,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"Condition","qualname":"::utils::Condition","value":"Condition {  }","parent":null,"children":[{"krate":0,"index":2178}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2181},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":225883,"byte_end":225887,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"wait","qualname":"<Condition<T>>::wait","value":"pub fn wait(&mut Self) -> oneshot::Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2182},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226028,"byte_end":226031,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"set","qualname":"<Condition<T>>::set","value":"pub fn set(Self, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2186},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":227432,"byte_end":227441,"line_start":84,"line_end":84,"column_start":12,"column_end":21},"name":"TimerFunc","qualname":"::utils::TimerFunc","value":"TimerFunc {  }","parent":null,"children":[{"krate":0,"index":2188},{"krate":0,"index":2189}],"decl_id":null,"docs":" An `ActorFuture` that runs a function in the actor's context after a specified amount of time.","sig":null,"attributes":[{"value":"/ An `ActorFuture` that runs a function in the actor's context after a specified amount of time.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226310,"byte_end":226408,"line_start":46,"line_end":46,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226409,"byte_end":226412,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Unless you specifically need access to the future, use [`Context::run_later`] instead.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226413,"byte_end":226503,"line_start":48,"line_end":48,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226504,"byte_end":226507,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Context::run_later`]: ../prelude/trait.AsyncContext.html#method.run_later","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226508,"byte_end":226587,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226588,"byte_end":226591,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226592,"byte_end":226603,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate actix;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226604,"byte_end":226642,"line_start":53,"line_end":53,"column_start":1,"column_end":39}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226643,"byte_end":226670,"line_start":54,"line_end":54,"column_start":1,"column_end":28}},{"value":"/ # use std::io;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226671,"byte_end":226689,"line_start":55,"line_end":55,"column_start":1,"column_end":19}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226690,"byte_end":226718,"line_start":56,"line_end":56,"column_start":1,"column_end":29}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226719,"byte_end":226745,"line_start":57,"line_end":57,"column_start":1,"column_end":27}},{"value":"/ use actix::utils::TimerFunc;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226746,"byte_end":226778,"line_start":58,"line_end":58,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226779,"byte_end":226782,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226783,"byte_end":226802,"line_start":60,"line_end":60,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226803,"byte_end":226806,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ impl MyActor {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226807,"byte_end":226825,"line_start":62,"line_end":62,"column_start":1,"column_end":19}},{"value":"/     fn stop(&mut self, context: &mut Context<Self>) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226826,"byte_end":226883,"line_start":63,"line_end":63,"column_start":1,"column_end":58}},{"value":"/         System::current().stop();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226884,"byte_end":226921,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226922,"byte_end":226931,"line_start":65,"line_end":65,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226932,"byte_end":226937,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226938,"byte_end":226941,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226942,"byte_end":226970,"line_start":68,"line_end":68,"column_start":1,"column_end":29}},{"value":"/    type Context = Context<Self>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226971,"byte_end":227007,"line_start":69,"line_end":69,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":227008,"byte_end":227011,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/    fn started(&mut self, context: &mut Context<Self>) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":227012,"byte_end":227071,"line_start":71,"line_end":71,"column_start":1,"column_end":60}},{"value":"/        // spawn a delayed future into our context","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":227072,"byte_end":227125,"line_start":72,"line_end":72,"column_start":1,"column_end":54}},{"value":"/        TimerFunc::new(Duration::from_millis(100), Self::stop)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":227126,"byte_end":227191,"line_start":73,"line_end":73,"column_start":1,"column_end":66}},{"value":"/            .spawn(context);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":227192,"byte_end":227223,"line_start":74,"line_end":74,"column_start":1,"column_end":32}},{"value":"/    }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":227224,"byte_end":227232,"line_start":75,"line_end":75,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":227233,"byte_end":227238,"line_start":76,"line_end":76,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":227239,"byte_end":227256,"line_start":77,"line_end":77,"column_start":1,"column_end":18}},{"value":"/ #    let sys = System::new(\"example\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":227257,"byte_end":227299,"line_start":78,"line_end":78,"column_start":1,"column_end":43}},{"value":"/ #    let addr = MyActor.start();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":227300,"byte_end":227336,"line_start":79,"line_end":79,"column_start":1,"column_end":37}},{"value":"/ #    sys.run();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":227337,"byte_end":227356,"line_start":80,"line_end":80,"column_start":1,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":227357,"byte_end":227364,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":227365,"byte_end":227372,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"must_use = \"future do nothing unless polled\"","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":227373,"byte_end":227420,"line_start":83,"line_end":83,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2192},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":227640,"byte_end":227643,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"new","qualname":"<TimerFunc<A>>::new","value":"pub fn new<F>(Duration, F) -> TimerFunc<A> where\nF: FnOnce(&mut A, &mut A::Context) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TimerFunc` with the given duration.\n","sig":null,"attributes":[{"value":"/ Creates a new `TimerFunc` with the given duration.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":227574,"byte_end":227628,"line_start":96,"line_end":96,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2207},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":230079,"byte_end":230091,"line_start":185,"line_end":185,"column_start":12,"column_end":24},"name":"IntervalFunc","qualname":"::utils::IntervalFunc","value":"IntervalFunc {  }","parent":null,"children":[{"krate":0,"index":2209},{"krate":0,"index":2210}],"decl_id":null,"docs":" An `ActorStream` that periodically runs a function in the actor's context.","sig":null,"attributes":[{"value":"/ An `ActorStream` that periodically runs a function in the actor's context.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":228852,"byte_end":228930,"line_start":145,"line_end":145,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":228931,"byte_end":228934,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ Unless you specifically need access to the future, use [`Context::run_interval`] instead.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":228935,"byte_end":229028,"line_start":147,"line_end":147,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229029,"byte_end":229032,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ [`Context::run_interval`]: ../prelude/trait.AsyncContext.html#method.run_interval","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229033,"byte_end":229118,"line_start":149,"line_end":149,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229119,"byte_end":229122,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229123,"byte_end":229134,"line_start":151,"line_end":151,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate actix;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229135,"byte_end":229173,"line_start":152,"line_end":152,"column_start":1,"column_end":39}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229174,"byte_end":229201,"line_start":153,"line_end":153,"column_start":1,"column_end":28}},{"value":"/ # use std::io;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229202,"byte_end":229220,"line_start":154,"line_end":154,"column_start":1,"column_end":19}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229221,"byte_end":229249,"line_start":155,"line_end":155,"column_start":1,"column_end":29}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229250,"byte_end":229276,"line_start":156,"line_end":156,"column_start":1,"column_end":27}},{"value":"/ use actix::utils::IntervalFunc;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229277,"byte_end":229312,"line_start":157,"line_end":157,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229313,"byte_end":229316,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229317,"byte_end":229336,"line_start":159,"line_end":159,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229337,"byte_end":229340,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ impl MyActor {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229341,"byte_end":229359,"line_start":161,"line_end":161,"column_start":1,"column_end":19}},{"value":"/     fn tick(&mut self, context: &mut Context<Self>) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229360,"byte_end":229417,"line_start":162,"line_end":162,"column_start":1,"column_end":58}},{"value":"/         println!(\"tick\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229418,"byte_end":229447,"line_start":163,"line_end":163,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229448,"byte_end":229457,"line_start":164,"line_end":164,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229458,"byte_end":229463,"line_start":165,"line_end":165,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229464,"byte_end":229467,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229468,"byte_end":229496,"line_start":167,"line_end":167,"column_start":1,"column_end":29}},{"value":"/    type Context = Context<Self>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229497,"byte_end":229533,"line_start":168,"line_end":168,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229534,"byte_end":229537,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/    fn started(&mut self, context: &mut Context<Self>) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229538,"byte_end":229597,"line_start":170,"line_end":170,"column_start":1,"column_end":60}},{"value":"/        // spawn an interval stream into our context","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229598,"byte_end":229653,"line_start":171,"line_end":171,"column_start":1,"column_end":56}},{"value":"/        IntervalFunc::new(Duration::from_millis(100), Self::tick)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229654,"byte_end":229722,"line_start":172,"line_end":172,"column_start":1,"column_end":69}},{"value":"/            .finish()","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229723,"byte_end":229747,"line_start":173,"line_end":173,"column_start":1,"column_end":25}},{"value":"/            .spawn(context);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229748,"byte_end":229779,"line_start":174,"line_end":174,"column_start":1,"column_end":32}},{"value":"/ #      context.run_later(Duration::from_millis(200), |_, _| System::current().stop());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229780,"byte_end":229870,"line_start":175,"line_end":175,"column_start":1,"column_end":91}},{"value":"/    }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229871,"byte_end":229879,"line_start":176,"line_end":176,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229880,"byte_end":229885,"line_start":177,"line_end":177,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229886,"byte_end":229903,"line_start":178,"line_end":178,"column_start":1,"column_end":18}},{"value":"/ #    let sys = System::new(\"example\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229904,"byte_end":229946,"line_start":179,"line_end":179,"column_start":1,"column_end":43}},{"value":"/ #    let addr = MyActor.start();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229947,"byte_end":229983,"line_start":180,"line_end":180,"column_start":1,"column_end":37}},{"value":"/ #    sys.run();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":229984,"byte_end":230003,"line_start":181,"line_end":181,"column_start":1,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":230004,"byte_end":230011,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":230012,"byte_end":230019,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"must_use = \"future do nothing unless polled\"","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":230020,"byte_end":230067,"line_start":184,"line_end":184,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":230278,"byte_end":230281,"line_start":192,"line_end":192,"column_start":12,"column_end":15},"name":"new","qualname":"<IntervalFunc<A>>::new","value":"pub fn new<F>(Duration, F) -> IntervalFunc<A> where\nF: FnMut(&mut A, &mut A::Context) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `IntervalFunc` with the given interval duration.\n","sig":null,"attributes":[{"value":"/ Creates a new `IntervalFunc` with the given interval duration.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":230200,"byte_end":230266,"line_start":191,"line_end":191,"column_start":5,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":2270},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3386,"byte_end":3393,"line_start":115,"line_end":115,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":2271},{"krate":0,"index":2272},{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2275},{"krate":0,"index":2276},{"krate":0,"index":2277},{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2283},{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2287},{"krate":0,"index":2288},{"krate":0,"index":2289},{"krate":0,"index":2290},{"krate":0,"index":2291},{"krate":0,"index":2292},{"krate":0,"index":2293},{"krate":0,"index":2294},{"krate":0,"index":2295},{"krate":0,"index":2296},{"krate":0,"index":2297},{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":4049},{"krate":0,"index":2301},{"krate":0,"index":2302},{"krate":0,"index":2303},{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2307},{"krate":0,"index":2308},{"krate":0,"index":2309},{"krate":0,"index":2310},{"krate":0,"index":2311},{"krate":0,"index":2312},{"krate":0,"index":2313},{"krate":0,"index":2314},{"krate":0,"index":2315},{"krate":0,"index":2316},{"krate":0,"index":2317},{"krate":0,"index":2318},{"krate":0,"index":2319},{"krate":0,"index":2320},{"krate":0,"index":2321}],"decl_id":null,"docs":" The `actix` prelude","sig":null,"attributes":[{"value":"/ The `actix` prelude","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3400,"byte_end":3423,"line_start":116,"line_end":116,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3428,"byte_end":3431,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The purpose of this module is to alleviate imports of many common actix","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3436,"byte_end":3511,"line_start":118,"line_end":118,"column_start":5,"column_end":80}},{"value":"/ traits by adding a glob import to the top of actix heavy modules:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3516,"byte_end":3585,"line_start":119,"line_end":119,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3590,"byte_end":3593,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3598,"byte_end":3605,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ # #![allow(unused_imports)]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3610,"byte_end":3641,"line_start":122,"line_end":122,"column_start":5,"column_end":36}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3646,"byte_end":3672,"line_start":123,"line_end":123,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":3677,"byte_end":3684,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":2322},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4585,"byte_end":4588,"line_start":153,"line_end":153,"column_start":9,"column_end":12},"name":"dev","qualname":"::dev","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":2323},{"krate":0,"index":2324},{"krate":0,"index":2325},{"krate":0,"index":2326},{"krate":0,"index":2327},{"krate":0,"index":2328},{"krate":0,"index":2329},{"krate":0,"index":2330},{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2337},{"krate":0,"index":2338},{"krate":0,"index":2339},{"krate":0,"index":2340},{"krate":0,"index":2341},{"krate":0,"index":2342},{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2345}],"decl_id":null,"docs":" The `actix` prelude for library developers","sig":null,"attributes":[{"value":"/ The `actix` prelude for library developers","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4595,"byte_end":4641,"line_start":154,"line_end":154,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4646,"byte_end":4649,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The purpose of this module is to alleviate imports of many common actix","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4654,"byte_end":4729,"line_start":156,"line_end":156,"column_start":5,"column_end":80}},{"value":"/ traits by adding a glob import to the top of actix heavy modules:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4734,"byte_end":4803,"line_start":157,"line_end":157,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4808,"byte_end":4811,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4816,"byte_end":4823,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ # #![allow(unused_imports)]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4828,"byte_end":4859,"line_start":160,"line_end":160,"column_start":5,"column_end":36}},{"value":"/ use actix::dev::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4864,"byte_end":4886,"line_start":161,"line_end":161,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":4891,"byte_end":4898,"line_start":162,"line_end":162,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":2330},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5024,"byte_end":5031,"line_start":167,"line_end":167,"column_start":13,"column_end":20},"name":"channel","qualname":"::dev::channel","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":2331},{"krate":0,"index":2332},{"krate":0,"index":2333},{"krate":0,"index":2334}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2346},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":6209,"byte_end":6212,"line_start":208,"line_end":208,"column_start":8,"column_end":11},"name":"run","qualname":"::run","value":"pub fn run<F, R>(F) where F: FnOnce() -> R, R: futures::Future<Item = (),\nError = ()> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Start the System and execute supplied future.","sig":null,"attributes":[{"value":"/ Start the System and execute supplied future.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5329,"byte_end":5378,"line_start":176,"line_end":176,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5379,"byte_end":5382,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ This function does the following:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5383,"byte_end":5420,"line_start":178,"line_end":178,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5421,"byte_end":5424,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ * Creates and starts actix System with default configuration.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5425,"byte_end":5490,"line_start":180,"line_end":180,"column_start":1,"column_end":66}},{"value":"/ * Spawn the given future onto the current arbiter.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5491,"byte_end":5545,"line_start":181,"line_end":181,"column_start":1,"column_end":55}},{"value":"/ * Block the current thread until the system shuts down.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5546,"byte_end":5605,"line_start":182,"line_end":182,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5606,"byte_end":5609,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ `run` functions returns when `System::current().stop()` method get called.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5610,"byte_end":5688,"line_start":184,"line_end":184,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5689,"byte_end":5692,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5693,"byte_end":5707,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5708,"byte_end":5711,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5712,"byte_end":5719,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ # extern crate actix;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5720,"byte_end":5745,"line_start":189,"line_end":189,"column_start":1,"column_end":26}},{"value":"/ # extern crate tokio_timer;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5746,"byte_end":5777,"line_start":190,"line_end":190,"column_start":1,"column_end":32}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5778,"byte_end":5805,"line_start":191,"line_end":191,"column_start":1,"column_end":28}},{"value":"/ # use futures::Future;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5806,"byte_end":5832,"line_start":192,"line_end":192,"column_start":1,"column_end":27}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5833,"byte_end":5872,"line_start":193,"line_end":193,"column_start":1,"column_end":40}},{"value":"/ use tokio_timer::Delay;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5873,"byte_end":5900,"line_start":194,"line_end":194,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5901,"byte_end":5904,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5905,"byte_end":5920,"line_start":196,"line_end":196,"column_start":1,"column_end":16}},{"value":"/   actix::run(","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5921,"byte_end":5938,"line_start":197,"line_end":197,"column_start":1,"column_end":18}},{"value":"/       || Delay::new(Instant::now() + Duration::from_millis(100))","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":5939,"byte_end":6007,"line_start":198,"line_end":198,"column_start":1,"column_end":69}},{"value":"/            .map(|_| actix::System::current().stop())","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":6008,"byte_end":6064,"line_start":199,"line_end":199,"column_start":1,"column_end":57}},{"value":"/            .map_err(|_| ())","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":6065,"byte_end":6096,"line_start":200,"line_end":200,"column_start":1,"column_end":32}},{"value":"/   );","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":6097,"byte_end":6105,"line_start":201,"line_end":201,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":6106,"byte_end":6111,"line_start":202,"line_end":202,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":6112,"byte_end":6119,"line_start":203,"line_end":203,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":6120,"byte_end":6123,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":6124,"byte_end":6136,"line_start":205,"line_end":205,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":6137,"byte_end":6140,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ This function panics if actix system is already running.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":6141,"byte_end":6201,"line_start":207,"line_end":207,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":2349},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":6600,"byte_end":6605,"line_start":227,"line_end":227,"column_start":8,"column_end":13},"name":"spawn","qualname":"::spawn","value":"pub fn spawn<F>(F) where F: futures::Future<Item = (), Error = ()> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future on the current arbiter.","sig":null,"attributes":[{"value":"/ Spawns a future on the current arbiter.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":6471,"byte_end":6514,"line_start":222,"line_end":222,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":6515,"byte_end":6518,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":6519,"byte_end":6531,"line_start":224,"line_end":224,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":6532,"byte_end":6535,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ This function panics if actix system is not running.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":6536,"byte_end":6592,"line_start":226,"line_end":226,"column_start":1,"column_end":57}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12955,"byte_end":12965,"line_start":193,"line_end":193,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":19318,"byte_end":19329,"line_start":400,"line_end":400,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":19532,"byte_end":19543,"line_start":411,"line_end":411,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":21139,"byte_end":21146,"line_start":45,"line_end":45,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":21200,"byte_end":21207,"line_start":49,"line_end":49,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":21442,"byte_end":21449,"line_start":58,"line_end":58,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":135},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":27292,"byte_end":27299,"line_start":241,"line_end":241,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":27532,"byte_end":27539,"line_start":251,"line_end":251,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":27771,"byte_end":27778,"line_start":262,"line_end":262,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":28264,"byte_end":28271,"line_start":282,"line_end":282,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":30224,"byte_end":30231,"line_start":19,"line_end":19,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":30466,"byte_end":30473,"line_start":28,"line_end":28,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":30781,"byte_end":30788,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":31485,"byte_end":31492,"line_start":82,"line_end":82,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":32753,"byte_end":32760,"line_start":132,"line_end":132,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":33314,"byte_end":33315,"line_start":155,"line_end":155,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":34732,"byte_end":34744,"line_start":48,"line_end":48,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":34985,"byte_end":34997,"line_start":60,"line_end":60,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":38759,"byte_end":38769,"line_start":201,"line_end":201,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":38975,"byte_end":38985,"line_start":211,"line_end":211,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":41128,"byte_end":41138,"line_start":299,"line_end":299,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextitems.rs","byte_start":47905,"byte_end":47918,"line_start":15,"line_end":15,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextitems.rs","byte_start":48760,"byte_end":48783,"line_start":53,"line_end":53,"column_start":12,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextitems.rs","byte_start":49103,"byte_end":49126,"line_start":68,"line_end":68,"column_start":28,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextitems.rs","byte_start":49890,"byte_end":49906,"line_start":102,"line_end":102,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextitems.rs","byte_start":50124,"byte_end":50140,"line_start":115,"line_end":115,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextitems.rs","byte_start":50717,"byte_end":50739,"line_start":144,"line_end":144,"column_start":15,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextitems.rs","byte_start":50994,"byte_end":51016,"line_start":158,"line_end":158,"column_start":40,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":53522,"byte_end":53532,"line_start":58,"line_end":58,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":53939,"byte_end":53952,"line_start":78,"line_end":78,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":54214,"byte_end":54220,"line_start":90,"line_end":90,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":54494,"byte_end":54500,"line_start":102,"line_end":102,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":54759,"byte_end":54763,"line_start":114,"line_end":114,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":55077,"byte_end":55094,"line_start":127,"line_end":127,"column_start":62,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":55513,"byte_end":55527,"line_start":143,"line_end":143,"column_start":62,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":56156,"byte_end":56164,"line_start":170,"line_end":170,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":56529,"byte_end":56537,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":56988,"byte_end":56996,"line_start":199,"line_end":199,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":57941,"byte_end":57954,"line_start":234,"line_end":234,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":58347,"byte_end":58360,"line_start":244,"line_end":244,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":58850,"byte_end":58863,"line_start":263,"line_end":263,"column_start":62,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":63628,"byte_end":63639,"line_start":109,"line_end":109,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":63906,"byte_end":63917,"line_start":121,"line_end":121,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67030,"byte_end":67040,"line_start":72,"line_end":72,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":68912,"byte_end":68922,"line_start":138,"line_end":138,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":71269,"byte_end":71275,"line_start":70,"line_end":70,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":73663,"byte_end":73675,"line_start":163,"line_end":163,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":74826,"byte_end":74839,"line_start":206,"line_end":206,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":74951,"byte_end":74961,"line_start":213,"line_end":213,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":75018,"byte_end":75031,"line_start":217,"line_end":217,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":75515,"byte_end":75530,"line_start":236,"line_end":236,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":75607,"byte_end":75620,"line_start":241,"line_end":241,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":75876,"byte_end":75893,"line_start":253,"line_end":253,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":75972,"byte_end":75985,"line_start":258,"line_end":258,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76223,"byte_end":76236,"line_start":267,"line_end":267,"column_start":51,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":738},{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77800,"byte_end":77807,"line_start":330,"line_end":330,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":750},{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":90085,"byte_end":90098,"line_start":55,"line_end":55,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":92613,"byte_end":92623,"line_start":144,"line_end":144,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":838},{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":94645,"byte_end":94658,"line_start":210,"line_end":210,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":847},{"krate":0,"index":849},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":101586,"byte_end":101599,"line_start":418,"line_end":418,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":102204,"byte_end":102217,"line_start":443,"line_end":443,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":103460,"byte_end":103473,"line_start":476,"line_end":476,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":103767,"byte_end":103780,"line_start":487,"line_end":487,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":103905,"byte_end":103918,"line_start":493,"line_end":493,"column_start":23,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":103950,"byte_end":103963,"line_start":495,"line_end":495,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":104149,"byte_end":104170,"line_start":506,"line_end":506,"column_start":16,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":106395,"byte_end":106410,"line_start":579,"line_end":579,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":111611,"byte_end":111626,"line_start":739,"line_end":739,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":113212,"byte_end":113227,"line_start":781,"line_end":781,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":114425,"byte_end":114430,"line_start":827,"line_end":827,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":114704,"byte_end":114709,"line_start":835,"line_end":835,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":114747,"byte_end":114752,"line_start":836,"line_end":836,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/envelope.rs","byte_start":118065,"byte_end":118072,"line_start":28,"line_end":28,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/envelope.rs","byte_start":118380,"byte_end":118388,"line_start":41,"line_end":41,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/envelope.rs","byte_start":118893,"byte_end":118901,"line_start":61,"line_end":61,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/envelope.rs","byte_start":119274,"byte_end":119291,"line_start":81,"line_end":81,"column_start":28,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/envelope.rs","byte_start":119382,"byte_end":119399,"line_start":88,"line_end":88,"column_start":30,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":960},{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/message.rs","byte_start":120664,"byte_end":120671,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/message.rs","byte_start":121713,"byte_end":121720,"line_start":70,"line_end":70,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/message.rs","byte_start":123070,"byte_end":123086,"line_start":117,"line_end":117,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/message.rs","byte_start":123987,"byte_end":124003,"line_start":151,"line_end":151,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/queue.rs","byte_start":128343,"byte_end":128348,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/queue.rs","byte_start":128385,"byte_end":128390,"line_start":81,"line_end":81,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/queue.rs","byte_start":128406,"byte_end":128410,"line_start":83,"line_end":83,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1039}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/queue.rs","byte_start":128606,"byte_end":128611,"line_start":92,"line_end":92,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/queue.rs","byte_start":130410,"byte_end":130415,"line_start":145,"line_end":145,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":80629,"byte_end":80638,"line_start":33,"line_end":33,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":80808,"byte_end":80817,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":81094,"byte_end":81103,"line_start":50,"line_end":50,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":81413,"byte_end":81422,"line_start":59,"line_end":59,"column_start":27,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":81482,"byte_end":81494,"line_start":63,"line_end":63,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":81727,"byte_end":81731,"line_start":75,"line_end":75,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":83651,"byte_end":83655,"line_start":146,"line_end":146,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":83790,"byte_end":83794,"line_start":154,"line_end":154,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":83900,"byte_end":83904,"line_start":160,"line_end":160,"column_start":23,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":83936,"byte_end":83940,"line_start":162,"line_end":162,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":84364,"byte_end":84373,"line_start":180,"line_end":180,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":85602,"byte_end":85606,"line_start":218,"line_end":218,"column_start":68,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":85797,"byte_end":85806,"line_start":229,"line_end":229,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":85994,"byte_end":86003,"line_start":241,"line_end":241,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":86166,"byte_end":86175,"line_start":251,"line_end":251,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":86251,"byte_end":86260,"line_start":258,"line_end":258,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/mailbox.rs","byte_start":131182,"byte_end":131189,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/mailbox.rs","byte_start":131445,"byte_end":131452,"line_start":33,"line_end":33,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/mailbox.rs","byte_start":131676,"byte_end":131684,"line_start":47,"line_end":47,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/mailbox.rs","byte_start":131771,"byte_end":131778,"line_start":54,"line_end":54,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":134897,"byte_end":134903,"line_start":41,"line_end":41,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":135154,"byte_end":135160,"line_start":52,"line_end":52,"column_start":42,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":135210,"byte_end":135216,"line_start":53,"line_end":53,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":135246,"byte_end":135252,"line_start":54,"line_end":54,"column_start":24,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":135280,"byte_end":135286,"line_start":56,"line_end":56,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":135410,"byte_end":135416,"line_start":62,"line_end":62,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":135511,"byte_end":135517,"line_start":66,"line_end":66,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1203},{"krate":0,"index":1204}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":138058,"byte_end":138065,"line_start":73,"line_end":73,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":138425,"byte_end":138432,"line_start":89,"line_end":89,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":138638,"byte_end":138645,"line_start":100,"line_end":100,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1237},{"krate":0,"index":1239},{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":139293,"byte_end":139300,"line_start":126,"line_end":126,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":139448,"byte_end":139459,"line_start":133,"line_end":133,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":140135,"byte_end":140143,"line_start":162,"line_end":162,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1251},{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":140638,"byte_end":140646,"line_start":182,"line_end":182,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1255},{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":141904,"byte_end":141912,"line_start":214,"line_end":214,"column_start":21,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":141940,"byte_end":141948,"line_start":216,"line_end":216,"column_start":24,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":141970,"byte_end":141978,"line_start":218,"line_end":218,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":142150,"byte_end":142158,"line_start":228,"line_end":228,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1262},{"krate":0,"index":1263}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":142644,"byte_end":142652,"line_start":244,"line_end":244,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1265},{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":143137,"byte_end":143145,"line_start":259,"line_end":259,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1269},{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":143621,"byte_end":143631,"line_start":278,"line_end":278,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1280},{"krate":0,"index":1281}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":145641,"byte_end":145651,"line_start":345,"line_end":345,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":147063,"byte_end":147075,"line_start":388,"line_end":388,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1294},{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":147468,"byte_end":147480,"line_start":402,"line_end":402,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150743,"byte_end":150753,"line_start":88,"line_end":88,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150878,"byte_end":150884,"line_start":96,"line_end":96,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1313}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":151053,"byte_end":151067,"line_start":105,"line_end":105,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1317}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":151193,"byte_end":151207,"line_start":113,"line_end":113,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":151267,"byte_end":151281,"line_start":117,"line_end":117,"column_start":21,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":151309,"byte_end":151323,"line_start":119,"line_end":119,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":153161,"byte_end":153175,"line_start":174,"line_end":174,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1343},{"krate":0,"index":1344}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":153614,"byte_end":153623,"line_start":190,"line_end":190,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":153710,"byte_end":153724,"line_start":195,"line_end":195,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1351},{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":154056,"byte_end":154077,"line_start":207,"line_end":207,"column_start":18,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":154161,"byte_end":154182,"line_start":213,"line_end":213,"column_start":16,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1358},{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":154672,"byte_end":154693,"line_start":229,"line_end":229,"column_start":26,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1363},{"krate":0,"index":1364}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/and_then.rs","byte_start":169091,"byte_end":169098,"line_start":31,"line_end":31,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/chain.rs","byte_start":169834,"byte_end":169839,"line_start":17,"line_end":17,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1409},{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/either.rs","byte_start":171455,"byte_end":171461,"line_start":16,"line_end":16,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/either.rs","byte_start":171872,"byte_end":171878,"line_start":29,"line_end":29,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/from_err.rs","byte_start":172930,"byte_end":172937,"line_start":30,"line_end":30,"column_start":57,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/helpers.rs","byte_start":173566,"byte_end":173567,"line_start":9,"line_end":9,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1455}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/helpers.rs","byte_start":174011,"byte_end":174017,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1458}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/helpers.rs","byte_start":174105,"byte_end":174111,"line_start":31,"line_end":31,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/map.rs","byte_start":175034,"byte_end":175037,"line_start":26,"line_end":26,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/map_err.rs","byte_start":176257,"byte_end":176263,"line_start":26,"line_end":26,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/map_err.rs","byte_start":176990,"byte_end":176997,"line_start":58,"line_end":58,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1503}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/map_err.rs","byte_start":177138,"byte_end":177145,"line_start":67,"line_end":67,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179931,"byte_end":179943,"line_start":90,"line_end":90,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":180315,"byte_end":180327,"line_start":108,"line_end":108,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_and_then.rs","byte_start":181180,"byte_end":181193,"line_start":34,"line_end":34,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_finish.rs","byte_start":182740,"byte_end":182752,"line_start":21,"line_end":21,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_fold.rs","byte_start":184491,"byte_end":184501,"line_start":50,"line_end":50,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1602}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_map.rs","byte_start":186600,"byte_end":186609,"line_start":25,"line_end":25,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1619},{"krate":0,"index":1620}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_map_err.rs","byte_start":187911,"byte_end":187923,"line_start":25,"line_end":25,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1636}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_then.rs","byte_start":189197,"byte_end":189207,"line_start":38,"line_end":38,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1654},{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1657}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_timeout.rs","byte_start":191213,"byte_end":191226,"line_start":39,"line_end":39,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1675}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/then.rs","byte_start":192868,"byte_end":192872,"line_start":31,"line_end":31,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1694}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/timeout.rs","byte_start":194139,"byte_end":194146,"line_start":36,"line_end":36,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":164709,"byte_end":164710,"line_start":292,"line_end":292,"column_start":42,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1791},{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":1794},{"krate":0,"index":1795}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":164914,"byte_end":164917,"line_start":303,"line_end":303,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1800},{"krate":0,"index":1801}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":165797,"byte_end":165798,"line_start":337,"line_end":337,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1812},{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1816}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":166575,"byte_end":166585,"line_start":375,"line_end":375,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1831}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":167484,"byte_end":167485,"line_start":413,"line_end":413,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":168058,"byte_end":168068,"line_start":447,"line_end":447,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1860},{"krate":0,"index":1861}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":196177,"byte_end":196189,"line_start":60,"line_end":60,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1900}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":196534,"byte_end":196540,"line_start":76,"line_end":76,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1913},{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":198484,"byte_end":198493,"line_start":148,"line_end":148,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1934}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":201298,"byte_end":201309,"line_start":238,"line_end":238,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":202988,"byte_end":202999,"line_start":293,"line_end":293,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1957},{"krate":0,"index":1960},{"krate":0,"index":1963},{"krate":0,"index":1964},{"krate":0,"index":1965},{"krate":0,"index":1966},{"krate":0,"index":1968}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":205911,"byte_end":205922,"line_start":11,"line_end":11,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1978}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":206062,"byte_end":206072,"line_start":18,"line_end":18,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1985}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":206145,"byte_end":206155,"line_start":22,"line_end":22,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1988},{"krate":0,"index":1991}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":206655,"byte_end":206656,"line_start":43,"line_end":43,"column_start":70,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":207562,"byte_end":207569,"line_start":81,"line_end":81,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2007}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":207624,"byte_end":207631,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2011},{"krate":0,"index":2013}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":208092,"byte_end":208093,"line_start":107,"line_end":107,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2022}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":211232,"byte_end":211240,"line_start":114,"line_end":114,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2050},{"krate":0,"index":2051},{"krate":0,"index":2053},{"krate":0,"index":2055}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":215170,"byte_end":215184,"line_start":249,"line_end":249,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":2069},{"krate":0,"index":2071}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":217004,"byte_end":217018,"line_start":301,"line_end":301,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2074}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":219774,"byte_end":219785,"line_start":94,"line_end":94,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2111}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":220697,"byte_end":220708,"line_start":128,"line_end":128,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2116}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":220831,"byte_end":220842,"line_start":136,"line_end":136,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2121}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":221639,"byte_end":221650,"line_start":167,"line_end":167,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2125}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":222180,"byte_end":222191,"line_start":190,"line_end":190,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2135},{"krate":0,"index":2136}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":223824,"byte_end":223835,"line_start":247,"line_end":247,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2139},{"krate":0,"index":2140},{"krate":0,"index":2141}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":224577,"byte_end":224596,"line_start":279,"line_end":279,"column_start":28,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":224700,"byte_end":224719,"line_start":285,"line_end":285,"column_start":12,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2154}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":225053,"byte_end":225072,"line_start":300,"line_end":300,"column_start":30,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2158},{"krate":0,"index":2159}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":225837,"byte_end":225846,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2181},{"krate":0,"index":2182}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226176,"byte_end":226185,"line_start":35,"line_end":35,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2185}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":227535,"byte_end":227544,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2192}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":228067,"byte_end":228068,"line_start":112,"line_end":112,"column_start":82,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":2200}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":228258,"byte_end":228267,"line_start":119,"line_end":119,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2203},{"krate":0,"index":2204},{"krate":0,"index":2205},{"krate":0,"index":2206}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":230178,"byte_end":230190,"line_start":190,"line_end":190,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2213}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":230708,"byte_end":230709,"line_start":207,"line_end":207,"column_start":84,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":2221}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":230897,"byte_end":230909,"line_start":214,"line_end":214,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":2227}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2592,"byte_end":2598,"line_start":89,"line_end":89,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1174}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mod.rs","byte_start":133290,"byte_end":133296,"line_start":3,"line_end":3,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1175}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mod.rs","byte_start":133336,"byte_end":133344,"line_start":6,"line_end":6,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1205}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mod.rs","byte_start":133382,"byte_end":133388,"line_start":9,"line_end":9,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1301}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2608,"byte_end":2613,"line_start":90,"line_end":90,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1365}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2623,"byte_end":2626,"line_start":91,"line_end":91,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1370}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2636,"byte_end":2638,"line_start":92,"line_end":92,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":1862}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2648,"byte_end":2652,"line_start":93,"line_end":93,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1969}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2662,"byte_end":2670,"line_start":94,"line_end":94,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2023}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2680,"byte_end":2684,"line_start":95,"line_end":95,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2075}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/lib.rs","byte_start":2694,"byte_end":2699,"line_start":96,"line_end":96,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2160}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":9255,"byte_end":9260,"line_start":66,"line_end":66,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12472,"byte_end":12477,"line_start":169,"line_end":169,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":42},"to":{"krate":0,"index":51}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":12955,"byte_end":12965,"line_start":193,"line_end":193,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":13520,"byte_end":13525,"line_start":209,"line_end":209,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":13842,"byte_end":13854,"line_start":222,"line_end":222,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":56},"to":{"krate":0,"index":60}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":19318,"byte_end":19329,"line_start":400,"line_end":400,"column_start":6,"column_end":17},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2381},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actor.rs","byte_start":19532,"byte_end":19543,"line_start":411,"line_end":411,"column_start":18,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2381},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":21139,"byte_end":21146,"line_start":45,"line_end":45,"column_start":16,"column_end":23},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2419},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":21200,"byte_end":21207,"line_start":49,"line_end":49,"column_start":15,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2419},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":21442,"byte_end":21449,"line_start":58,"line_end":58,"column_start":6,"column_end":13},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":27292,"byte_end":27299,"line_start":241,"line_end":241,"column_start":31,"column_end":38},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2419},"to":{"krate":0,"index":432}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":27532,"byte_end":27539,"line_start":251,"line_end":251,"column_start":36,"column_end":43},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2419},"to":{"krate":0,"index":432}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":27771,"byte_end":27778,"line_start":262,"line_end":262,"column_start":51,"column_end":58},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2419},"to":{"krate":0,"index":432}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs","byte_start":28264,"byte_end":28271,"line_start":282,"line_end":282,"column_start":6,"column_end":13},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":30224,"byte_end":30231,"line_start":19,"line_end":19,"column_start":53,"column_end":60},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":209},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":30466,"byte_end":30473,"line_start":28,"line_end":28,"column_start":26,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":209},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":30781,"byte_end":30788,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":209},"to":{"krate":0,"index":60}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":31485,"byte_end":31492,"line_start":82,"line_end":82,"column_start":9,"column_end":16},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":32753,"byte_end":32760,"line_start":132,"line_end":132,"column_start":34,"column_end":41},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":209},"to":{"krate":0,"index":273}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/context.rs","byte_start":33314,"byte_end":33315,"line_start":155,"line_end":155,"column_start":40,"column_end":41},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":247},"to":{"krate":0,"index":241}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":34323,"byte_end":34335,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":56},"to":{"krate":0,"index":273}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":34338,"byte_end":34350,"line_start":29,"line_end":29,"column_start":48,"column_end":60},"kind":"SuperTrait","from":{"krate":0,"index":60},"to":{"krate":0,"index":273}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":34732,"byte_end":34744,"line_start":48,"line_end":48,"column_start":24,"column_end":36},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":276},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":34985,"byte_end":34997,"line_start":60,"line_end":60,"column_start":9,"column_end":21},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":38759,"byte_end":38769,"line_start":201,"line_end":201,"column_start":27,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":307},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":38975,"byte_end":38985,"line_start":211,"line_end":211,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextimpl.rs","byte_start":41128,"byte_end":41138,"line_start":299,"line_end":299,"column_start":23,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":307},"to":{"krate":49,"index":468}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextitems.rs","byte_start":47905,"byte_end":47918,"line_start":15,"line_end":15,"column_start":9,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextitems.rs","byte_start":48760,"byte_end":48783,"line_start":53,"line_end":53,"column_start":12,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextitems.rs","byte_start":49103,"byte_end":49126,"line_start":68,"line_end":68,"column_start":28,"column_end":51},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":365},"to":{"krate":0,"index":1739}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextitems.rs","byte_start":49890,"byte_end":49906,"line_start":102,"line_end":102,"column_start":12,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextitems.rs","byte_start":50124,"byte_end":50140,"line_start":115,"line_end":115,"column_start":37,"column_end":53},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":383},"to":{"krate":0,"index":1739}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextitems.rs","byte_start":50717,"byte_end":50739,"line_start":144,"line_end":144,"column_start":15,"column_end":37},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/contextitems.rs","byte_start":50994,"byte_end":51016,"line_start":158,"line_end":158,"column_start":40,"column_end":62},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":399},"to":{"krate":0,"index":1739}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":53522,"byte_end":53532,"line_start":58,"line_end":58,"column_start":51,"column_end":61},"kind":{"Impl":{"id":28}},"from":{"krate":49,"index":5013},"to":{"krate":0,"index":449}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":53939,"byte_end":53952,"line_start":78,"line_end":78,"column_start":38,"column_end":51},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":438},"to":{"krate":0,"index":453}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":54214,"byte_end":54220,"line_start":90,"line_end":90,"column_start":62,"column_end":68},"kind":{"Impl":{"id":30}},"from":{"krate":2,"index":34535},"to":{"krate":0,"index":453}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":54494,"byte_end":54500,"line_start":102,"line_end":102,"column_start":50,"column_end":56},"kind":{"Impl":{"id":31}},"from":{"krate":2,"index":34376},"to":{"krate":0,"index":453}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":54759,"byte_end":54763,"line_start":114,"line_end":114,"column_start":41,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2679},"to":{"krate":0,"index":453}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":55077,"byte_end":55094,"line_start":127,"line_end":127,"column_start":62,"column_end":79},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":442},"to":{"krate":0,"index":453}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":55513,"byte_end":55527,"line_start":143,"line_end":143,"column_start":62,"column_end":76},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":446},"to":{"krate":0,"index":453}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":56156,"byte_end":56164,"line_start":170,"line_end":170,"column_start":27,"column_end":35},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":515},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":56529,"byte_end":56537,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":56988,"byte_end":56996,"line_start":199,"line_end":199,"column_start":62,"column_end":70},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":515},"to":{"krate":0,"index":453}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":57941,"byte_end":57954,"line_start":234,"line_end":234,"column_start":30,"column_end":43},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":58347,"byte_end":58360,"line_start":244,"line_end":244,"column_start":22,"column_end":35},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/handler.rs","byte_start":58850,"byte_end":58863,"line_start":263,"line_end":263,"column_start":62,"column_end":75},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":547},"to":{"krate":0,"index":453}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":63628,"byte_end":63639,"line_start":109,"line_end":109,"column_start":18,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/stream.rs","byte_start":63906,"byte_end":63917,"line_start":121,"line_end":121,"column_start":34,"column_end":45},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":596},"to":{"krate":0,"index":1739}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":67030,"byte_end":67040,"line_start":72,"line_end":72,"column_start":9,"column_end":19},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2606},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/supervisor.rs","byte_start":68912,"byte_end":68922,"line_start":138,"line_end":138,"column_start":20,"column_end":30},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2606},"to":{"krate":49,"index":468}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":71269,"byte_end":71275,"line_start":70,"line_end":70,"column_start":6,"column_end":12},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":73663,"byte_end":73675,"line_start":163,"line_end":163,"column_start":6,"column_end":18},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":74826,"byte_end":74839,"line_start":206,"line_end":206,"column_start":16,"column_end":29},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2629},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":74951,"byte_end":74961,"line_start":213,"line_end":213,"column_start":18,"column_end":28},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":710},"to":{"krate":0,"index":436}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":75018,"byte_end":75031,"line_start":217,"line_end":217,"column_start":30,"column_end":43},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2629},"to":{"krate":0,"index":432}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":75515,"byte_end":75530,"line_start":236,"line_end":236,"column_start":18,"column_end":33},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":718},"to":{"krate":0,"index":436}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":75607,"byte_end":75620,"line_start":241,"line_end":241,"column_start":35,"column_end":48},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2629},"to":{"krate":0,"index":432}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":75876,"byte_end":75893,"line_start":253,"line_end":253,"column_start":18,"column_end":35},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":727},"to":{"krate":0,"index":436}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":75972,"byte_end":75985,"line_start":258,"line_end":258,"column_start":37,"column_end":50},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2629},"to":{"krate":0,"index":432}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":76223,"byte_end":76236,"line_start":267,"line_end":267,"column_start":51,"column_end":64},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2629},"to":{"krate":0,"index":432}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/system.rs","byte_start":77800,"byte_end":77807,"line_start":330,"line_end":330,"column_start":6,"column_end":13},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":89110,"byte_end":89114,"line_start":22,"line_end":22,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":798}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":90085,"byte_end":90098,"line_start":55,"line_end":55,"column_start":31,"column_end":44},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":805},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":90365,"byte_end":90369,"line_start":64,"line_end":64,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":813}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":90372,"byte_end":90376,"line_start":64,"line_end":64,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":813}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":90379,"byte_end":90384,"line_start":64,"line_end":64,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":1762},"to":{"krate":0,"index":813}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":92613,"byte_end":92623,"line_start":144,"line_end":144,"column_start":6,"column_end":16},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":94645,"byte_end":94658,"line_start":210,"line_end":210,"column_start":16,"column_end":29},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":805},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":101586,"byte_end":101599,"line_start":418,"line_end":418,"column_start":26,"column_end":39},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":805},"to":{"krate":0,"index":798}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":102204,"byte_end":102217,"line_start":443,"line_end":443,"column_start":26,"column_end":39},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":805},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":103460,"byte_end":103473,"line_start":476,"line_end":476,"column_start":25,"column_end":38},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":805},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":103767,"byte_end":103780,"line_start":487,"line_end":487,"column_start":30,"column_end":43},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":805},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":103905,"byte_end":103918,"line_start":493,"line_end":493,"column_start":23,"column_end":36},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":805},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":103950,"byte_end":103963,"line_start":495,"line_end":495,"column_start":25,"column_end":38},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":805},"to":{"krate":2,"index":7019}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":104149,"byte_end":104170,"line_start":506,"line_end":506,"column_start":16,"column_end":37},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":817},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":106395,"byte_end":106410,"line_start":579,"line_end":579,"column_start":16,"column_end":31},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":814},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":111611,"byte_end":111626,"line_start":739,"line_end":739,"column_start":27,"column_end":42},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":814},"to":{"krate":49,"index":1430}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":113212,"byte_end":113227,"line_start":781,"line_end":781,"column_start":25,"column_end":40},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":814},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":114425,"byte_end":114430,"line_start":827,"line_end":827,"column_start":16,"column_end":21},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":820},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":114704,"byte_end":114709,"line_start":835,"line_end":835,"column_start":32,"column_end":37},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":820},"to":{"krate":2,"index":2071}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/channel.rs","byte_start":114747,"byte_end":114752,"line_start":836,"line_end":836,"column_start":32,"column_end":37},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":820},"to":{"krate":2,"index":2083}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/envelope.rs","byte_start":118065,"byte_end":118072,"line_start":28,"line_end":28,"column_start":33,"column_end":40},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":209},"to":{"krate":0,"index":924}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/envelope.rs","byte_start":118380,"byte_end":118388,"line_start":41,"line_end":41,"column_start":16,"column_end":24},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":935},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/envelope.rs","byte_start":118893,"byte_end":118901,"line_start":61,"line_end":61,"column_start":34,"column_end":42},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":935},"to":{"krate":0,"index":928}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/envelope.rs","byte_start":119274,"byte_end":119291,"line_start":81,"line_end":81,"column_start":28,"column_end":45},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":948},"to":{"krate":2,"index":2071}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/envelope.rs","byte_start":119382,"byte_end":119399,"line_start":88,"line_end":88,"column_start":30,"column_end":47},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":948},"to":{"krate":0,"index":928}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/message.rs","byte_start":120664,"byte_end":120671,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/message.rs","byte_start":121713,"byte_end":121720,"line_start":70,"line_end":70,"column_start":23,"column_end":30},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":982},"to":{"krate":49,"index":468}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/message.rs","byte_start":123070,"byte_end":123086,"line_start":117,"line_end":117,"column_start":9,"column_end":25},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/message.rs","byte_start":123987,"byte_end":124003,"line_start":151,"line_end":151,"column_start":20,"column_end":36},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1001},"to":{"krate":49,"index":468}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/queue.rs","byte_start":128343,"byte_end":128348,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2659},"to":{"krate":2,"index":2071}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/queue.rs","byte_start":128385,"byte_end":128390,"line_start":81,"line_end":81,"column_start":31,"column_end":36},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2659},"to":{"krate":2,"index":2083}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/queue.rs","byte_start":128406,"byte_end":128410,"line_start":83,"line_end":83,"column_start":9,"column_end":13},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/queue.rs","byte_start":128606,"byte_end":128611,"line_start":92,"line_end":92,"column_start":9,"column_end":14},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/queue.rs","byte_start":130410,"byte_end":130415,"line_start":145,"line_end":145,"column_start":18,"column_end":23},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2659},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":80629,"byte_end":80638,"line_start":33,"line_end":33,"column_start":9,"column_end":18},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":80808,"byte_end":80817,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1065},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":81094,"byte_end":81103,"line_start":50,"line_end":50,"column_start":26,"column_end":35},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1065},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":81413,"byte_end":81422,"line_start":59,"line_end":59,"column_start":27,"column_end":36},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1065},"to":{"krate":77,"index":92}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":81482,"byte_end":81494,"line_start":63,"line_end":63,"column_start":21,"column_end":33},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2666},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":81727,"byte_end":81731,"line_start":75,"line_end":75,"column_start":16,"column_end":20},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":83651,"byte_end":83655,"line_start":146,"line_end":146,"column_start":26,"column_end":30},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2679},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":83790,"byte_end":83794,"line_start":154,"line_end":154,"column_start":30,"column_end":34},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2679},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":83900,"byte_end":83904,"line_start":160,"line_end":160,"column_start":23,"column_end":27},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2679},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":83936,"byte_end":83940,"line_start":162,"line_end":162,"column_start":25,"column_end":29},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2679},"to":{"krate":2,"index":7019}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":84364,"byte_end":84373,"line_start":180,"line_end":180,"column_start":9,"column_end":18},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":85602,"byte_end":85606,"line_start":218,"line_end":218,"column_start":68,"column_end":72},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2679},"to":{"krate":2,"index":1986}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":85797,"byte_end":85806,"line_start":229,"line_end":229,"column_start":19,"column_end":28},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1110},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":85994,"byte_end":86003,"line_start":241,"line_end":241,"column_start":23,"column_end":32},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1110},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":86166,"byte_end":86175,"line_start":251,"line_end":251,"column_start":16,"column_end":25},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1110},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/address/mod.rs","byte_start":86251,"byte_end":86260,"line_start":258,"line_end":258,"column_start":18,"column_end":27},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1110},"to":{"krate":2,"index":7019}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/mailbox.rs","byte_start":131182,"byte_end":131189,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1151},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/mailbox.rs","byte_start":131445,"byte_end":131452,"line_start":33,"line_end":33,"column_start":21,"column_end":28},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1151},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/mailbox.rs","byte_start":131676,"byte_end":131684,"line_start":47,"line_end":47,"column_start":6,"column_end":14},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/mailbox.rs","byte_start":131771,"byte_end":131778,"line_start":54,"line_end":54,"column_start":9,"column_end":16},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":134897,"byte_end":134903,"line_start":41,"line_end":41,"column_start":9,"column_end":15},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":135154,"byte_end":135160,"line_start":52,"line_end":52,"column_start":42,"column_end":48},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1181},"to":{"krate":0,"index":2059}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":135210,"byte_end":135216,"line_start":53,"line_end":53,"column_start":44,"column_end":50},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1181},"to":{"krate":0,"index":2044}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":135246,"byte_end":135252,"line_start":54,"line_end":54,"column_start":24,"column_end":30},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1181},"to":{"krate":0,"index":51}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":135280,"byte_end":135286,"line_start":56,"line_end":56,"column_start":21,"column_end":27},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1181},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":135410,"byte_end":135416,"line_start":62,"line_end":62,"column_start":36,"column_end":42},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1181},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/mocker.rs","byte_start":135511,"byte_end":135517,"line_start":66,"line_end":66,"column_start":53,"column_end":59},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1181},"to":{"krate":0,"index":432}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":138058,"byte_end":138065,"line_start":73,"line_end":73,"column_start":6,"column_end":13},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":138425,"byte_end":138432,"line_start":89,"line_end":89,"column_start":18,"column_end":25},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2685},"to":{"krate":0,"index":436}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":138638,"byte_end":138645,"line_start":100,"line_end":100,"column_start":6,"column_end":13},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":139293,"byte_end":139300,"line_start":126,"line_end":126,"column_start":18,"column_end":25},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2697},"to":{"krate":0,"index":436}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":139448,"byte_end":139459,"line_start":133,"line_end":133,"column_start":18,"column_end":29},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2710},"to":{"krate":0,"index":436}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":140135,"byte_end":140143,"line_start":162,"line_end":162,"column_start":6,"column_end":14},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":140638,"byte_end":140646,"line_start":182,"line_end":182,"column_start":16,"column_end":24},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1246},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":141904,"byte_end":141912,"line_start":214,"line_end":214,"column_start":21,"column_end":29},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1246},"to":{"krate":0,"index":51}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":141940,"byte_end":141948,"line_start":216,"line_end":216,"column_start":24,"column_end":32},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1246},"to":{"krate":0,"index":2059}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":141970,"byte_end":141978,"line_start":218,"line_end":218,"column_start":18,"column_end":26},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1246},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":142150,"byte_end":142158,"line_start":228,"line_end":228,"column_start":27,"column_end":35},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1246},"to":{"krate":0,"index":432}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":142644,"byte_end":142652,"line_start":244,"line_end":244,"column_start":27,"column_end":35},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1246},"to":{"krate":0,"index":432}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":143137,"byte_end":143145,"line_start":259,"line_end":259,"column_start":31,"column_end":39},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1246},"to":{"krate":0,"index":432}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":143621,"byte_end":143631,"line_start":278,"line_end":278,"column_start":6,"column_end":16},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":145641,"byte_end":145651,"line_start":345,"line_end":345,"column_start":22,"column_end":32},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1271},"to":{"krate":0,"index":1739}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":147063,"byte_end":147075,"line_start":388,"line_end":388,"column_start":6,"column_end":18},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/resolver.rs","byte_start":147468,"byte_end":147480,"line_start":402,"line_end":402,"column_start":22,"column_end":34},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1289},"to":{"krate":0,"index":1739}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150743,"byte_end":150753,"line_start":88,"line_end":88,"column_start":18,"column_end":28},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2744},"to":{"krate":0,"index":436}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":150878,"byte_end":150884,"line_start":96,"line_end":96,"column_start":18,"column_end":24},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2763},"to":{"krate":0,"index":436}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":151053,"byte_end":151067,"line_start":105,"line_end":105,"column_start":18,"column_end":32},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1314},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":151193,"byte_end":151207,"line_start":113,"line_end":113,"column_start":16,"column_end":30},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1314},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":151267,"byte_end":151281,"line_start":117,"line_end":117,"column_start":21,"column_end":35},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1314},"to":{"krate":0,"index":51}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":151309,"byte_end":151323,"line_start":119,"line_end":119,"column_start":24,"column_end":38},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1314},"to":{"krate":0,"index":2059}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":153161,"byte_end":153175,"line_start":174,"line_end":174,"column_start":30,"column_end":44},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1314},"to":{"krate":0,"index":432}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":153614,"byte_end":153623,"line_start":190,"line_end":190,"column_start":18,"column_end":27},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1345},"to":{"krate":0,"index":436}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":153710,"byte_end":153724,"line_start":195,"line_end":195,"column_start":29,"column_end":43},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1314},"to":{"krate":0,"index":432}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":154056,"byte_end":154077,"line_start":207,"line_end":207,"column_start":18,"column_end":39},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1353},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":154161,"byte_end":154182,"line_start":213,"line_end":213,"column_start":16,"column_end":37},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1353},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/actors/signal.rs","byte_start":154672,"byte_end":154693,"line_start":229,"line_end":229,"column_start":26,"column_end":47},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1353},"to":{"krate":0,"index":432}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/and_then.rs","byte_start":169091,"byte_end":169098,"line_start":31,"line_end":31,"column_start":31,"column_end":38},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2768},"to":{"krate":0,"index":1739}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/chain.rs","byte_start":169834,"byte_end":169839,"line_start":17,"line_end":17,"column_start":15,"column_end":20},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/either.rs","byte_start":171455,"byte_end":171461,"line_start":16,"line_end":16,"column_start":15,"column_end":21},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/either.rs","byte_start":171872,"byte_end":171878,"line_start":29,"line_end":29,"column_start":28,"column_end":34},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2796},"to":{"krate":0,"index":1739}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/from_err.rs","byte_start":172930,"byte_end":172937,"line_start":30,"line_end":30,"column_start":57,"column_end":64},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2809},"to":{"krate":0,"index":1739}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/helpers.rs","byte_start":173485,"byte_end":173490,"line_start":5,"line_end":5,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":1451}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/helpers.rs","byte_start":173566,"byte_end":173567,"line_start":9,"line_end":9,"column_start":34,"column_end":35},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1454},"to":{"krate":0,"index":1451}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/helpers.rs","byte_start":174011,"byte_end":174017,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/helpers.rs","byte_start":174105,"byte_end":174111,"line_start":31,"line_end":31,"column_start":20,"column_end":26},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2818},"to":{"krate":49,"index":468}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/map.rs","byte_start":175034,"byte_end":175037,"line_start":26,"line_end":26,"column_start":31,"column_end":34},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2825},"to":{"krate":0,"index":1739}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/map_err.rs","byte_start":176257,"byte_end":176263,"line_start":26,"line_end":26,"column_start":31,"column_end":37},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2834},"to":{"krate":0,"index":1739}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/map_err.rs","byte_start":176990,"byte_end":176997,"line_start":58,"line_end":58,"column_start":9,"column_end":16},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/map_err.rs","byte_start":177138,"byte_end":177145,"line_start":67,"line_end":67,"column_start":25,"column_end":32},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1498},"to":{"krate":0,"index":1739}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":179931,"byte_end":179943,"line_start":90,"line_end":90,"column_start":31,"column_end":43},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2843},"to":{"krate":0,"index":1739}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/result.rs","byte_start":180315,"byte_end":180327,"line_start":108,"line_end":108,"column_start":38,"column_end":50},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2843},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_and_then.rs","byte_start":181180,"byte_end":181193,"line_start":34,"line_end":34,"column_start":31,"column_end":44},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2854},"to":{"krate":0,"index":1760}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_finish.rs","byte_start":182740,"byte_end":182752,"line_start":21,"line_end":21,"column_start":25,"column_end":37},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2866},"to":{"krate":0,"index":1739}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_fold.rs","byte_start":184491,"byte_end":184501,"line_start":50,"line_end":50,"column_start":36,"column_end":46},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2873},"to":{"krate":0,"index":1739}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_map.rs","byte_start":186600,"byte_end":186609,"line_start":25,"line_end":25,"column_start":31,"column_end":40},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2902},"to":{"krate":0,"index":1760}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_map_err.rs","byte_start":187911,"byte_end":187923,"line_start":25,"line_end":25,"column_start":31,"column_end":43},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2911},"to":{"krate":0,"index":1760}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_then.rs","byte_start":189197,"byte_end":189207,"line_start":38,"line_end":38,"column_start":31,"column_end":41},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2920},"to":{"krate":0,"index":1760}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/stream_timeout.rs","byte_start":191213,"byte_end":191226,"line_start":39,"line_end":39,"column_start":25,"column_end":38},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2932},"to":{"krate":0,"index":1760}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/then.rs","byte_start":192868,"byte_end":192872,"line_start":31,"line_end":31,"column_start":31,"column_end":35},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2941},"to":{"krate":0,"index":1739}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/timeout.rs","byte_start":194139,"byte_end":194146,"line_start":36,"line_end":36,"column_start":25,"column_end":32},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2951},"to":{"krate":0,"index":1739}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":164709,"byte_end":164710,"line_start":292,"line_end":292,"column_start":42,"column_end":43},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1790},"to":{"krate":0,"index":1783}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":164914,"byte_end":164917,"line_start":303,"line_end":303,"column_start":47,"column_end":50},"kind":{"Impl":{"id":184}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":1739}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":165797,"byte_end":165798,"line_start":337,"line_end":337,"column_start":45,"column_end":46},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1810},"to":{"krate":0,"index":1802}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":166575,"byte_end":166585,"line_start":375,"line_end":375,"column_start":28,"column_end":38},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1817},"to":{"krate":0,"index":1739}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":167484,"byte_end":167485,"line_start":413,"line_end":413,"column_start":45,"column_end":46},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1840},"to":{"krate":0,"index":1832}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/fut/mod.rs","byte_start":168058,"byte_end":168068,"line_start":447,"line_end":447,"column_start":28,"column_end":38},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1847},"to":{"krate":0,"index":1760}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":196177,"byte_end":196189,"line_start":60,"line_end":60,"column_start":51,"column_end":63},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1891},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":196534,"byte_end":196540,"line_start":76,"line_end":76,"column_start":51,"column_end":57},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1887},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":198484,"byte_end":198493,"line_start":148,"line_end":148,"column_start":49,"column_end":58},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1921},"to":{"krate":0,"index":1739}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":201298,"byte_end":201309,"line_start":238,"line_end":238,"column_start":31,"column_end":42},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1935},"to":{"krate":0,"index":1739}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/io.rs","byte_start":202988,"byte_end":202999,"line_start":293,"line_end":293,"column_start":33,"column_end":44},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":205911,"byte_end":205922,"line_start":11,"line_end":11,"column_start":18,"column_end":29},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1974},"to":{"krate":0,"index":436}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":206062,"byte_end":206072,"line_start":18,"line_end":18,"column_start":28,"column_end":38},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1979},"to":{"krate":0,"index":436}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":206145,"byte_end":206155,"line_start":22,"line_end":22,"column_start":38,"column_end":48},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":206521,"byte_end":206525,"line_start":39,"line_end":39,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":1992}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":206655,"byte_end":206656,"line_start":43,"line_end":43,"column_start":70,"column_end":71},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1997},"to":{"krate":0,"index":1992}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":207562,"byte_end":207569,"line_start":81,"line_end":81,"column_start":36,"column_end":43},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1999},"to":{"krate":0,"index":436}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":207624,"byte_end":207631,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":207991,"byte_end":207995,"line_start":103,"line_end":103,"column_start":53,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":2014}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/msgs.rs","byte_start":208092,"byte_end":208093,"line_start":107,"line_end":107,"column_start":32,"column_end":33},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2021},"to":{"krate":0,"index":2014}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210680,"byte_end":210685,"line_start":95,"line_end":95,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":42},"to":{"krate":0,"index":2044}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210713,"byte_end":210723,"line_start":95,"line_end":95,"column_start":60,"column_end":70},"kind":"SuperTrait","from":{"krate":0,"index":51},"to":{"krate":0,"index":2044}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":210726,"byte_end":210733,"line_start":95,"line_end":95,"column_start":73,"column_end":80},"kind":"SuperTrait","from":{"krate":2,"index":2059},"to":{"krate":0,"index":2044}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":211232,"byte_end":211240,"line_start":114,"line_end":114,"column_start":6,"column_end":14},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":214562,"byte_end":214567,"line_start":230,"line_end":230,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":42},"to":{"krate":0,"index":2059}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":214595,"byte_end":214605,"line_start":230,"line_end":230,"column_start":59,"column_end":69},"kind":"SuperTrait","from":{"krate":0,"index":51},"to":{"krate":0,"index":2059}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":214608,"byte_end":214615,"line_start":230,"line_end":230,"column_start":72,"column_end":79},"kind":"SuperTrait","from":{"krate":2,"index":2059},"to":{"krate":0,"index":2059}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":215170,"byte_end":215184,"line_start":249,"line_end":249,"column_start":6,"column_end":20},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3054},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/registry.rs","byte_start":217004,"byte_end":217018,"line_start":301,"line_end":301,"column_start":16,"column_end":30},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3054},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":219774,"byte_end":219785,"line_start":94,"line_end":94,"column_start":9,"column_end":20},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":220697,"byte_end":220708,"line_start":128,"line_end":128,"column_start":19,"column_end":30},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2105},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":220831,"byte_end":220842,"line_start":136,"line_end":136,"column_start":20,"column_end":31},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2105},"to":{"krate":49,"index":468}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":221639,"byte_end":221650,"line_start":167,"line_end":167,"column_start":33,"column_end":44},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2126},"to":{"krate":0,"index":924}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":222180,"byte_end":222191,"line_start":190,"line_end":190,"column_start":9,"column_end":20},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":223824,"byte_end":223835,"line_start":247,"line_end":247,"column_start":26,"column_end":37},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2126},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":224577,"byte_end":224596,"line_start":279,"line_end":279,"column_start":28,"column_end":47},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2142},"to":{"krate":2,"index":2071}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":224700,"byte_end":224719,"line_start":285,"line_end":285,"column_start":12,"column_end":31},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":2142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/sync.rs","byte_start":225053,"byte_end":225072,"line_start":300,"line_end":300,"column_start":30,"column_end":49},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2142},"to":{"krate":0,"index":928}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":225837,"byte_end":225846,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":226176,"byte_end":226185,"line_start":35,"line_end":35,"column_start":21,"column_end":30},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2176},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":227535,"byte_end":227544,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":228067,"byte_end":228068,"line_start":112,"line_end":112,"column_start":82,"column_end":83},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":2199},"to":{"krate":0,"index":2194}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":228258,"byte_end":228267,"line_start":119,"line_end":119,"column_start":25,"column_end":34},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2186},"to":{"krate":0,"index":1739}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":230178,"byte_end":230190,"line_start":190,"line_end":190,"column_start":16,"column_end":28},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":230708,"byte_end":230709,"line_start":207,"line_end":207,"column_start":84,"column_end":85},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":2220},"to":{"krate":0,"index":2215}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/utils.rs","byte_start":230897,"byte_end":230909,"line_start":214,"line_end":214,"column_start":32,"column_end":44},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":2207},"to":{"krate":0,"index":1760}}]}