{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0","program":"/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tower_service","/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=d251724af9a11dc4","-C","extra-filename=-d251724af9a11dc4","--out-dir","/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps","-L","dependency=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps","--extern","futures=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/libfutures-e0ccd5d58a6e4a70.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/libtower_service-d251724af9a11dc4.rmeta"},"prelude":{"crate_id":{"name":"tower_service","disambiguator":[1190962596628285746,8187850498917201691]},"crate_root":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src","external_crates":[{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12933703438800314702,5774803219644544316]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4051320655186846034,14773827427477085591]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3672675044024306215,7179779047398453100]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14739525726177289408,3061276640434149652]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2246841610299105657,12905561680815043912]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4036557704906104068,994131407893854156]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7443407023664770875,11250036483448109314]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[10148669557414888454,6400214184476534778]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4006540472161665961,15205760237192158299]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16043199729901662453,7825522302763349882]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[5738570549504868290,14845130516100231771]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[6807687926185025542,9498922200428406688]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6171827839412267364,4338689175470013405]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","num":18,"id":{"name":"futures","disambiguator":[2098182083268404567,641404974437566644]}}],"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":0,"byte_end":10547,"line_start":1,"line_end":333,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":0,"byte_end":10547,"line_start":1,"line_end":333,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":29},{"krate":0,"index":34},{"krate":0,"index":46},{"krate":0,"index":55},{"krate":0,"index":64},{"krate":0,"index":73}],"decl_id":null,"docs":" Definition of the core `Service` trait to Tower","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/ Definition of the core `Service` trait to Tower","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":79,"byte_end":130,"line_start":4,"line_end":4,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":131,"byte_end":134,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ These traits provide the necessary abstractions for defining a request /","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":135,"byte_end":211,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ response clients and servers. They are simple but powerul and are the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":212,"byte_end":285,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ used as the foundation for the rest of Tower.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":286,"byte_end":335,"line_start":8,"line_end":8,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":336,"byte_end":339,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`Service`](trait.Service.html) is the primary trait and defines the request","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":340,"byte_end":422,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/ / response exchange. See that trait for more details.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":423,"byte_end":480,"line_start":11,"line_end":11,"column_start":1,"column_end":58}},{"value":"/ * [`NewService`](trait.NewService.html) is essentially a service factory. It","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":481,"byte_end":561,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ is responsible for generating `Service` values on demand.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":562,"byte_end":623,"line_start":13,"line_end":13,"column_start":1,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":10},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":5606,"byte_end":5613,"line_start":165,"line_end":165,"column_start":11,"column_end":18},"name":"Service","qualname":"::Service","value":"Service","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17}],"decl_id":null,"docs":" An asynchronous function from `Request` to a `Response`.","sig":null,"attributes":[{"value":"/ An asynchronous function from `Request` to a `Response`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":741,"byte_end":801,"line_start":23,"line_end":23,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":802,"byte_end":805,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The `Service` trait is a simplified interface making it easy to write","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":806,"byte_end":879,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ network applications in a modular and reusable way, decoupled from the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":880,"byte_end":954,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ underlying protocol. It is one of Tower's fundamental abstractions.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":955,"byte_end":1026,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":1027,"byte_end":1030,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Functional","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":1031,"byte_end":1047,"line_start":29,"line_end":29,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":1048,"byte_end":1051,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A `Service` is a function of a `Request`. It immediately returns a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":1052,"byte_end":1122,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ `Future` representing the eventual completion of processing the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":1123,"byte_end":1190,"line_start":32,"line_end":32,"column_start":1,"column_end":68}},{"value":"/ request. The actual request processing may happen at any time in the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":1191,"byte_end":1263,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ future, on any thread or executor. The processing may depend on calling","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":1264,"byte_end":1339,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ other services. At some point in the future, the processing will complete,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":1340,"byte_end":1418,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ and the `Future` will resolve to a response or error.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":1419,"byte_end":1476,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":1477,"byte_end":1480,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ At a high level, the `Service::call` represents an RPC request. The","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":1481,"byte_end":1552,"line_start":38,"line_end":38,"column_start":1,"column_end":72}},{"value":"/ `Service` value can be a server or a client.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":1553,"byte_end":1601,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":1602,"byte_end":1605,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Server","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":1606,"byte_end":1618,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":1619,"byte_end":1622,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ An RPC server *implements* the `Service` trait. Requests received by the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":1623,"byte_end":1699,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ server over the network are deserialized then passed as an argument to the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":1700,"byte_end":1778,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ server value. The returned response is sent back over the network.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":1779,"byte_end":1849,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":1850,"byte_end":1853,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ As an example, here is how an HTTP request is processed by a server:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":1854,"byte_end":1926,"line_start":47,"line_end":47,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":1927,"byte_end":1930,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":1931,"byte_end":1949,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ impl Service for HelloWorld {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":1950,"byte_end":1983,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/     type Request = http::Request;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":1984,"byte_end":2021,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/     type Response = http::Response;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2022,"byte_end":2061,"line_start":52,"line_end":52,"column_start":1,"column_end":40}},{"value":"/     type Error = http::Error;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2062,"byte_end":2095,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/     type Future = Box<Future<Item = Self::Response, Error = http::Error>>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2096,"byte_end":2174,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2175,"byte_end":2178,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     fn poll_ready(&mut self) -> Poll<(), Self::Error> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2179,"byte_end":2238,"line_start":56,"line_end":56,"column_start":1,"column_end":60}},{"value":"/         Ok(Async::Ready(()))","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2239,"byte_end":2271,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2272,"byte_end":2281,"line_start":58,"line_end":58,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2282,"byte_end":2285,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     fn call(&mut self, req: http::Request) -> Self::Future {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2286,"byte_end":2350,"line_start":60,"line_end":60,"column_start":1,"column_end":65}},{"value":"/         // Create the HTTP response","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2351,"byte_end":2390,"line_start":61,"line_end":61,"column_start":1,"column_end":40}},{"value":"/         let resp = http::Response::ok()","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2391,"byte_end":2434,"line_start":62,"line_end":62,"column_start":1,"column_end":44}},{"value":"/             .with_body(b\"hello world\\n\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2435,"byte_end":2480,"line_start":63,"line_end":63,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2481,"byte_end":2484,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/         // Return the response as an immediate future","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2485,"byte_end":2542,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/         futures::finished(resp).boxed()","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2543,"byte_end":2586,"line_start":66,"line_end":66,"column_start":1,"column_end":44}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2587,"byte_end":2596,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2597,"byte_end":2602,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2603,"byte_end":2610,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2611,"byte_end":2614,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # Client","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2615,"byte_end":2627,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2628,"byte_end":2631,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ A client consumes a service by using a `Service` value. The client may","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2632,"byte_end":2706,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ issue requests by invoking `call` and passing the request as an argument.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2707,"byte_end":2784,"line_start":74,"line_end":74,"column_start":1,"column_end":78}},{"value":"/ It then receives the response by waiting for the returned future.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2785,"byte_end":2854,"line_start":75,"line_end":75,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2855,"byte_end":2858,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ As an example, here is how a Redis request would be issued:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2859,"byte_end":2922,"line_start":77,"line_end":77,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2923,"byte_end":2926,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2927,"byte_end":2945,"line_start":79,"line_end":79,"column_start":1,"column_end":19}},{"value":"/ let client = redis::Client::new()","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2946,"byte_end":2983,"line_start":80,"line_end":80,"column_start":1,"column_end":38}},{"value":"/     .connect(\"127.0.0.1:6379\".parse().unwrap())","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":2984,"byte_end":3035,"line_start":81,"line_end":81,"column_start":1,"column_end":52}},{"value":"/     .unwrap();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3036,"byte_end":3054,"line_start":82,"line_end":82,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3055,"byte_end":3058,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ let resp = client.call(Cmd::set(\"foo\", \"this is the value of foo\"));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3059,"byte_end":3131,"line_start":84,"line_end":84,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3132,"byte_end":3135,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ // Wait for the future to resolve","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3136,"byte_end":3173,"line_start":86,"line_end":86,"column_start":1,"column_end":38}},{"value":"/ println!(\"Redis response: {:?}\", await(resp));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3174,"byte_end":3224,"line_start":87,"line_end":87,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3225,"byte_end":3232,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3233,"byte_end":3236,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ # Middleware","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3237,"byte_end":3253,"line_start":90,"line_end":90,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3254,"byte_end":3257,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ More often than not, all the pieces needed for writing robust, scalable","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3258,"byte_end":3333,"line_start":92,"line_end":92,"column_start":1,"column_end":76}},{"value":"/ network applications are the same no matter the underlying protocol. By","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3334,"byte_end":3409,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/ unifying the API for both clients and servers in a protocol agnostic way,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3410,"byte_end":3487,"line_start":94,"line_end":94,"column_start":1,"column_end":78}},{"value":"/ it is possible to write middleware that provide these pieces in a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3488,"byte_end":3557,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ reusable way.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3558,"byte_end":3575,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3576,"byte_end":3579,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Take timeouts as an example:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3580,"byte_end":3612,"line_start":98,"line_end":98,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3613,"byte_end":3616,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3617,"byte_end":3635,"line_start":100,"line_end":100,"column_start":1,"column_end":19}},{"value":"/ use tower_service::Service;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3636,"byte_end":3667,"line_start":101,"line_end":101,"column_start":1,"column_end":32}},{"value":"/ use futures::Future;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3668,"byte_end":3692,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3693,"byte_end":3721,"line_start":103,"line_end":103,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3722,"byte_end":3725,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ use tokio_timer::Timer;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3726,"byte_end":3753,"line_start":105,"line_end":105,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3754,"byte_end":3757,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ pub struct Timeout<T> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3758,"byte_end":3785,"line_start":107,"line_end":107,"column_start":1,"column_end":28}},{"value":"/     inner: T,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3786,"byte_end":3803,"line_start":108,"line_end":108,"column_start":1,"column_end":18}},{"value":"/     delay: Duration,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3804,"byte_end":3828,"line_start":109,"line_end":109,"column_start":1,"column_end":25}},{"value":"/     timer: Timer,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3829,"byte_end":3850,"line_start":110,"line_end":110,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3851,"byte_end":3856,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3857,"byte_end":3860,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ pub struct Expired;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3861,"byte_end":3884,"line_start":113,"line_end":113,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3885,"byte_end":3888,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ impl<T> Timeout<T> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3889,"byte_end":3913,"line_start":115,"line_end":115,"column_start":1,"column_end":25}},{"value":"/     pub fn new(inner: T, delay: Duration) -> Timeout<T> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3914,"byte_end":3975,"line_start":116,"line_end":116,"column_start":1,"column_end":62}},{"value":"/         Timeout {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3976,"byte_end":3997,"line_start":117,"line_end":117,"column_start":1,"column_end":22}},{"value":"/             inner: inner,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":3998,"byte_end":4027,"line_start":118,"line_end":118,"column_start":1,"column_end":30}},{"value":"/             delay: delay,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4028,"byte_end":4057,"line_start":119,"line_end":119,"column_start":1,"column_end":30}},{"value":"/             timer: Timer::default(),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4058,"byte_end":4098,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/         }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4099,"byte_end":4112,"line_start":121,"line_end":121,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4113,"byte_end":4122,"line_start":122,"line_end":122,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4123,"byte_end":4128,"line_start":123,"line_end":123,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4129,"byte_end":4132,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ impl<T> Service for Timeout<T>","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4133,"byte_end":4167,"line_start":125,"line_end":125,"column_start":1,"column_end":35}},{"value":"/     where T: Service,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4168,"byte_end":4193,"line_start":126,"line_end":126,"column_start":1,"column_end":26}},{"value":"/           T::Error: From<Expired>,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4194,"byte_end":4232,"line_start":127,"line_end":127,"column_start":1,"column_end":39}},{"value":"/ {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4233,"byte_end":4238,"line_start":128,"line_end":128,"column_start":1,"column_end":6}},{"value":"/     type Request = T::Request;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4239,"byte_end":4273,"line_start":129,"line_end":129,"column_start":1,"column_end":35}},{"value":"/     type Response = T::Response;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4274,"byte_end":4310,"line_start":130,"line_end":130,"column_start":1,"column_end":37}},{"value":"/     type Error = T::Error;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4311,"byte_end":4341,"line_start":131,"line_end":131,"column_start":1,"column_end":31}},{"value":"/     type Future = Box<Future<Item = Self::Response, Error = Self::Error>>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4342,"byte_end":4420,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4421,"byte_end":4424,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/     fn poll_ready(&mut self) -> Poll<(), Self::Error> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4425,"byte_end":4484,"line_start":134,"line_end":134,"column_start":1,"column_end":60}},{"value":"/         Ok(Async::Ready(()))","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4485,"byte_end":4517,"line_start":135,"line_end":135,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4518,"byte_end":4527,"line_start":136,"line_end":136,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4528,"byte_end":4531,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/     fn call(&mut self, req: Self::Req) -> Self::Future {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4532,"byte_end":4592,"line_start":138,"line_end":138,"column_start":1,"column_end":61}},{"value":"/         let timeout = self.timer.sleep(self.delay)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4593,"byte_end":4647,"line_start":139,"line_end":139,"column_start":1,"column_end":55}},{"value":"/             .and_then(|_| Err(Self::Error::from(Expired)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4648,"byte_end":4711,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4712,"byte_end":4715,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/         self.inner.call(req)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4716,"byte_end":4748,"line_start":142,"line_end":142,"column_start":1,"column_end":33}},{"value":"/             .select(timeout)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4749,"byte_end":4781,"line_start":143,"line_end":143,"column_start":1,"column_end":33}},{"value":"/             .map(|(v, _)| v)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4782,"byte_end":4814,"line_start":144,"line_end":144,"column_start":1,"column_end":33}},{"value":"/             .map_err(|(e, _)| e)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4815,"byte_end":4851,"line_start":145,"line_end":145,"column_start":1,"column_end":37}},{"value":"/             .boxed()","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4852,"byte_end":4876,"line_start":146,"line_end":146,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4877,"byte_end":4886,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4887,"byte_end":4892,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4893,"byte_end":4896,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4897,"byte_end":4904,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4905,"byte_end":4908,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ The above timeout implementation is decoupled from the underlying protocol","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4909,"byte_end":4987,"line_start":152,"line_end":152,"column_start":1,"column_end":79}},{"value":"/ and is also decoupled from client or server concerns. In other words, the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":4988,"byte_end":5065,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/ same timeout middleware could be used in either a client or a server.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":5066,"byte_end":5139,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":5140,"byte_end":5143,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ # Backpressure","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":5144,"byte_end":5162,"line_start":156,"line_end":156,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":5163,"byte_end":5166,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ Calling an at capacity `Service` (i.e., it temporarily unable to process a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":5167,"byte_end":5245,"line_start":158,"line_end":158,"column_start":1,"column_end":79}},{"value":"/ request) should result in an error. The caller is responsible for ensuring","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":5246,"byte_end":5324,"line_start":159,"line_end":159,"column_start":1,"column_end":79}},{"value":"/ that the service is ready to receive the request before calling it.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":5325,"byte_end":5396,"line_start":160,"line_end":160,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":5397,"byte_end":5400,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ `Service` provides a mechanism by which the caller is able to coordinate","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":5401,"byte_end":5477,"line_start":162,"line_end":162,"column_start":1,"column_end":77}},{"value":"/ readiness. `Service::poll_ready` returns `Ready` if the service expects that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":5478,"byte_end":5558,"line_start":163,"line_end":163,"column_start":1,"column_end":81}},{"value":"/ it is able to process a request.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":5559,"byte_end":5595,"line_start":164,"line_end":164,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":11},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":5667,"byte_end":5674,"line_start":168,"line_end":168,"column_start":10,"column_end":17},"name":"Request","qualname":"::Service::Request","value":"type Request;","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Requests handled by the service.\n","sig":null,"attributes":[{"value":"/ Requests handled by the service.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":5621,"byte_end":5657,"line_start":167,"line_end":167,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":12},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":5726,"byte_end":5734,"line_start":171,"line_end":171,"column_start":10,"column_end":18},"name":"Response","qualname":"::Service::Response","value":"type Response;","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Responses given by the service.\n","sig":null,"attributes":[{"value":"/ Responses given by the service.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":5681,"byte_end":5716,"line_start":170,"line_end":170,"column_start":5,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":13},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":5786,"byte_end":5791,"line_start":174,"line_end":174,"column_start":10,"column_end":15},"name":"Error","qualname":"::Service::Error","value":"type Error;","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Errors produced by the service.\n","sig":null,"attributes":[{"value":"/ Errors produced by the service.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":5741,"byte_end":5776,"line_start":173,"line_end":173,"column_start":5,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":14},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":5838,"byte_end":5844,"line_start":177,"line_end":177,"column_start":10,"column_end":16},"name":"Future","qualname":"::Service::Future","value":"type Future: Future<Item = Self::Response, Error = Self::Error>;","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" The future response value.\n","sig":null,"attributes":[{"value":"/ The future response value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":5798,"byte_end":5828,"line_start":176,"line_end":176,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":5982,"byte_end":5987,"line_start":180,"line_end":180,"column_start":8,"column_end":13},"name":"ready","qualname":"::Service::ready","value":"pub fn ready(Self) -> Ready<Self> where Self: Sized","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" A future yielding the service when it is ready to accept a request.\n","sig":null,"attributes":[{"value":"/ A future yielding the service when it is ready to accept a request.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":5903,"byte_end":5974,"line_start":179,"line_end":179,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":6594,"byte_end":6604,"line_start":193,"line_end":193,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"::Service::poll_ready","value":"pub fn poll_ready(&mut Self) -> Poll<(), Self::Error>","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Returns `Ready` when the service is able to process requests.","sig":null,"attributes":[{"value":"/ Returns `Ready` when the service is able to process requests.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":6076,"byte_end":6141,"line_start":184,"line_end":184,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":6146,"byte_end":6149,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ If the service is at capacity, then `NotReady` is returned and the task","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":6154,"byte_end":6229,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ is notified when the service becomes ready again. This function is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":6234,"byte_end":6304,"line_start":187,"line_end":187,"column_start":5,"column_end":75}},{"value":"/ expected to be called while on a task.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":6309,"byte_end":6351,"line_start":188,"line_end":188,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":6356,"byte_end":6359,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This is a **best effort** implementation. False positives are permitted.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":6364,"byte_end":6440,"line_start":190,"line_end":190,"column_start":5,"column_end":81}},{"value":"/ It is permitted for the service to return `Ready` from a `poll_ready`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":6445,"byte_end":6518,"line_start":191,"line_end":191,"column_start":5,"column_end":78}},{"value":"/ call and the next invocation of `call` results in an error.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":6523,"byte_end":6586,"line_start":192,"line_end":192,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":7131,"byte_end":7135,"line_start":204,"line_end":204,"column_start":8,"column_end":12},"name":"call","qualname":"::Service::call","value":"pub fn call(&mut Self, Self::Request) -> Self::Future","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Process the request and return the response asynchronously.","sig":null,"attributes":[{"value":"/ Process the request and return the response asynchronously.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":6647,"byte_end":6710,"line_start":195,"line_end":195,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":6715,"byte_end":6718,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ This function is expected to be callable off task. As such,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":6723,"byte_end":6786,"line_start":197,"line_end":197,"column_start":5,"column_end":68}},{"value":"/ implementations should take care to not call `poll_ready`. If the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":6791,"byte_end":6860,"line_start":198,"line_end":198,"column_start":5,"column_end":74}},{"value":"/ service is at capacity and the request is unable to be handled, the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":6865,"byte_end":6936,"line_start":199,"line_end":199,"column_start":5,"column_end":76}},{"value":"/ returned `Future` should resolve to an error.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":6941,"byte_end":6990,"line_start":200,"line_end":200,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":6995,"byte_end":6998,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ Calling `call` without calling `poll_ready` is permitted. The","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":7003,"byte_end":7068,"line_start":202,"line_end":202,"column_start":5,"column_end":70}},{"value":"/ implementation must be resilient to this fact.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":7073,"byte_end":7123,"line_start":203,"line_end":203,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":18},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":7334,"byte_end":7339,"line_start":210,"line_end":210,"column_start":12,"column_end":17},"name":"Ready","qualname":"::Ready","value":"Ready {  }","parent":null,"children":[{"krate":0,"index":20}],"decl_id":null,"docs":" Future yielding a `Service` once the service is ready to process a request","sig":null,"attributes":[{"value":"/ Future yielding a `Service` once the service is ready to process a request","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":7187,"byte_end":7265,"line_start":207,"line_end":207,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":7266,"byte_end":7269,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ `Ready` values are produced by `Service::ready`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":7270,"byte_end":7322,"line_start":209,"line_end":209,"column_start":1,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":21},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":7754,"byte_end":7764,"line_start":221,"line_end":221,"column_start":11,"column_end":21},"name":"NewService","qualname":"::NewService","value":"NewService","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28}],"decl_id":null,"docs":" Creates new `Service` values.","sig":null,"attributes":[{"value":"/ Creates new `Service` values.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":7370,"byte_end":7403,"line_start":214,"line_end":214,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":7404,"byte_end":7407,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ Acts as a service factory. This is useful for cases where new `Service`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":7408,"byte_end":7483,"line_start":216,"line_end":216,"column_start":1,"column_end":76}},{"value":"/ values must be produced. One case is a TCP servier listener. The listner","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":7484,"byte_end":7560,"line_start":217,"line_end":217,"column_start":1,"column_end":77}},{"value":"/ accepts new TCP streams, obtains a new `Service` value using the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":7561,"byte_end":7629,"line_start":218,"line_end":218,"column_start":1,"column_end":69}},{"value":"/ `NewService` trait, and uses that new `Service` value to process inbound","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":7630,"byte_end":7706,"line_start":219,"line_end":219,"column_start":1,"column_end":77}},{"value":"/ requests on that new TCP stream.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":7707,"byte_end":7743,"line_start":220,"line_end":220,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":22},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":7816,"byte_end":7823,"line_start":223,"line_end":223,"column_start":10,"column_end":17},"name":"Request","qualname":"::NewService::Request","value":"type Request;","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" Requests handled by the service\n","sig":null,"attributes":[{"value":"/ Requests handled by the service","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":7771,"byte_end":7806,"line_start":222,"line_end":222,"column_start":5,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":23},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":7874,"byte_end":7882,"line_start":226,"line_end":226,"column_start":10,"column_end":18},"name":"Response","qualname":"::NewService::Response","value":"type Response;","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" Responses given by the service\n","sig":null,"attributes":[{"value":"/ Responses given by the service","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":7830,"byte_end":7864,"line_start":225,"line_end":225,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":24},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":7933,"byte_end":7938,"line_start":229,"line_end":229,"column_start":10,"column_end":15},"name":"Error","qualname":"::NewService::Error","value":"type Error;","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" Errors produced by the service\n","sig":null,"attributes":[{"value":"/ Errors produced by the service","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":7889,"byte_end":7923,"line_start":228,"line_end":228,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":25},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":8002,"byte_end":8009,"line_start":232,"line_end":232,"column_start":10,"column_end":17},"name":"Service","qualname":"::NewService::Service","value":"type Service: Service<Request = Self::Request, Response = Self::Response, Error = Self::Error>;","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" The `Service` value created by this factory\n","sig":null,"attributes":[{"value":"/ The `Service` value created by this factory","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":7945,"byte_end":7992,"line_start":231,"line_end":231,"column_start":5,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":26},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":8153,"byte_end":8162,"line_start":235,"line_end":235,"column_start":10,"column_end":19},"name":"InitError","qualname":"::NewService::InitError","value":"type InitError;","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" Errors produced while building a service.\n","sig":null,"attributes":[{"value":"/ Errors produced while building a service.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":8098,"byte_end":8143,"line_start":234,"line_end":234,"column_start":5,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":27},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":8220,"byte_end":8226,"line_start":238,"line_end":238,"column_start":10,"column_end":16},"name":"Future","qualname":"::NewService::Future","value":"type Future: Future<Item = Self::Service, Error = Self::InitError>;","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" The future of the `Service` instance.\n","sig":null,"attributes":[{"value":"/ The future of the `Service` instance.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":8169,"byte_end":8210,"line_start":237,"line_end":237,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":8353,"byte_end":8364,"line_start":241,"line_end":241,"column_start":8,"column_end":19},"name":"new_service","qualname":"::NewService::new_service","value":"pub fn new_service(&Self) -> Self::Future","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" Create and return a new service value asynchronously.\n","sig":null,"attributes":[{"value":"/ Create and return a new service value asynchronously.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":8288,"byte_end":8345,"line_start":240,"line_end":240,"column_start":5,"column_end":62}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":8411,"byte_end":8416,"line_start":244,"line_end":244,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":8837,"byte_end":8838,"line_start":262,"line_end":262,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":9229,"byte_end":9232,"line_start":279,"line_end":279,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":9553,"byte_end":9555,"line_start":292,"line_end":292,"column_start":45,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":10230,"byte_end":10233,"line_start":320,"line_end":320,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":8411,"byte_end":8416,"line_start":244,"line_end":244,"column_start":20,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":18},"to":{"krate":18,"index":468}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":8837,"byte_end":8838,"line_start":262,"line_end":262,"column_start":33,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":35},"to":{"krate":0,"index":21}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":9229,"byte_end":9232,"line_start":279,"line_end":279,"column_start":45,"column_end":48},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":4499},"to":{"krate":0,"index":21}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":9553,"byte_end":9555,"line_start":292,"line_end":292,"column_start":45,"column_end":47},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":3577},"to":{"krate":0,"index":21}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.1.0/src/lib.rs","byte_start":10230,"byte_end":10233,"line_start":320,"line_end":320,"column_start":39,"column_end":42},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":10}}]}