{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1","program":"/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","parking_lot","/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"owning_ref\"","-C","metadata=1bdd8aa70cd1ab7f","-C","extra-filename=-1bdd8aa70cd1ab7f","--out-dir","/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps","-L","dependency=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps","--extern","lock_api=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/liblock_api-09b28bcf060fc848.rmeta","--extern","parking_lot_core=/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/libparking_lot_core-12749035302af60f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ytakasugi/004_learning_rust/rust_basics/practice/rust_bycycle_book/chapter11/start-aw/target/rls/debug/deps/libparking_lot-1bdd8aa70cd1ab7f.rmeta"},"prelude":{"crate_id":{"name":"parking_lot","disambiguator":[16811782554066042861,2609589353052703474]},"crate_root":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src","external_crates":[{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12933703438800314702,5774803219644544316]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4051320655186846034,14773827427477085591]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3672675044024306215,7179779047398453100]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14739525726177289408,3061276640434149652]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2246841610299105657,12905561680815043912]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4036557704906104068,994131407893854156]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7443407023664770875,11250036483448109314]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[10148669557414888454,6400214184476534778]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4006540472161665961,15205760237192158299]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16043199729901662453,7825522302763349882]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[5738570549504868290,14845130516100231771]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[6807687926185025542,9498922200428406688]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6171827839412267364,4338689175470013405]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":18,"id":{"name":"lock_api","disambiguator":[14426188201312682987,16107631521836560693]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":19,"id":{"name":"scopeguard","disambiguator":[10466149439356409966,1841649414219574799]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":20,"id":{"name":"owning_ref","disambiguator":[5208252690901990398,16041516644950240441]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":21,"id":{"name":"stable_deref_trait","disambiguator":[2850094935240255700,9357797742705823043]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":22,"id":{"name":"parking_lot_core","disambiguator":[6241157217721162446,3074887994565083071]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":23,"id":{"name":"rand","disambiguator":[17721868731490882155,1313758978880593246]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":24,"id":{"name":"rand_jitter","disambiguator":[1102156627884331117,1826205023677028881]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":25,"id":{"name":"rand_core","disambiguator":[3536941681022878631,2948173984437957771]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":26,"id":{"name":"rand_os","disambiguator":[8060358546450799486,7232075442591269522]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":27,"id":{"name":"libc","disambiguator":[9849704674495894568,2588148581706726478]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":28,"id":{"name":"rand_isaac","disambiguator":[18313996785854319723,12165171948909693502]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":29,"id":{"name":"rand_core","disambiguator":[3243845491313667216,1195655994154243412]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":30,"id":{"name":"rand_chacha","disambiguator":[2542749049662107628,10336064225064168942]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":31,"id":{"name":"rand_hc","disambiguator":[13689314331574973562,7387424735473549503]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":32,"id":{"name":"rand_pcg","disambiguator":[18226604487133403790,8002598138015069623]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":33,"id":{"name":"rand_xorshift","disambiguator":[11393397486594572930,9349033886579992764]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":34,"id":{"name":"smallvec","disambiguator":[2244386155222600517,7413594205429221302]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":35,"id":{"name":"maybe_uninit","disambiguator":[10922732309434712432,8105429422995239737]}}],"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":333,"byte_end":1530,"line_start":8,"line_end":45,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":31},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1102,"byte_end":1109,"line_start":36,"line_end":36,"column_start":19,"column_end":26},"alias_span":null,"name":"Condvar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":399},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1111,"byte_end":1128,"line_start":36,"line_end":36,"column_start":28,"column_end":45},"alias_span":null,"name":"WaitTimeoutResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":76},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1147,"byte_end":1163,"line_start":37,"line_end":37,"column_start":17,"column_end":33},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":71},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1165,"byte_end":1170,"line_start":37,"line_end":37,"column_start":35,"column_end":40},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":73},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1172,"byte_end":1182,"line_start":37,"line_end":37,"column_start":42,"column_end":52},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":101},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1200,"byte_end":1204,"line_start":38,"line_end":38,"column_start":16,"column_end":20},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":414},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1206,"byte_end":1215,"line_start":38,"line_end":38,"column_start":22,"column_end":31},"alias_span":null,"name":"OnceState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":104},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1217,"byte_end":1226,"line_start":38,"line_end":38,"column_start":33,"column_end":42},"alias_span":null,"name":"ONCE_INIT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":155},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1248,"byte_end":1256,"line_start":39,"line_end":39,"column_start":20,"column_end":28},"alias_span":null,"name":"RawMutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":227},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1278,"byte_end":1287,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"alias_span":null,"name":"RawRwLock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":334},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1307,"byte_end":1332,"line_start":41,"line_end":41,"column_start":19,"column_end":44},"alias_span":null,"name":"MappedReentrantMutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":323},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1334,"byte_end":1345,"line_start":41,"line_end":41,"column_start":46,"column_end":57},"alias_span":null,"name":"RawThreadId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":324},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1334,"byte_end":1345,"line_start":41,"line_end":41,"column_start":46,"column_end":57},"alias_span":null,"name":"RawThreadId","value":"","parent":{"krate":0,"index":389}},{"kind":"Use","ref_id":{"krate":0,"index":329},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1347,"byte_end":1361,"line_start":41,"line_end":41,"column_start":59,"column_end":73},"alias_span":null,"name":"ReentrantMutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":331},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1363,"byte_end":1382,"line_start":41,"line_end":41,"column_start":75,"column_end":94},"alias_span":null,"name":"ReentrantMutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":348},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1407,"byte_end":1428,"line_start":43,"line_end":43,"column_start":5,"column_end":26},"alias_span":null,"name":"MappedRwLockReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":351},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1430,"byte_end":1452,"line_start":43,"line_end":43,"column_start":28,"column_end":50},"alias_span":null,"name":"MappedRwLockWriteGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":340},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1454,"byte_end":1460,"line_start":43,"line_end":43,"column_start":52,"column_end":58},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":342},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1462,"byte_end":1477,"line_start":43,"line_end":43,"column_start":60,"column_end":75},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":354},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1483,"byte_end":1508,"line_start":44,"line_end":44,"column_start":5,"column_end":30},"alias_span":null,"name":"RwLockUpgradableReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":345},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1510,"byte_end":1526,"line_start":44,"line_end":44,"column_start":32,"column_end":48},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":333,"byte_end":1530,"line_start":8,"line_end":45,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":57},{"krate":0,"index":68},{"krate":0,"index":79},{"krate":0,"index":129},{"krate":0,"index":181},{"krate":0,"index":318},{"krate":0,"index":337},{"krate":0,"index":357},{"krate":0,"index":370},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":634},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398}],"decl_id":null,"docs":" This library provides implementations of `Mutex`, `RwLock`, `Condvar` and\n `Once` that are smaller, faster and more flexible than those in the Rust\n standard library. It also provides a `ReentrantMutex` type.\n","sig":null,"attributes":[{"value":"/ This library provides implementations of `Mutex`, `RwLock`, `Condvar` and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":333,"byte_end":410,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ `Once` that are smaller, faster and more flexible than those in the Rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":411,"byte_end":487,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ standard library. It also provides a `ReentrantMutex` type.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":488,"byte_end":551,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"warn(missing_docs)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":553,"byte_end":575,"line_start":12,"line_end":12,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":399},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":2362,"byte_end":2379,"line_start":21,"line_end":21,"column_start":12,"column_end":29},"name":"WaitTimeoutResult","qualname":"::condvar::WaitTimeoutResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type indicating whether a timed wait on a condition variable returned\n due to a time out or not.\n","sig":null,"attributes":[{"value":"/ A type indicating whether a timed wait on a condition variable returned","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":2200,"byte_end":2275,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ due to a time out or not.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":2276,"byte_end":2305,"line_start":19,"line_end":19,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":2500,"byte_end":2509,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"timed_out","qualname":"<WaitTimeoutResult>::timed_out","value":"pub fn timed_out(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the wait was known to have timed out.\n","sig":null,"attributes":[{"value":"/ Returns whether the wait was known to have timed out.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":2417,"byte_end":2474,"line_start":24,"line_end":24,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":2479,"byte_end":2488,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":31},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4660,"byte_end":4667,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"Condvar","qualname":"::condvar::Condvar","value":"Condvar {  }","parent":null,"children":[{"krate":0,"index":32}],"decl_id":null,"docs":" A Condition Variable","sig":null,"attributes":[{"value":"/ A Condition Variable","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":2551,"byte_end":2575,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":2576,"byte_end":2579,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Condition variables represent the ability to block a thread such that it","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":2580,"byte_end":2656,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ consumes no CPU time while waiting for an event to occur. Condition","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":2657,"byte_end":2728,"line_start":34,"line_end":34,"column_start":1,"column_end":72}},{"value":"/ variables are typically associated with a boolean predicate (a condition)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":2729,"byte_end":2806,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ and a mutex. The predicate is always verified inside of the mutex before","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":2807,"byte_end":2883,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ determining that thread must block.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":2884,"byte_end":2923,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":2924,"byte_end":2927,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Note that this module places one additional restriction over the system","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":2928,"byte_end":3003,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/ condition variables: each condvar can be used with only one mutex at a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":3004,"byte_end":3078,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ time. Any attempt to use multiple mutexes on the same condition variable","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":3079,"byte_end":3155,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ simultaneously will result in a runtime panic. However it is possible to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":3156,"byte_end":3232,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ switch to a different mutex if there are no threads currently waiting on","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":3233,"byte_end":3309,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ the condition variable.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":3310,"byte_end":3337,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":3338,"byte_end":3341,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Differences from the standard library `Condvar`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":3342,"byte_end":3395,"line_start":46,"line_end":46,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":3396,"byte_end":3399,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ - No spurious wakeups: A wait will only return a non-timeout result if it","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":3400,"byte_end":3477,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/   was woken up by `notify_one` or `notify_all`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":3478,"byte_end":3529,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/ - `Condvar::notify_all` will only wake up a single thread, the rest are","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":3530,"byte_end":3605,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/   requeued to wait for the `Mutex` to be unlocked by the thread that was","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":3606,"byte_end":3682,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/   woken up.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":3683,"byte_end":3698,"line_start":52,"line_end":52,"column_start":1,"column_end":16}},{"value":"/ - Only requires 1 word of space, whereas the standard library boxes the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":3699,"byte_end":3774,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"/   `Condvar` due to platform limitations.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":3775,"byte_end":3819,"line_start":54,"line_end":54,"column_start":1,"column_end":45}},{"value":"/ - Can be statically constructed (requires the `const_fn` nightly feature).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":3820,"byte_end":3898,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ - Does not require any drop glue when dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":3899,"byte_end":3949,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ - Inline fast path for the uncontended case.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":3950,"byte_end":3998,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":3999,"byte_end":4002,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4003,"byte_end":4017,"line_start":59,"line_end":59,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4018,"byte_end":4021,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4022,"byte_end":4029,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ use parking_lot::{Mutex, Condvar};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4030,"byte_end":4068,"line_start":62,"line_end":62,"column_start":1,"column_end":39}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4069,"byte_end":4092,"line_start":63,"line_end":63,"column_start":1,"column_end":24}},{"value":"/ use std::thread;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4093,"byte_end":4113,"line_start":64,"line_end":64,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4114,"byte_end":4117,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4118,"byte_end":4179,"line_start":66,"line_end":66,"column_start":1,"column_end":62}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4180,"byte_end":4209,"line_start":67,"line_end":67,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4210,"byte_end":4213,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ // Inside of our lock, spawn a new thread, and then wait for it to start","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4214,"byte_end":4290,"line_start":69,"line_end":69,"column_start":1,"column_end":77}},{"value":"/ thread::spawn(move|| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4291,"byte_end":4317,"line_start":70,"line_end":70,"column_start":1,"column_end":27}},{"value":"/     let &(ref lock, ref cvar) = &*pair2;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4318,"byte_end":4362,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/     let mut started = lock.lock();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4363,"byte_end":4401,"line_start":72,"line_end":72,"column_start":1,"column_end":39}},{"value":"/     *started = true;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4402,"byte_end":4426,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4427,"byte_end":4453,"line_start":74,"line_end":74,"column_start":1,"column_end":27}},{"value":"/ });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4454,"byte_end":4461,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4462,"byte_end":4465,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // wait for the thread to start up","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4466,"byte_end":4504,"line_start":77,"line_end":77,"column_start":1,"column_end":39}},{"value":"/ let &(ref lock, ref cvar) = &*pair;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4505,"byte_end":4544,"line_start":78,"line_end":78,"column_start":1,"column_end":40}},{"value":"/ let mut started = lock.lock();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4545,"byte_end":4579,"line_start":79,"line_end":79,"column_start":1,"column_end":35}},{"value":"/ while !*started {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4580,"byte_end":4601,"line_start":80,"line_end":80,"column_start":1,"column_end":22}},{"value":"/     cvar.wait(&mut started);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4602,"byte_end":4634,"line_start":81,"line_end":81,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4635,"byte_end":4640,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4641,"byte_end":4648,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5139,"byte_end":5142,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"new","qualname":"<Condvar>::new","value":"pub fn new() -> Condvar","parent":null,"children":[],"decl_id":null,"docs":" Creates a new condition variable which is ready to be waited on and\n notified.\n","sig":null,"attributes":[{"value":"/ Creates a new condition variable which is ready to be waited on and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4987,"byte_end":5058,"line_start":99,"line_end":99,"column_start":5,"column_end":76}},{"value":"/ notified.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5063,"byte_end":5076,"line_start":100,"line_end":100,"column_start":5,"column_end":18}},{"value":"cfg(not(feature = \"nightly\"))","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5081,"byte_end":5113,"line_start":101,"line_end":101,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5118,"byte_end":5127,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5968,"byte_end":5978,"line_start":133,"line_end":133,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Condvar>::notify_one","value":"pub fn notify_one(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Wakes up one blocked thread on this condvar.","sig":null,"attributes":[{"value":"/ Wakes up one blocked thread on this condvar.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5249,"byte_end":5297,"line_start":109,"line_end":109,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5302,"byte_end":5305,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Returns whether a thread was woken up.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5310,"byte_end":5352,"line_start":111,"line_end":111,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5357,"byte_end":5360,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If there is a blocked thread on this condition variable, then it will","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5365,"byte_end":5438,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ be woken up from its call to `wait` or `wait_timeout`. Calls to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5443,"byte_end":5510,"line_start":114,"line_end":114,"column_start":5,"column_end":72}},{"value":"/ `notify_one` are not buffered in any way.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5515,"byte_end":5560,"line_start":115,"line_end":115,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5565,"byte_end":5568,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ To wake up all threads, see `notify_all()`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5573,"byte_end":5620,"line_start":117,"line_end":117,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5625,"byte_end":5628,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5633,"byte_end":5647,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5652,"byte_end":5655,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5660,"byte_end":5667,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use parking_lot::Condvar;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5672,"byte_end":5701,"line_start":122,"line_end":122,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5706,"byte_end":5709,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let condvar = Condvar::new();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5714,"byte_end":5747,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5752,"byte_end":5755,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ // do something with condvar, share it with other threads","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5760,"byte_end":5821,"line_start":126,"line_end":126,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5826,"byte_end":5829,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ if !condvar.notify_one() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5834,"byte_end":5864,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/     println!(\"Nobody was listening for this.\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5869,"byte_end":5920,"line_start":129,"line_end":129,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5925,"byte_end":5930,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5935,"byte_end":5942,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5947,"byte_end":5956,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":8452,"byte_end":8462,"line_start":195,"line_end":195,"column_start":12,"column_end":22},"name":"notify_all","qualname":"<Condvar>::notify_all","value":"pub fn notify_all(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Wakes up all blocked threads on this condvar.","sig":null,"attributes":[{"value":"/ Wakes up all blocked threads on this condvar.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":8085,"byte_end":8134,"line_start":185,"line_end":185,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":8139,"byte_end":8142,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Returns the number of threads woken up.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":8147,"byte_end":8190,"line_start":187,"line_end":187,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":8195,"byte_end":8198,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ This method will ensure that any current waiters on the condition","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":8203,"byte_end":8272,"line_start":189,"line_end":189,"column_start":5,"column_end":74}},{"value":"/ variable are awoken. Calls to `notify_all()` are not buffered in any","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":8277,"byte_end":8349,"line_start":190,"line_end":190,"column_start":5,"column_end":77}},{"value":"/ way.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":8354,"byte_end":8362,"line_start":191,"line_end":191,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":8367,"byte_end":8370,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ To wake up only one thread, see `notify_one()`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":8375,"byte_end":8426,"line_start":193,"line_end":193,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":8431,"byte_end":8440,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":11496,"byte_end":11500,"line_start":266,"line_end":266,"column_start":12,"column_end":16},"name":"wait","qualname":"<Condvar>::wait","value":"pub fn wait<T: ?Sized>(&Self, &mut MutexGuard<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until this condition variable receives a\n notification.","sig":null,"attributes":[{"value":"/ Blocks the current thread until this condition variable receives a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":10847,"byte_end":10917,"line_start":252,"line_end":252,"column_start":5,"column_end":75}},{"value":"/ notification.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":10922,"byte_end":10939,"line_start":253,"line_end":253,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":10944,"byte_end":10947,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This function will atomically unlock the mutex specified (represented by","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":10952,"byte_end":11028,"line_start":255,"line_end":255,"column_start":5,"column_end":81}},{"value":"/ `mutex_guard`) and block the current thread. This means that any calls","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":11033,"byte_end":11107,"line_start":256,"line_end":256,"column_start":5,"column_end":79}},{"value":"/ to `notify_*()` which happen logically after the mutex is unlocked are","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":11112,"byte_end":11186,"line_start":257,"line_end":257,"column_start":5,"column_end":79}},{"value":"/ candidates to wake this thread up. When this function call returns, the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":11191,"byte_end":11266,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ lock specified will have been re-acquired.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":11271,"byte_end":11317,"line_start":259,"line_end":259,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":11322,"byte_end":11325,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":11330,"byte_end":11342,"line_start":261,"line_end":261,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":11347,"byte_end":11350,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ This function will panic if another thread is waiting on the `Condvar`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":11355,"byte_end":11429,"line_start":263,"line_end":263,"column_start":5,"column_end":79}},{"value":"/ with a different `Mutex` object.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":11434,"byte_end":11470,"line_start":264,"line_end":264,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":11475,"byte_end":11484,"line_start":265,"line_end":265,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":12771,"byte_end":12781,"line_start":294,"line_end":294,"column_start":12,"column_end":22},"name":"wait_until","qualname":"<Condvar>::wait_until","value":"pub fn wait_until<T: ?Sized>(&Self, &mut MutexGuard<, T>, Instant)\n-> WaitTimeoutResult","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after\n the specified time instant.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":11654,"byte_end":11727,"line_start":270,"line_end":270,"column_start":5,"column_end":78}},{"value":"/ the specified time instant.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":11732,"byte_end":11763,"line_start":271,"line_end":271,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":11768,"byte_end":11771,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ The semantics of this function are equivalent to `wait()` except that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":11776,"byte_end":11849,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/ the thread will be blocked roughly until `timeout` is reached. This","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":11854,"byte_end":11925,"line_start":274,"line_end":274,"column_start":5,"column_end":76}},{"value":"/ method should not be used for precise timing due to anomalies such as","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":11930,"byte_end":12003,"line_start":275,"line_end":275,"column_start":5,"column_end":78}},{"value":"/ preemption or platform differences that may not cause the maximum","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":12008,"byte_end":12077,"line_start":276,"line_end":276,"column_start":5,"column_end":74}},{"value":"/ amount of time waited to be precisely `timeout`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":12082,"byte_end":12134,"line_start":277,"line_end":277,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":12139,"byte_end":12142,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ Note that the best effort is made to ensure that the time waited is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":12147,"byte_end":12218,"line_start":279,"line_end":279,"column_start":5,"column_end":76}},{"value":"/ measured with a monotonic clock, and not affected by the changes made to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":12223,"byte_end":12299,"line_start":280,"line_end":280,"column_start":5,"column_end":81}},{"value":"/ the system time.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":12304,"byte_end":12324,"line_start":281,"line_end":281,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":12329,"byte_end":12332,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ The returned `WaitTimeoutResult` value indicates if the timeout is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":12337,"byte_end":12407,"line_start":283,"line_end":283,"column_start":5,"column_end":75}},{"value":"/ known to have elapsed.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":12412,"byte_end":12438,"line_start":284,"line_end":284,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":12443,"byte_end":12446,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Like `wait`, the lock specified will be re-acquired when this function","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":12451,"byte_end":12525,"line_start":286,"line_end":286,"column_start":5,"column_end":79}},{"value":"/ returns, regardless of whether the timeout elapsed or not.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":12530,"byte_end":12592,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":12597,"byte_end":12600,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":12605,"byte_end":12617,"line_start":289,"line_end":289,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":12622,"byte_end":12625,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This function will panic if another thread is waiting on the `Condvar`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":12630,"byte_end":12704,"line_start":291,"line_end":291,"column_start":5,"column_end":79}},{"value":"/ with a different `Mutex` object.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":12709,"byte_end":12745,"line_start":292,"line_end":292,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":12750,"byte_end":12759,"line_start":293,"line_end":293,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":17171,"byte_end":17179,"line_start":398,"line_end":398,"column_start":12,"column_end":20},"name":"wait_for","qualname":"<Condvar>::wait_for","value":"pub fn wait_for<T: ?Sized>(&Self, &mut MutexGuard<, T>, Duration)\n-> WaitTimeoutResult","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after a\n specified duration.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":15921,"byte_end":15996,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ specified duration.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":16001,"byte_end":16024,"line_start":374,"line_end":374,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":16029,"byte_end":16032,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ The semantics of this function are equivalent to `wait()` except that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":16037,"byte_end":16110,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ the thread will be blocked for roughly no longer than `timeout`. This","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":16115,"byte_end":16188,"line_start":377,"line_end":377,"column_start":5,"column_end":78}},{"value":"/ method should not be used for precise timing due to anomalies such as","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":16193,"byte_end":16266,"line_start":378,"line_end":378,"column_start":5,"column_end":78}},{"value":"/ preemption or platform differences that may not cause the maximum","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":16271,"byte_end":16340,"line_start":379,"line_end":379,"column_start":5,"column_end":74}},{"value":"/ amount of time waited to be precisely `timeout`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":16345,"byte_end":16397,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":16402,"byte_end":16405,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ Note that the best effort is made to ensure that the time waited is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":16410,"byte_end":16481,"line_start":382,"line_end":382,"column_start":5,"column_end":76}},{"value":"/ measured with a monotonic clock, and not affected by the changes made to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":16486,"byte_end":16562,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"/ the system time.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":16567,"byte_end":16587,"line_start":384,"line_end":384,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":16592,"byte_end":16595,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ The returned `WaitTimeoutResult` value indicates if the timeout is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":16600,"byte_end":16670,"line_start":386,"line_end":386,"column_start":5,"column_end":75}},{"value":"/ known to have elapsed.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":16675,"byte_end":16701,"line_start":387,"line_end":387,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":16706,"byte_end":16709,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Like `wait`, the lock specified will be re-acquired when this function","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":16714,"byte_end":16788,"line_start":389,"line_end":389,"column_start":5,"column_end":79}},{"value":"/ returns, regardless of whether the timeout elapsed or not.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":16793,"byte_end":16855,"line_start":390,"line_end":390,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":16860,"byte_end":16863,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":16868,"byte_end":16880,"line_start":392,"line_end":392,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":16885,"byte_end":16888,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ Panics if the given `timeout` is so large that it can't be added to the current time.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":16893,"byte_end":16982,"line_start":394,"line_end":394,"column_start":5,"column_end":94}},{"value":"/ This panic is not possible if the crate is built with the `nightly` feature, then a too","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":16987,"byte_end":17078,"line_start":395,"line_end":395,"column_start":5,"column_end":96}},{"value":"/ large `timeout` becomes equivalent to just calling `wait`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":17083,"byte_end":17145,"line_start":396,"line_end":396,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":17150,"byte_end":17159,"line_start":397,"line_end":397,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":60},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/elision.rs","byte_start":24950,"byte_end":24957,"line_start":12,"line_end":12,"column_start":10,"column_end":17},"name":"IntType","qualname":"::elision::AtomicElisionExt::IntType","value":"type IntType;","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":71},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33229,"byte_end":33234,"line_start":88,"line_end":88,"column_start":10,"column_end":15},"name":"Mutex","qualname":"::mutex::Mutex","value":"lock_api::Mutex<RawMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" A mutual exclusion primitive useful for protecting shared data","sig":null,"attributes":[{"value":"/ A mutual exclusion primitive useful for protecting shared data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":29842,"byte_end":29908,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":29909,"byte_end":29912,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This mutex will block threads waiting for the lock to become available. The","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":29913,"byte_end":29992,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ mutex can also be statically initialized or created via a `new`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":29993,"byte_end":30060,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ constructor. Each mutex has a type parameter which represents the data that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":30061,"byte_end":30140,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ it is protecting. The data can only be accessed through the RAII guards","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":30141,"byte_end":30216,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ returned from `lock` and `try_lock`, which guarantees that the data is only","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":30217,"byte_end":30296,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ ever accessed when the mutex is locked.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":30297,"byte_end":30340,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":30341,"byte_end":30344,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":30345,"byte_end":30359,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":30360,"byte_end":30363,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ A typical unfair lock can often end up in a situation where a single thread","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":30364,"byte_end":30443,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ quickly acquires and releases the same mutex in succession, which can starve","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":30444,"byte_end":30524,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ other threads waiting to acquire the mutex. While this improves performance","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":30525,"byte_end":30604,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ because it doesn't force a context switch when a thread tries to re-acquire","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":30605,"byte_end":30684,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ a mutex it has just released, this can starve other threads.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":30685,"byte_end":30749,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":30750,"byte_end":30753,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This mutex uses [eventual fairness](https://trac.webkit.org/changeset/203350)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":30754,"byte_end":30835,"line_start":28,"line_end":28,"column_start":1,"column_end":82}},{"value":"/ to ensure that the lock will be fair on average without sacrificing","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":30836,"byte_end":30907,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ performance. This is done by forcing a fair unlock on average every 0.5ms,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":30908,"byte_end":30986,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ which will force the lock to go to the next thread waiting for the mutex.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":30987,"byte_end":31064,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":31065,"byte_end":31068,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Additionally, any critical section longer than 1ms will always use a fair","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":31069,"byte_end":31146,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ unlock, which has a negligible performance impact compared to the length of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":31147,"byte_end":31226,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ the critical section.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":31227,"byte_end":31252,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":31253,"byte_end":31256,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ You can also force a fair unlock by calling `MutexGuard::unlock_fair` when","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":31257,"byte_end":31335,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ unlocking a mutex instead of simply dropping the `MutexGuard`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":31336,"byte_end":31402,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":31403,"byte_end":31406,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Differences from the standard library `Mutex`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":31407,"byte_end":31458,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":31459,"byte_end":31462,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ - No poisoning, the lock is released normally on panic.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":31463,"byte_end":31522,"line_start":42,"line_end":42,"column_start":1,"column_end":60}},{"value":"/ - Only requires 1 byte of space, whereas the standard library boxes the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":31523,"byte_end":31598,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/   `Mutex` due to platform limitations.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":31599,"byte_end":31641,"line_start":44,"line_end":44,"column_start":1,"column_end":43}},{"value":"/ - Can be statically constructed (requires the `const_fn` nightly feature).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":31642,"byte_end":31720,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ - Does not require any drop glue when dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":31721,"byte_end":31771,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ - Inline fast path for the uncontended case.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":31772,"byte_end":31820,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/ - Efficient handling of micro-contention using adaptive spinning.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":31821,"byte_end":31890,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ - Allows raw locking & unlocking without a guard.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":31891,"byte_end":31944,"line_start":49,"line_end":49,"column_start":1,"column_end":54}},{"value":"/ - Supports eventual fairness so that the mutex is fair on average.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":31945,"byte_end":32015,"line_start":50,"line_end":50,"column_start":1,"column_end":71}},{"value":"/ - Optionally allows making the mutex fair by calling `MutexGuard::unlock_fair`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32016,"byte_end":32099,"line_start":51,"line_end":51,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32100,"byte_end":32103,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32104,"byte_end":32118,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32119,"byte_end":32122,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32123,"byte_end":32130,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32131,"byte_end":32154,"line_start":56,"line_end":56,"column_start":1,"column_end":24}},{"value":"/ use parking_lot::Mutex;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32155,"byte_end":32182,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/ use std::thread;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32183,"byte_end":32203,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32204,"byte_end":32237,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32238,"byte_end":32241,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ const N: usize = 10;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32242,"byte_end":32266,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32267,"byte_end":32270,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ // Spawn a few threads to increment a shared variable (non-atomically), and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32271,"byte_end":32350,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/ // let the main thread know once all increments are done.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32351,"byte_end":32412,"line_start":64,"line_end":64,"column_start":1,"column_end":62}},{"value":"/ //","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32413,"byte_end":32419,"line_start":65,"line_end":65,"column_start":1,"column_end":7}},{"value":"/ // Here we're using an Arc to share memory among threads, and the data inside","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32420,"byte_end":32501,"line_start":66,"line_end":66,"column_start":1,"column_end":82}},{"value":"/ // the Arc is protected with a mutex.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32502,"byte_end":32543,"line_start":67,"line_end":67,"column_start":1,"column_end":42}},{"value":"/ let data = Arc::new(Mutex::new(0));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32544,"byte_end":32583,"line_start":68,"line_end":68,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32584,"byte_end":32587,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ let (tx, rx) = channel();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32588,"byte_end":32617,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32618,"byte_end":32638,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/     let (data, tx) = (data.clone(), tx.clone());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32639,"byte_end":32691,"line_start":72,"line_end":72,"column_start":1,"column_end":53}},{"value":"/     thread::spawn(move || {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32692,"byte_end":32723,"line_start":73,"line_end":73,"column_start":1,"column_end":32}},{"value":"/         // The shared state can only be accessed once the lock is held.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32724,"byte_end":32799,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/         // Our non-atomic increment is safe because we're the only thread","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32800,"byte_end":32877,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/         // which can access the shared state when the lock is held.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32878,"byte_end":32949,"line_start":76,"line_end":76,"column_start":1,"column_end":72}},{"value":"/         let mut data = data.lock();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32950,"byte_end":32989,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/         *data += 1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":32990,"byte_end":33013,"line_start":78,"line_end":78,"column_start":1,"column_end":24}},{"value":"/         if *data == N {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33014,"byte_end":33041,"line_start":79,"line_end":79,"column_start":1,"column_end":28}},{"value":"/             tx.send(()).unwrap();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33042,"byte_end":33079,"line_start":80,"line_end":80,"column_start":1,"column_end":38}},{"value":"/         }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33080,"byte_end":33093,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"/         // the lock is unlocked here when `data` goes out of scope.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33094,"byte_end":33165,"line_start":82,"line_end":82,"column_start":1,"column_end":72}},{"value":"/     });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33166,"byte_end":33177,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33178,"byte_end":33183,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33184,"byte_end":33187,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ rx.recv().unwrap();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33188,"byte_end":33211,"line_start":86,"line_end":86,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33212,"byte_end":33219,"line_start":87,"line_end":87,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":73},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33549,"byte_end":33559,"line_start":95,"line_end":95,"column_start":10,"column_end":20},"name":"MutexGuard","qualname":"::mutex::MutexGuard","value":"lock_api::MutexGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII implementation of a \"scoped lock\" of a mutex. When this structure is\n dropped (falls out of scope), the lock will be unlocked.","sig":null,"attributes":[{"value":"/ An RAII implementation of a \"scoped lock\" of a mutex. When this structure is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33271,"byte_end":33351,"line_start":90,"line_end":90,"column_start":1,"column_end":81}},{"value":"/ dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33352,"byte_end":33412,"line_start":91,"line_end":91,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33413,"byte_end":33416,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The data protected by the mutex can be accessed through this guard via its","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33417,"byte_end":33495,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/ `Deref` and `DerefMut` implementations.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33496,"byte_end":33539,"line_start":94,"line_end":94,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":76},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33983,"byte_end":33999,"line_start":104,"line_end":104,"column_start":10,"column_end":26},"name":"MappedMutexGuard","qualname":"::mutex::MappedMutexGuard","value":"lock_api::MappedMutexGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII mutex guard returned by `MutexGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"/ An RAII mutex guard returned by `MutexGuard::map`, which can point to a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33609,"byte_end":33684,"line_start":97,"line_end":97,"column_start":1,"column_end":76}},{"value":"/ subfield of the protected data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33685,"byte_end":33720,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33721,"byte_end":33724,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The main difference between `MappedMutexGuard` and `MutexGuard` is that the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33725,"byte_end":33804,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/ former doesn't support temporarily unlocking and re-locking, since that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33805,"byte_end":33880,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/ could introduce soundness issues if the locked object is modified by another","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33881,"byte_end":33961,"line_start":102,"line_end":102,"column_start":1,"column_end":81}},{"value":"/ thread.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33962,"byte_end":33973,"line_start":103,"line_end":103,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":415},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40050,"byte_end":40053,"line_start":33,"line_end":33,"column_start":5,"column_end":8},"name":"New","qualname":"::once::OnceState::New","value":"OnceState::New","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" A closure has not been executed yet\n","sig":null,"attributes":[{"value":"/ A closure has not been executed yet","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40006,"byte_end":40045,"line_start":32,"line_end":32,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":417},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40105,"byte_end":40113,"line_start":36,"line_end":36,"column_start":5,"column_end":13},"name":"Poisoned","qualname":"::once::OnceState::Poisoned","value":"OnceState::Poisoned","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" A closure was executed but panicked.\n","sig":null,"attributes":[{"value":"/ A closure was executed but panicked.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40060,"byte_end":40100,"line_start":35,"line_end":35,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":419},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40171,"byte_end":40181,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"name":"InProgress","qualname":"::once::OnceState::InProgress","value":"OnceState::InProgress","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" A thread is currently executing a closure.\n","sig":null,"attributes":[{"value":"/ A thread is currently executing a closure.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40120,"byte_end":40166,"line_start":38,"line_end":38,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":421},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40234,"byte_end":40238,"line_start":42,"line_end":42,"column_start":5,"column_end":9},"name":"Done","qualname":"::once::OnceState::Done","value":"OnceState::Done","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" A closure has completed successfully.\n","sig":null,"attributes":[{"value":"/ A closure has completed successfully.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40188,"byte_end":40229,"line_start":41,"line_end":41,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":414},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":39990,"byte_end":39999,"line_start":31,"line_end":31,"column_start":10,"column_end":19},"name":"OnceState","qualname":"::once::OnceState","value":"pub enum OnceState {\n\n    /// A closure has not been executed yet\n    New,\n\n    /// A closure was executed but panicked.\n    Poisoned,\n\n    /// A thread is currently executing a closure.\n    InProgress,\n\n    /// A closure has completed successfully.\n    Done,\n}","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":421}],"decl_id":null,"docs":" Current state of a `Once`.\n","sig":null,"attributes":[{"value":"/ Current state of a `Once`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":39905,"byte_end":39935,"line_start":29,"line_end":29,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40518,"byte_end":40526,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"poisoned","qualname":"<OnceState>::poisoned","value":"pub fn poisoned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the associated `Once` has been poisoned.","sig":null,"attributes":[{"value":"/ Returns whether the associated `Once` has been poisoned.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40264,"byte_end":40324,"line_start":46,"line_end":46,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40329,"byte_end":40332,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Once an initialization routine for a `Once` has panicked it will forever","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40337,"byte_end":40413,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ indicate to future forced initialization routines that it is poisoned.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40418,"byte_end":40492,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40497,"byte_end":40506,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40764,"byte_end":40768,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"done","qualname":"<OnceState>::done","value":"pub fn done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the associated `Once` has successfully executed a\n closure.\n","sig":null,"attributes":[{"value":"/ Returns whether the associated `Once` has successfully executed a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40652,"byte_end":40721,"line_start":58,"line_end":58,"column_start":5,"column_end":74}},{"value":"/ closure.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40726,"byte_end":40738,"line_start":59,"line_end":59,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40743,"byte_end":40752,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":101},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41602,"byte_end":41606,"line_start":92,"line_end":92,"column_start":12,"column_end":16},"name":"Once","qualname":"::once::Once","value":"","parent":null,"children":[],"decl_id":null,"docs":" A synchronization primitive which can be used to run a one-time\n initialization. Useful for one-time initialization for globals, FFI or\n related functionality.","sig":null,"attributes":[{"value":"/ A synchronization primitive which can be used to run a one-time","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40888,"byte_end":40955,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/ initialization. Useful for one-time initialization for globals, FFI or","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40956,"byte_end":41030,"line_start":70,"line_end":70,"column_start":1,"column_end":75}},{"value":"/ related functionality.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41031,"byte_end":41057,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41058,"byte_end":41061,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # Differences from the standard library `Once`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41062,"byte_end":41112,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41113,"byte_end":41116,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ - Only requires 1 byte of space, instead of 1 word.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41117,"byte_end":41172,"line_start":75,"line_end":75,"column_start":1,"column_end":56}},{"value":"/ - Not required to be `'static`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41173,"byte_end":41208,"line_start":76,"line_end":76,"column_start":1,"column_end":36}},{"value":"/ - Relaxed memory barriers in the fast path, which can significantly improve","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41209,"byte_end":41288,"line_start":77,"line_end":77,"column_start":1,"column_end":80}},{"value":"/   performance on some architectures.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41289,"byte_end":41329,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"/ - Efficient handling of micro-contention using adaptive spinning.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41330,"byte_end":41399,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41400,"byte_end":41403,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41404,"byte_end":41418,"line_start":81,"line_end":81,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41419,"byte_end":41422,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41423,"byte_end":41430,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/ use parking_lot::{Once, ONCE_INIT};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41431,"byte_end":41470,"line_start":84,"line_end":84,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41471,"byte_end":41474,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ static START: Once = ONCE_INIT;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41475,"byte_end":41510,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41511,"byte_end":41514,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ START.call_once(|| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41515,"byte_end":41539,"line_start":88,"line_end":88,"column_start":1,"column_end":25}},{"value":"/     // run initialization here","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41540,"byte_end":41574,"line_start":89,"line_end":89,"column_start":1,"column_end":35}},{"value":"/ });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41575,"byte_end":41582,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41583,"byte_end":41590,"line_start":91,"line_end":91,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":104},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41680,"byte_end":41689,"line_start":95,"line_end":95,"column_start":11,"column_end":20},"name":"ONCE_INIT","qualname":"::once::ONCE_INIT","value":"Once","parent":null,"children":[],"decl_id":null,"docs":" Initialization value for static `Once` values.\n","sig":null,"attributes":[{"value":"/ Initialization value for static `Once` values.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41619,"byte_end":41669,"line_start":94,"line_end":94,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41982,"byte_end":41985,"line_start":108,"line_end":108,"column_start":12,"column_end":15},"name":"new","qualname":"<Once>::new","value":"pub fn new() -> Once","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Once` value.\n","sig":null,"attributes":[{"value":"/ Creates a new `Once` value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41888,"byte_end":41919,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"cfg(not(feature = \"nightly\"))","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41924,"byte_end":41956,"line_start":106,"line_end":106,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41961,"byte_end":41970,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":42109,"byte_end":42114,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"state","qualname":"<Once>::state","value":"pub fn state(&Self) -> OnceState","parent":null,"children":[],"decl_id":null,"docs":" Returns the current state of this `Once`.\n","sig":null,"attributes":[{"value":"/ Returns the current state of this `Once`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":42038,"byte_end":42083,"line_start":112,"line_end":112,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":42088,"byte_end":42097,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":44398,"byte_end":44407,"line_start":177,"line_end":177,"column_start":12,"column_end":21},"name":"call_once","qualname":"<Once>::call_once","value":"pub fn call_once<F>(&Self, F) where F: FnOnce() -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs an initialization routine once and only once. The given closure\n will be executed if this is the first time `call_once` has been called,\n and otherwise the routine will *not* be invoked.","sig":null,"attributes":[{"value":"/ Performs an initialization routine once and only once. The given closure","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":42471,"byte_end":42547,"line_start":127,"line_end":127,"column_start":5,"column_end":81}},{"value":"/ will be executed if this is the first time `call_once` has been called,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":42552,"byte_end":42627,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ and otherwise the routine will *not* be invoked.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":42632,"byte_end":42684,"line_start":129,"line_end":129,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":42689,"byte_end":42692,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This method will block the calling thread if another initialization","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":42697,"byte_end":42768,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ routine is currently running.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":42773,"byte_end":42806,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":42811,"byte_end":42814,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ When this function returns, it is guaranteed that some initialization","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":42819,"byte_end":42892,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ has run and completed (it may not be the closure specified). It is also","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":42897,"byte_end":42972,"line_start":135,"line_end":135,"column_start":5,"column_end":80}},{"value":"/ guaranteed that any memory writes performed by the executed closure can","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":42977,"byte_end":43052,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ be reliably observed by other threads at this point (there is a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43057,"byte_end":43124,"line_start":137,"line_end":137,"column_start":5,"column_end":72}},{"value":"/ happens-before relation between the closure and code executing after the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43129,"byte_end":43205,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/ return).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43210,"byte_end":43222,"line_start":139,"line_end":139,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43227,"byte_end":43230,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43235,"byte_end":43249,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43254,"byte_end":43257,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43262,"byte_end":43269,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ use parking_lot::{Once, ONCE_INIT};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43274,"byte_end":43313,"line_start":144,"line_end":144,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43318,"byte_end":43321,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ static mut VAL: usize = 0;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43326,"byte_end":43356,"line_start":146,"line_end":146,"column_start":5,"column_end":35}},{"value":"/ static INIT: Once = ONCE_INIT;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43361,"byte_end":43395,"line_start":147,"line_end":147,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43400,"byte_end":43403,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ // Accessing a `static mut` is unsafe much of the time, but if we do so","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43408,"byte_end":43483,"line_start":149,"line_end":149,"column_start":5,"column_end":80}},{"value":"/ // in a synchronized fashion (e.g. write once or read all) then we're","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43488,"byte_end":43561,"line_start":150,"line_end":150,"column_start":5,"column_end":78}},{"value":"/ // good to go!","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43566,"byte_end":43584,"line_start":151,"line_end":151,"column_start":5,"column_end":23}},{"value":"/ //","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43589,"byte_end":43595,"line_start":152,"line_end":152,"column_start":5,"column_end":11}},{"value":"/ // This function will only call `expensive_computation` once, and will","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43600,"byte_end":43674,"line_start":153,"line_end":153,"column_start":5,"column_end":79}},{"value":"/ // otherwise always return the value returned from the first invocation.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43679,"byte_end":43755,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/ fn get_cached_val() -> usize {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43760,"byte_end":43794,"line_start":155,"line_end":155,"column_start":5,"column_end":39}},{"value":"/     unsafe {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43799,"byte_end":43815,"line_start":156,"line_end":156,"column_start":5,"column_end":21}},{"value":"/         INIT.call_once(|| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43820,"byte_end":43851,"line_start":157,"line_end":157,"column_start":5,"column_end":36}},{"value":"/             VAL = expensive_computation();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43856,"byte_end":43902,"line_start":158,"line_end":158,"column_start":5,"column_end":51}},{"value":"/         });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43907,"byte_end":43922,"line_start":159,"line_end":159,"column_start":5,"column_end":20}},{"value":"/         VAL","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43927,"byte_end":43942,"line_start":160,"line_end":160,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43947,"byte_end":43956,"line_start":161,"line_end":161,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43961,"byte_end":43966,"line_start":162,"line_end":162,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43971,"byte_end":43974,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ fn expensive_computation() -> usize {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":43979,"byte_end":44020,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/     // ...","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":44025,"byte_end":44039,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/ # 2","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":44044,"byte_end":44051,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":44056,"byte_end":44061,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":44066,"byte_end":44073,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":44078,"byte_end":44081,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":44086,"byte_end":44098,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":44103,"byte_end":44106,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ The closure `f` will only be executed once if this is called","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":44111,"byte_end":44175,"line_start":172,"line_end":172,"column_start":5,"column_end":69}},{"value":"/ concurrently amongst many threads. If that closure panics, however, then","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":44180,"byte_end":44256,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ it will *poison* this `Once` instance, causing all future invocations of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":44261,"byte_end":44337,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ `call_once` to also panic.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":44342,"byte_end":44372,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":44377,"byte_end":44386,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":45158,"byte_end":45173,"line_start":199,"line_end":199,"column_start":12,"column_end":27},"name":"call_once_force","qualname":"<Once>::call_once_force","value":"pub fn call_once_force<F>(&Self, F) where F: FnOnce(OnceState) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs the same function as `call_once` except ignores poisoning.","sig":null,"attributes":[{"value":"/ Performs the same function as `call_once` except ignores poisoning.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":44675,"byte_end":44746,"line_start":189,"line_end":189,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":44751,"byte_end":44754,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ If this `Once` has been poisoned (some initialization panicked) then","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":44759,"byte_end":44831,"line_start":191,"line_end":191,"column_start":5,"column_end":77}},{"value":"/ this function will continue to attempt to call initialization functions","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":44836,"byte_end":44911,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/ until one of them doesn't panic.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":44916,"byte_end":44952,"line_start":193,"line_end":193,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":44957,"byte_end":44960,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is yielded a structure which can be used to query the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":44965,"byte_end":45038,"line_start":195,"line_end":195,"column_start":5,"column_end":78}},{"value":"/ state of this `Once` (whether initialization has previously panicked or","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":45043,"byte_end":45118,"line_start":196,"line_end":196,"column_start":5,"column_end":80}},{"value":"/ not).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":45123,"byte_end":45132,"line_start":197,"line_end":197,"column_start":5,"column_end":14}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":45137,"byte_end":45146,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":155},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_mutex.rs","byte_start":55165,"byte_end":55173,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"RawMutex","qualname":"::raw_mutex::RawMutex","value":"RawMutex {  }","parent":null,"children":[{"krate":0,"index":156}],"decl_id":null,"docs":" Raw mutex type backed by the parking lot.\n","sig":null,"attributes":[{"value":"/ Raw mutex type backed by the parking lot.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_mutex.rs","byte_start":55108,"byte_end":55153,"line_start":36,"line_end":36,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":227},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":65766,"byte_end":65775,"line_start":42,"line_end":42,"column_start":12,"column_end":21},"name":"RawRwLock","qualname":"::raw_rwlock::RawRwLock","value":"RawRwLock {  }","parent":null,"children":[{"krate":0,"index":228}],"decl_id":null,"docs":" Raw reader-writer lock type backed by the parking lot.\n","sig":null,"attributes":[{"value":"/ Raw reader-writer lock type backed by the parking lot.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":65696,"byte_end":65754,"line_start":41,"line_end":41,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":323},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":113125,"byte_end":113136,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"RawThreadId","qualname":"::remutex::RawThreadId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Implementation of the `GetThreadId` trait for `lock_api::ReentrantMutex`.\n","sig":null,"attributes":[{"value":"/ Implementation of the `GetThreadId` trait for `lock_api::ReentrantMutex`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":113036,"byte_end":113113,"line_start":11,"line_end":11,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":329},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":114025,"byte_end":114039,"line_start":36,"line_end":36,"column_start":10,"column_end":24},"name":"ReentrantMutex","qualname":"::remutex::ReentrantMutex","value":"lock_api::ReentrantMutex<RawMutex, RawThreadId, T>","parent":null,"children":[],"decl_id":null,"docs":" A mutex which can be recursively locked by a single thread.","sig":null,"attributes":[{"value":"/ A mutex which can be recursively locked by a single thread.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":113552,"byte_end":113615,"line_start":25,"line_end":25,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":113616,"byte_end":113619,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This type is identical to `Mutex` except for the following points:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":113620,"byte_end":113690,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":113691,"byte_end":113694,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ - Locking multiple times from the same thread will work correctly instead of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":113695,"byte_end":113775,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/   deadlocking.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":113776,"byte_end":113794,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ - `ReentrantMutexGuard` does not give mutable references to the locked data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":113795,"byte_end":113875,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/   Use a `RefCell` if you need this.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":113876,"byte_end":113915,"line_start":32,"line_end":32,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":113916,"byte_end":113919,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ See [`Mutex`](struct.Mutex.html) for more details about the underlying mutex","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":113920,"byte_end":114000,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ primitive.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":114001,"byte_end":114015,"line_start":35,"line_end":35,"column_start":1,"column_end":15}}]},{"kind":"Type","id":{"krate":0,"index":331},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":114370,"byte_end":114389,"line_start":43,"line_end":43,"column_start":10,"column_end":29},"name":"ReentrantMutexGuard","qualname":"::remutex::ReentrantMutexGuard","value":"lock_api::ReentrantMutexGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII implementation of a \"scoped lock\" of a reentrant mutex. When this structure\n is dropped (falls out of scope), the lock will be unlocked.","sig":null,"attributes":[{"value":"/ An RAII implementation of a \"scoped lock\" of a reentrant mutex. When this structure","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":114098,"byte_end":114185,"line_start":38,"line_end":38,"column_start":1,"column_end":88}},{"value":"/ is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":114186,"byte_end":114249,"line_start":39,"line_end":39,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":114250,"byte_end":114253,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The data protected by the mutex can be accessed through this guard via its","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":114254,"byte_end":114332,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ `Deref` implementation.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":114333,"byte_end":114360,"line_start":42,"line_end":42,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":334},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":114862,"byte_end":114887,"line_start":52,"line_end":52,"column_start":10,"column_end":35},"name":"MappedReentrantMutexGuard","qualname":"::remutex::MappedReentrantMutexGuard","value":"lock_api::MappedReentrantMutexGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII mutex guard returned by `ReentrantMutexGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"/ An RAII mutex guard returned by `ReentrantMutexGuard::map`, which can point to a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":114461,"byte_end":114545,"line_start":45,"line_end":45,"column_start":1,"column_end":85}},{"value":"/ subfield of the protected data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":114546,"byte_end":114581,"line_start":46,"line_end":46,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":114582,"byte_end":114585,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The main difference between `MappedReentrantMutexGuard` and `ReentrantMutexGuard` is that the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":114586,"byte_end":114683,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ former doesn't support temporarily unlocking and re-locking, since that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":114684,"byte_end":114759,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ could introduce soundness issues if the locked object is modified by another","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":114760,"byte_end":114840,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/ thread.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":114841,"byte_end":114852,"line_start":51,"line_end":51,"column_start":1,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":340},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120567,"byte_end":120573,"line_start":89,"line_end":89,"column_start":10,"column_end":16},"name":"RwLock","qualname":"::rwlock::RwLock","value":"lock_api::RwLock<RawRwLock, T>","parent":null,"children":[],"decl_id":null,"docs":" A reader-writer lock","sig":null,"attributes":[{"value":"/ A reader-writer lock","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":117008,"byte_end":117032,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":117033,"byte_end":117036,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":117037,"byte_end":117114,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":117115,"byte_end":117194,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":117195,"byte_end":117274,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":117275,"byte_end":117333,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":117334,"byte_end":117337,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This lock uses a task-fair locking policy which avoids both reader and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":117338,"byte_end":117412,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ writer starvation. This means that readers trying to acquire the lock will","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":117413,"byte_end":117491,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ block even if the lock is unlocked when there are writers waiting to acquire","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":117492,"byte_end":117572,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ the lock. Because of this, attempts to recursively acquire a read lock","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":117573,"byte_end":117647,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ within a single thread may result in a deadlock.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":117648,"byte_end":117700,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":117701,"byte_end":117704,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":117705,"byte_end":117782,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies `Send` to be shared across threads and `Sync` to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":117783,"byte_end":117863,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ allow concurrent access through readers. The RAII guards returned from the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":117864,"byte_end":117942,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ locking methods implement `Deref` (and `DerefMut` for the `write` methods)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":117943,"byte_end":118021,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ to allow access to the contained of the lock.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":118022,"byte_end":118071,"line_start":28,"line_end":28,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":118072,"byte_end":118075,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":118076,"byte_end":118090,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":118091,"byte_end":118094,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ A typical unfair lock can often end up in a situation where a single thread","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":118095,"byte_end":118174,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ quickly acquires and releases the same lock in succession, which can starve","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":118175,"byte_end":118254,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ other threads waiting to acquire the rwlock. While this improves performance","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":118255,"byte_end":118335,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ because it doesn't force a context switch when a thread tries to re-acquire","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":118336,"byte_end":118415,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ a rwlock it has just released, this can starve other threads.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":118416,"byte_end":118481,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":118482,"byte_end":118485,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This rwlock uses [eventual fairness](https://trac.webkit.org/changeset/203350)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":118486,"byte_end":118568,"line_start":38,"line_end":38,"column_start":1,"column_end":83}},{"value":"/ to ensure that the lock will be fair on average without sacrificing","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":118569,"byte_end":118640,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ performance. This is done by forcing a fair unlock on average every 0.5ms,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":118641,"byte_end":118719,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ which will force the lock to go to the next thread waiting for the rwlock.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":118720,"byte_end":118798,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":118799,"byte_end":118802,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Additionally, any critical section longer than 1ms will always use a fair","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":118803,"byte_end":118880,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ unlock, which has a negligible performance impact compared to the length of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":118881,"byte_end":118960,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ the critical section.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":118961,"byte_end":118986,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":118987,"byte_end":118990,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ You can also force a fair unlock by calling `RwLockReadGuard::unlock_fair`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":118991,"byte_end":119069,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ or `RwLockWriteGuard::unlock_fair` when unlocking a mutex instead of simply","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":119070,"byte_end":119149,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ dropping the guard.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":119150,"byte_end":119173,"line_start":49,"line_end":49,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":119174,"byte_end":119177,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Differences from the standard library `RwLock`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":119178,"byte_end":119230,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":119231,"byte_end":119234,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ - Supports atomically downgrading a write lock into a read lock.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":119235,"byte_end":119303,"line_start":53,"line_end":53,"column_start":1,"column_end":69}},{"value":"/ - Task-fair locking policy instead of an unspecified platform default.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":119304,"byte_end":119378,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"/ - No poisoning, the lock is released normally on panic.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":119379,"byte_end":119438,"line_start":55,"line_end":55,"column_start":1,"column_end":60}},{"value":"/ - Only requires 1 word of space, whereas the standard library boxes the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":119439,"byte_end":119514,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/   `RwLock` due to platform limitations.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":119515,"byte_end":119558,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/ - Can be statically constructed (requires the `const_fn` nightly feature).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":119559,"byte_end":119637,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ - Does not require any drop glue when dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":119638,"byte_end":119688,"line_start":59,"line_end":59,"column_start":1,"column_end":51}},{"value":"/ - Inline fast path for the uncontended case.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":119689,"byte_end":119737,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"/ - Efficient handling of micro-contention using adaptive spinning.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":119738,"byte_end":119807,"line_start":61,"line_end":61,"column_start":1,"column_end":70}},{"value":"/ - Allows raw locking & unlocking without a guard.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":119808,"byte_end":119861,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/ - Supports eventual fairness so that the rwlock is fair on average.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":119862,"byte_end":119933,"line_start":63,"line_end":63,"column_start":1,"column_end":72}},{"value":"/ - Optionally allows making the rwlock fair by calling","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":119934,"byte_end":119991,"line_start":64,"line_end":64,"column_start":1,"column_end":58}},{"value":"/   `RwLockReadGuard::unlock_fair` and `RwLockWriteGuard::unlock_fair`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":119992,"byte_end":120065,"line_start":65,"line_end":65,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120066,"byte_end":120069,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120070,"byte_end":120084,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120085,"byte_end":120088,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120089,"byte_end":120096,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ use parking_lot::RwLock;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120097,"byte_end":120125,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120126,"byte_end":120129,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120130,"byte_end":120160,"line_start":72,"line_end":72,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120161,"byte_end":120164,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ // many reader locks can be held at once","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120165,"byte_end":120209,"line_start":74,"line_end":74,"column_start":1,"column_end":45}},{"value":"/ {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120210,"byte_end":120215,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     let r1 = lock.read();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120216,"byte_end":120245,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/     let r2 = lock.read();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120246,"byte_end":120275,"line_start":77,"line_end":77,"column_start":1,"column_end":30}},{"value":"/     assert_eq!(*r1, 5);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120276,"byte_end":120303,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/     assert_eq!(*r2, 5);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120304,"byte_end":120331,"line_start":79,"line_end":79,"column_start":1,"column_end":28}},{"value":"/ } // read locks are dropped at this point","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120332,"byte_end":120377,"line_start":80,"line_end":80,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120378,"byte_end":120381,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ // only one write lock may be held, however","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120382,"byte_end":120429,"line_start":82,"line_end":82,"column_start":1,"column_end":48}},{"value":"/ {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120430,"byte_end":120435,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/     let mut w = lock.write();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120436,"byte_end":120469,"line_start":84,"line_end":84,"column_start":1,"column_end":34}},{"value":"/     *w += 1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120470,"byte_end":120486,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"/     assert_eq!(*w, 6);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120487,"byte_end":120513,"line_start":86,"line_end":86,"column_start":1,"column_end":27}},{"value":"/ } // write lock is dropped here","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120514,"byte_end":120549,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120550,"byte_end":120557,"line_start":88,"line_end":88,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":342},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120707,"byte_end":120722,"line_start":93,"line_end":93,"column_start":10,"column_end":25},"name":"RwLockReadGuard","qualname":"::rwlock::RwLockReadGuard","value":"lock_api::RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.\n","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120612,"byte_end":120684,"line_start":91,"line_end":91,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120685,"byte_end":120697,"line_start":92,"line_end":92,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":345},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120877,"byte_end":120893,"line_start":97,"line_end":97,"column_start":10,"column_end":26},"name":"RwLockWriteGuard","qualname":"::rwlock::RwLockWriteGuard","value":"lock_api::RwLockWriteGuard","parent":null,"children":[],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.\n","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120778,"byte_end":120854,"line_start":95,"line_end":95,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120855,"byte_end":120867,"line_start":96,"line_end":96,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":348},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":121343,"byte_end":121364,"line_start":106,"line_end":106,"column_start":10,"column_end":31},"name":"MappedRwLockReadGuard","qualname":"::rwlock::MappedRwLockReadGuard","value":"lock_api::MappedRwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII read lock guard returned by `RwLockReadGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"/ An RAII read lock guard returned by `RwLockReadGuard::map`, which can point to a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120950,"byte_end":121034,"line_start":99,"line_end":99,"column_start":1,"column_end":85}},{"value":"/ subfield of the protected data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":121035,"byte_end":121070,"line_start":100,"line_end":100,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":121071,"byte_end":121074,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ The main difference between `MappedRwLockReadGuard` and `RwLockReadGuard` is that the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":121075,"byte_end":121164,"line_start":102,"line_end":102,"column_start":1,"column_end":90}},{"value":"/ former doesn't support temporarily unlocking and re-locking, since that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":121165,"byte_end":121240,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/ could introduce soundness issues if the locked object is modified by another","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":121241,"byte_end":121321,"line_start":104,"line_end":104,"column_start":1,"column_end":81}},{"value":"/ thread.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":121322,"byte_end":121333,"line_start":105,"line_end":105,"column_start":1,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":351},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":121823,"byte_end":121845,"line_start":115,"line_end":115,"column_start":10,"column_end":32},"name":"MappedRwLockWriteGuard","qualname":"::rwlock::MappedRwLockWriteGuard","value":"lock_api::MappedRwLockWriteGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII write lock guard returned by `RwLockWriteGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"/ An RAII write lock guard returned by `RwLockWriteGuard::map`, which can point to a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":121426,"byte_end":121512,"line_start":108,"line_end":108,"column_start":1,"column_end":87}},{"value":"/ subfield of the protected data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":121513,"byte_end":121548,"line_start":109,"line_end":109,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":121549,"byte_end":121552,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ The main difference between `MappedRwLockWriteGuard` and `RwLockWriteGuard` is that the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":121553,"byte_end":121644,"line_start":111,"line_end":111,"column_start":1,"column_end":92}},{"value":"/ former doesn't support temporarily unlocking and re-locking, since that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":121645,"byte_end":121720,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ could introduce soundness issues if the locked object is modified by another","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":121721,"byte_end":121801,"line_start":113,"line_end":113,"column_start":1,"column_end":81}},{"value":"/ thread.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":121802,"byte_end":121813,"line_start":114,"line_end":114,"column_start":1,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":354},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":122007,"byte_end":122032,"line_start":119,"line_end":119,"column_start":10,"column_end":35},"name":"RwLockUpgradableReadGuard","qualname":"::rwlock::RwLockUpgradableReadGuard","value":"lock_api::RwLockUpgradableReadGuard","parent":null,"children":[],"decl_id":null,"docs":" RAII structure used to release the upgradable read access of a lock when\n dropped.\n","sig":null,"attributes":[{"value":"/ RAII structure used to release the upgradable read access of a lock when","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":121908,"byte_end":121984,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":121985,"byte_end":121997,"line_start":118,"line_end":118,"column_start":1,"column_end":13}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":2393,"byte_end":2410,"line_start":23,"line_end":23,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4710,"byte_end":4717,"line_start":88,"line_end":88,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":17473,"byte_end":17480,"line_start":408,"line_end":408,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":17579,"byte_end":17586,"line_start":415,"line_end":415,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/elision.rs","byte_start":25795,"byte_end":25806,"line_start":40,"line_end":40,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40248,"byte_end":40257,"line_start":45,"line_end":45,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41726,"byte_end":41730,"line_start":97,"line_end":97,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":49029,"byte_end":49039,"line_start":303,"line_end":303,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":50281,"byte_end":50285,"line_start":339,"line_end":339,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":50378,"byte_end":50382,"line_start":346,"line_end":346,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_mutex.rs","byte_start":55230,"byte_end":55238,"line_start":41,"line_end":41,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_mutex.rs","byte_start":56672,"byte_end":56680,"line_start":96,"line_end":96,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_mutex.rs","byte_start":57202,"byte_end":57210,"line_start":118,"line_end":118,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_mutex.rs","byte_start":58201,"byte_end":58209,"line_start":157,"line_end":157,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":178},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":65836,"byte_end":65845,"line_start":46,"line_end":46,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":68728,"byte_end":68737,"line_start":149,"line_end":149,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":70489,"byte_end":70498,"line_start":211,"line_end":211,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":70856,"byte_end":70865,"line_start":225,"line_end":225,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":72696,"byte_end":72705,"line_start":290,"line_end":290,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":73375,"byte_end":73384,"line_start":314,"line_end":314,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":74198,"byte_end":74207,"line_start":342,"line_end":342,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":75993,"byte_end":76002,"line_start":413,"line_end":413,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":76586,"byte_end":76595,"line_start":435,"line_end":435,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":77327,"byte_end":77336,"line_start":461,"line_end":461,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":78952,"byte_end":78961,"line_start":525,"line_end":525,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":113167,"byte_end":113178,"line_start":14,"line_end":14,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/util.rs","byte_start":134535,"byte_end":134541,"line_start":15,"line_end":15,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":2393,"byte_end":2410,"line_start":23,"line_end":23,"column_start":6,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4710,"byte_end":4717,"line_start":88,"line_end":88,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":31},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":17473,"byte_end":17480,"line_start":408,"line_end":408,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":31},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":17579,"byte_end":17586,"line_start":415,"line_end":415,"column_start":21,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":31},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/elision.rs","byte_start":25795,"byte_end":25806,"line_start":40,"line_end":40,"column_start":27,"column_end":38},"kind":{"Impl":{"id":4}},"from":{"krate":2,"index":34939},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40248,"byte_end":40257,"line_start":45,"line_end":45,"column_start":6,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41726,"byte_end":41730,"line_start":97,"line_end":97,"column_start":6,"column_end":10},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":49029,"byte_end":49039,"line_start":303,"line_end":303,"column_start":27,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":118},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":50281,"byte_end":50285,"line_start":339,"line_end":339,"column_start":18,"column_end":22},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":101},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":50378,"byte_end":50382,"line_start":346,"line_end":346,"column_start":21,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":101},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_mutex.rs","byte_start":55230,"byte_end":55238,"line_start":41,"line_end":41,"column_start":31,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":155},"to":{"krate":18,"index":21}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_mutex.rs","byte_start":56672,"byte_end":56680,"line_start":96,"line_end":96,"column_start":30,"column_end":38},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":155},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_mutex.rs","byte_start":57202,"byte_end":57210,"line_start":118,"line_end":118,"column_start":31,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":155},"to":{"krate":18,"index":30}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_mutex.rs","byte_start":58201,"byte_end":58209,"line_start":157,"line_end":157,"column_start":6,"column_end":14},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":65836,"byte_end":65845,"line_start":46,"line_end":46,"column_start":32,"column_end":41},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":227},"to":{"krate":18,"index":403}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":68728,"byte_end":68737,"line_start":149,"line_end":149,"column_start":31,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":227},"to":{"krate":18,"index":412}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":70489,"byte_end":70498,"line_start":211,"line_end":211,"column_start":36,"column_end":45},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":227},"to":{"krate":18,"index":417}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":70856,"byte_end":70865,"line_start":225,"line_end":225,"column_start":32,"column_end":41},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":227},"to":{"krate":18,"index":419}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":72696,"byte_end":72705,"line_start":290,"line_end":290,"column_start":36,"column_end":45},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":227},"to":{"krate":18,"index":426}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":73375,"byte_end":73384,"line_start":314,"line_end":314,"column_start":41,"column_end":50},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":227},"to":{"krate":18,"index":429}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":74198,"byte_end":74207,"line_start":342,"line_end":342,"column_start":34,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":227},"to":{"krate":18,"index":432}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":75993,"byte_end":76002,"line_start":413,"line_end":413,"column_start":38,"column_end":47},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":227},"to":{"krate":18,"index":438}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":76586,"byte_end":76595,"line_start":435,"line_end":435,"column_start":43,"column_end":52},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":227},"to":{"krate":18,"index":441}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":77327,"byte_end":77336,"line_start":461,"line_end":461,"column_start":39,"column_end":48},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":227},"to":{"krate":18,"index":444}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":78952,"byte_end":78961,"line_start":525,"line_end":525,"column_start":6,"column_end":15},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":113167,"byte_end":113178,"line_start":14,"line_end":14,"column_start":29,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":323},"to":{"krate":18,"index":202}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/util.rs","byte_start":134535,"byte_end":134541,"line_start":15,"line_end":15,"column_start":35,"column_end":41},"kind":{"Impl":{"id":26}},"from":{"krate":2,"index":34376},"to":{"krate":0,"index":361}}]}