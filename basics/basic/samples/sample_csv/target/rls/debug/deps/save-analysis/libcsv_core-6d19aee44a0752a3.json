{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10","program":"/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","csv_core","--edition=2018","/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=6d19aee44a0752a3","-C","extra-filename=-6d19aee44a0752a3","--out-dir","/home/ytakasugi/004_learning_rust/basics/basic/samples/sample_csv/target/rls/debug/deps","-L","dependency=/home/ytakasugi/004_learning_rust/basics/basic/samples/sample_csv/target/rls/debug/deps","--extern","memchr=/home/ytakasugi/004_learning_rust/basics/basic/samples/sample_csv/target/rls/debug/deps/libmemchr-a709b4a144f46930.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ytakasugi/004_learning_rust/basics/basic/samples/sample_csv/target/rls/debug/deps/libcsv_core-6d19aee44a0752a3.rmeta"},"prelude":{"crate_id":{"name":"csv_core","disambiguator":[808949603348169115,8211183058392898094]},"crate_root":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src","external_crates":[{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[1111923456158047016,16902919259693091653]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[4206559302939301148,6164973543688958239]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[5256837966271238037,14624209252821231605]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","num":4,"id":{"name":"memchr","disambiguator":[10456376298014578241,1678292753776129739]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","num":5,"id":{"name":"std","disambiguator":[17255007459673538994,10308005785557406899]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","num":6,"id":{"name":"alloc","disambiguator":[7550531950105187004,8150571798412653191]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","num":7,"id":{"name":"libc","disambiguator":[15335445469838442753,9552689356239597613]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","num":8,"id":{"name":"unwind","disambiguator":[16502730494113453331,739642837530493346]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","num":9,"id":{"name":"cfg_if","disambiguator":[17056567370692029606,5237526203530126554]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","num":10,"id":{"name":"hashbrown","disambiguator":[14937216707889756020,8824175777475717960]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17577480307990758245,11665649631686256755]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[10532265776820743552,12261914965731844528]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","num":13,"id":{"name":"std_detect","disambiguator":[15918998743166050901,5153345746580364318]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","num":14,"id":{"name":"addr2line","disambiguator":[13847123446638245357,191099483651108540]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","num":15,"id":{"name":"gimli","disambiguator":[8535951946701118478,247082403716274271]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","num":16,"id":{"name":"object","disambiguator":[8071155208203251459,9749237191716311885]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[10993643928529734294,4550819794165110057]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","num":18,"id":{"name":"adler","disambiguator":[3520407426629514955,6784388313453073637]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[947612539730288161,7851933247975044788]}}],"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":0,"byte_end":5430,"line_start":1,"line_end":189,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":260},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":2702,"byte_end":2723,"line_start":103,"line_end":103,"column_start":5,"column_end":26},"alias_span":null,"name":"ReadFieldNoCopyResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":240},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":2725,"byte_end":2740,"line_start":103,"line_end":103,"column_start":28,"column_end":43},"alias_span":null,"name":"ReadFieldResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":299},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":2742,"byte_end":2764,"line_start":103,"line_end":103,"column_start":45,"column_end":67},"alias_span":null,"name":"ReadRecordNoCopyResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":278},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":2770,"byte_end":2786,"line_start":104,"line_end":104,"column_start":5,"column_end":21},"alias_span":null,"name":"ReadRecordResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":2788,"byte_end":2794,"line_start":104,"line_end":104,"column_start":23,"column_end":29},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":234},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":2796,"byte_end":2809,"line_start":104,"line_end":104,"column_start":31,"column_end":44},"alias_span":null,"name":"ReaderBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":202},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":2843,"byte_end":2857,"line_start":107,"line_end":107,"column_start":5,"column_end":19},"alias_span":null,"name":"is_non_numeric","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":203},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":2859,"byte_end":2864,"line_start":107,"line_end":107,"column_start":21,"column_end":26},"alias_span":null,"name":"quote","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":407},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":2866,"byte_end":2877,"line_start":107,"line_end":107,"column_start":28,"column_end":39},"alias_span":null,"name":"WriteResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":166},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":2879,"byte_end":2885,"line_start":107,"line_end":107,"column_start":41,"column_end":47},"alias_span":null,"name":"Writer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":403},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":2887,"byte_end":2900,"line_start":107,"line_end":107,"column_start":49,"column_end":62},"alias_span":null,"name":"WriterBuilder","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":0,"byte_end":5430,"line_start":1,"line_end":189,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":136},{"krate":0,"index":430},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":443},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":213}],"decl_id":null,"docs":"`csv-core` provides a fast CSV reader and writer for use in a `no_std` context.","sig":null,"attributes":[{"value":"*\n`csv-core` provides a fast CSV reader and writer for use in a `no_std` context.\n\nThis crate will never use the standard library. `no_std` support is therefore\nenabled by default.\n\nIf you're looking for more ergonomic CSV parsing routines, please use the\n[`csv`](https://docs.rs/csv) crate.\n\n# Overview\n\nThis crate has two primary APIs. The `Reader` API provides a CSV parser, and\nthe `Writer` API provides a CSV writer.\n\n# Example: reading CSV\n\nThis example shows how to count the number of fields and records in CSV data.\n\n```\nuse csv_core::{Reader, ReadFieldResult};\n\nlet data = \"\nfoo,bar,baz\na,b,c\nxxx,yyy,zzz\n\";\n\nlet mut rdr = Reader::new();\nlet mut bytes = data.as_bytes();\nlet mut count_fields = 0;\nlet mut count_records = 0;\nloop {\n    // We skip handling the output since we don't need it for counting.\n    let (result, nin, _) = rdr.read_field(bytes, &mut [0; 1024]);\n    bytes = &bytes[nin..];\n    match result {\n        ReadFieldResult::InputEmpty => {},\n        ReadFieldResult::OutputFull => panic!(\"field too large\"),\n        ReadFieldResult::Field { record_end } => {\n            count_fields += 1;\n            if record_end {\n                count_records += 1;\n            }\n        }\n        ReadFieldResult::End => break,\n    }\n}\nassert_eq!(3, count_records);\nassert_eq!(9, count_fields);\n```\n\n# Example: writing CSV\n\nThis example shows how to use the `Writer` API to write valid CSV data. Proper\nquoting is handled automatically.\n\n```\nuse csv_core::Writer;\n\n// This is where we'll write out CSV data.\nlet mut out = &mut [0; 1024];\n// The number of bytes we've written to `out`.\nlet mut nout = 0;\n// Create a CSV writer with a default configuration.\nlet mut wtr = Writer::new();\n\n// Write a single field. Note that we ignore the `WriteResult` and the number\n// of input bytes consumed since we're doing this by hand.\nlet (_, _, n) = wtr.field(&b\"foo\"[..], &mut out[nout..]);\nnout += n;\n\n// Write a delimiter and then another field that requires quotes.\nlet (_, n) = wtr.delimiter(&mut out[nout..]);\nnout += n;\nlet (_, _, n) = wtr.field(&b\"bar,baz\"[..], &mut out[nout..]);\nnout += n;\nlet (_, n) = wtr.terminator(&mut out[nout..]);\nnout += n;\n\n// Now write another record.\nlet (_, _, n) = wtr.field(&b\"a \\\"b\\\" c\"[..], &mut out[nout..]);\nnout += n;\nlet (_, n) = wtr.delimiter(&mut out[nout..]);\nnout += n;\nlet (_, _, n) = wtr.field(&b\"quux\"[..], &mut out[nout..]);\nnout += n;\n\n// We must always call finish once done writing.\n// This ensures that any closing quotes are written.\nlet (_, n) = wtr.finish(&mut out[nout..]);\nnout += n;\n\nassert_eq!(&out[..nout], &b\"\\\nfoo,\\\"bar,baz\\\"\n\\\"a \\\"\\\"b\\\"\\\" c\\\",quux\"[..]);\n```\n*/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":0,"byte_end":2636,"line_start":1,"line_end":97,"column_start":1,"column_end":3}},{"value":"deny(missing_docs)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":2638,"byte_end":2660,"line_start":99,"line_end":99,"column_start":1,"column_end":23}},{"value":"no_std","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":2661,"byte_end":2671,"line_start":100,"line_end":100,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":215},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":10282,"byte_end":10288,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"Reader","qualname":"::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"decl_id":null,"docs":" A pull based CSV reader.","sig":null,"attributes":[{"value":"/ A pull based CSV reader.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":8233,"byte_end":8261,"line_start":53,"line_end":53,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":8262,"byte_end":8265,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This reader parses CSV data using a finite state machine. Callers can","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":8266,"byte_end":8339,"line_start":55,"line_end":55,"column_start":1,"column_end":74}},{"value":"/ extract parsed data incrementally using one of the `read` methods.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":8340,"byte_end":8410,"line_start":56,"line_end":56,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":8411,"byte_end":8414,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Note that this CSV reader is somewhat encoding agnostic. The source data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":8415,"byte_end":8491,"line_start":58,"line_end":58,"column_start":1,"column_end":77}},{"value":"/ needs to be at least ASCII compatible. There is no support for specifying","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":8492,"byte_end":8569,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ the full gamut of Unicode delimiters/terminators/quotes/escapes. Instead,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":8570,"byte_end":8647,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/ any byte can be used, although callers probably want to stick to the ASCII","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":8648,"byte_end":8726,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/ subset (`<= 0x7F`).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":8727,"byte_end":8750,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":8751,"byte_end":8754,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":8755,"byte_end":8766,"line_start":64,"line_end":64,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":8767,"byte_end":8770,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ A reader has two different ways to read CSV data, each with their own","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":8771,"byte_end":8844,"line_start":66,"line_end":66,"column_start":1,"column_end":74}},{"value":"/ trade offs.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":8845,"byte_end":8860,"line_start":67,"line_end":67,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":8861,"byte_end":8864,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ * `read_field` - Copies a single CSV field into an output buffer while","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":8865,"byte_end":8939,"line_start":69,"line_end":69,"column_start":1,"column_end":75}},{"value":"/   unescaping quotes. This is simple to use and doesn't require storing an","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":8940,"byte_end":9017,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/   entire record contiguously in memory, but it is slower.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":9018,"byte_end":9079,"line_start":71,"line_end":71,"column_start":1,"column_end":62}},{"value":"/ * `read_record` - Copies an entire CSV record into an output buffer while","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":9080,"byte_end":9157,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/   unescaping quotes. The ending positions of each field are copied into","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":9158,"byte_end":9233,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/   an additional buffer. This is harder to use and requires larger output","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":9234,"byte_end":9310,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/   buffers, but it is faster than `read_field` since it amortizes more","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":9311,"byte_end":9384,"line_start":75,"line_end":75,"column_start":1,"column_end":74}},{"value":"/   costs.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":9385,"byte_end":9397,"line_start":76,"line_end":76,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":9398,"byte_end":9401,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ # RFC 4180","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":9402,"byte_end":9416,"line_start":78,"line_end":78,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":9417,"byte_end":9420,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ [RFC 4180](https://tools.ietf.org/html/rfc4180)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":9421,"byte_end":9472,"line_start":80,"line_end":80,"column_start":1,"column_end":52}},{"value":"/ is the closest thing to a specification for CSV data. Unfortunately,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":9473,"byte_end":9545,"line_start":81,"line_end":81,"column_start":1,"column_end":73}},{"value":"/ CSV data that is seen in the wild can vary significantly. Often, the CSV","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":9546,"byte_end":9622,"line_start":82,"line_end":82,"column_start":1,"column_end":77}},{"value":"/ data is outright invalid. Instead of fixing the producers of bad CSV data,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":9623,"byte_end":9701,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ we have seen fit to make consumers much more flexible in what they accept.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":9702,"byte_end":9780,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"/ This reader continues that tradition, and therefore, isn't technically","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":9781,"byte_end":9855,"line_start":85,"line_end":85,"column_start":1,"column_end":75}},{"value":"/ compliant with RFC 4180. In particular, this reader will never return an","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":9856,"byte_end":9932,"line_start":86,"line_end":86,"column_start":1,"column_end":77}},{"value":"/ error and will always find *a* parse.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":9933,"byte_end":9974,"line_start":87,"line_end":87,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":9975,"byte_end":9978,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Here are some detailed differences from RFC 4180:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":9979,"byte_end":10032,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":10033,"byte_end":10036,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ * CRLF, LF and CR are each treated as a single record terminator by","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":10037,"byte_end":10108,"line_start":91,"line_end":91,"column_start":1,"column_end":72}},{"value":"/   default.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":10109,"byte_end":10123,"line_start":92,"line_end":92,"column_start":1,"column_end":15}},{"value":"/ * Records are permitted to be of varying length.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":10124,"byte_end":10176,"line_start":93,"line_end":93,"column_start":1,"column_end":53}},{"value":"/ * Empty lines (that do not include other whitespace) are ignored.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":10177,"byte_end":10246,"line_start":94,"line_end":94,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":234},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":12228,"byte_end":12241,"line_start":158,"line_end":158,"column_start":12,"column_end":25},"name":"ReaderBuilder","qualname":"::reader::ReaderBuilder","value":"ReaderBuilder {  }","parent":null,"children":[{"krate":0,"index":235}],"decl_id":null,"docs":" Builds a CSV reader with various configuration knobs.","sig":null,"attributes":[{"value":"/ Builds a CSV reader with various configuration knobs.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":11951,"byte_end":12008,"line_start":152,"line_end":152,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":12009,"byte_end":12012,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ This builder can be used to tweak the field delimiter, record terminator","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":12013,"byte_end":12089,"line_start":154,"line_end":154,"column_start":1,"column_end":77}},{"value":"/ and more for parsing CSV. Once a CSV `Reader` is built, its configuration","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":12090,"byte_end":12167,"line_start":155,"line_end":155,"column_start":1,"column_end":78}},{"value":"/ cannot be changed.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":12168,"byte_end":12190,"line_start":156,"line_end":156,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":12326,"byte_end":12329,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"new","qualname":"<ReaderBuilder>::new","value":"pub fn new() -> ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" Create a new builder.\n","sig":null,"attributes":[{"value":"/ Create a new builder.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":12289,"byte_end":12314,"line_start":163,"line_end":163,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":12454,"byte_end":12459,"line_start":169,"line_end":169,"column_start":12,"column_end":17},"name":"build","qualname":"<ReaderBuilder>::build","value":"pub fn build(&Self) -> Reader","parent":null,"children":[],"decl_id":null,"docs":" Build a CSV parser from this configuration.\n","sig":null,"attributes":[{"value":"/ Build a CSV parser from this configuration.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":12395,"byte_end":12442,"line_start":168,"line_end":168,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":12666,"byte_end":12675,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"delimiter","qualname":"<ReaderBuilder>::delimiter","value":"pub fn delimiter(&mut Self, u8) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" The field delimiter to use when parsing CSV.","sig":null,"attributes":[{"value":"/ The field delimiter to use when parsing CSV.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":12567,"byte_end":12615,"line_start":175,"line_end":175,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":12620,"byte_end":12623,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ The default is `b','`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":12628,"byte_end":12654,"line_start":177,"line_end":177,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":13063,"byte_end":13073,"line_start":188,"line_end":188,"column_start":12,"column_end":22},"name":"terminator","qualname":"<ReaderBuilder>::terminator","value":"pub fn terminator(&mut Self, Terminator) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" The record terminator to use when parsing CSV.","sig":null,"attributes":[{"value":"/ The record terminator to use when parsing CSV.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":12790,"byte_end":12840,"line_start":183,"line_end":183,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":12845,"byte_end":12848,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ A record terminator can be any single byte. The default is a special","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":12853,"byte_end":12925,"line_start":185,"line_end":185,"column_start":5,"column_end":77}},{"value":"/ value, `Terminator::CRLF`, which treats any occurrence of `\\r`, `\\n`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":12930,"byte_end":13002,"line_start":186,"line_end":186,"column_start":5,"column_end":77}},{"value":"/ or `\\r\\n` as a single record terminator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":13007,"byte_end":13051,"line_start":187,"line_end":187,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":13280,"byte_end":13285,"line_start":196,"line_end":196,"column_start":12,"column_end":17},"name":"quote","qualname":"<ReaderBuilder>::quote","value":"pub fn quote(&mut Self, u8) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" The quote character to use when parsing CSV.","sig":null,"attributes":[{"value":"/ The quote character to use when parsing CSV.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":13181,"byte_end":13229,"line_start":193,"line_end":193,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":13234,"byte_end":13237,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ The default is `b'\"'`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":13242,"byte_end":13268,"line_start":195,"line_end":195,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":13687,"byte_end":13693,"line_start":207,"line_end":207,"column_start":12,"column_end":18},"name":"escape","qualname":"<ReaderBuilder>::escape","value":"pub fn escape(&mut Self, Option<u8>) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" The escape character to use when parsing CSV.","sig":null,"attributes":[{"value":"/ The escape character to use when parsing CSV.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":13388,"byte_end":13437,"line_start":201,"line_end":201,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":13442,"byte_end":13445,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ In some variants of CSV, quotes are escaped using a special escape","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":13450,"byte_end":13520,"line_start":203,"line_end":203,"column_start":5,"column_end":75}},{"value":"/ character like `\\` (instead of escaping quotes by doubling them).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":13525,"byte_end":13594,"line_start":204,"line_end":204,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":13599,"byte_end":13602,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ By default, recognizing these idiosyncratic escapes is disabled.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":13607,"byte_end":13675,"line_start":206,"line_end":206,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":13989,"byte_end":14001,"line_start":216,"line_end":216,"column_start":12,"column_end":24},"name":"double_quote","qualname":"<ReaderBuilder>::double_quote","value":"pub fn double_quote(&mut Self, bool) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable double quote escapes.","sig":null,"attributes":[{"value":"/ Enable double quote escapes.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":13807,"byte_end":13839,"line_start":212,"line_end":212,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":13844,"byte_end":13847,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ This is enabled by default, but it may be disabled. When disabled,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":13852,"byte_end":13922,"line_start":214,"line_end":214,"column_start":5,"column_end":75}},{"value":"/ doubled quotes are not interpreted as escapes.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":13927,"byte_end":13977,"line_start":215,"line_end":215,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":14276,"byte_end":14283,"line_start":225,"line_end":225,"column_start":12,"column_end":19},"name":"quoting","qualname":"<ReaderBuilder>::quoting","value":"pub fn quoting(&mut Self, bool) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable quoting.","sig":null,"attributes":[{"value":"/ Enable or disable quoting.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":14109,"byte_end":14139,"line_start":221,"line_end":221,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":14144,"byte_end":14147,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This is enabled by default, but it may be disabled. When disabled,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":14152,"byte_end":14222,"line_start":223,"line_end":223,"column_start":5,"column_end":75}},{"value":"/ quotes are not treated specially.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":14227,"byte_end":14264,"line_start":224,"line_end":224,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":14620,"byte_end":14627,"line_start":236,"line_end":236,"column_start":12,"column_end":19},"name":"comment","qualname":"<ReaderBuilder>::comment","value":"pub fn comment(&mut Self, Option<u8>) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" The comment character to use when parsing CSV.","sig":null,"attributes":[{"value":"/ The comment character to use when parsing CSV.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":14386,"byte_end":14436,"line_start":230,"line_end":230,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":14441,"byte_end":14444,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ If the start of a record begins with the byte given here, then that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":14449,"byte_end":14520,"line_start":232,"line_end":232,"column_start":5,"column_end":76}},{"value":"/ line is ignored by the CSV parser.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":14525,"byte_end":14563,"line_start":233,"line_end":233,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":14568,"byte_end":14571,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ This is disabled by default.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":14576,"byte_end":14608,"line_start":235,"line_end":235,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":15001,"byte_end":15006,"line_start":246,"line_end":246,"column_start":12,"column_end":17},"name":"ascii","qualname":"<ReaderBuilder>::ascii","value":"pub fn ascii(&mut Self) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" A convenience method for specifying a configuration to read ASCII\n delimited text.","sig":null,"attributes":[{"value":"/ A convenience method for specifying a configuration to read ASCII","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":14744,"byte_end":14813,"line_start":241,"line_end":241,"column_start":5,"column_end":74}},{"value":"/ delimited text.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":14818,"byte_end":14837,"line_start":242,"line_end":242,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":14842,"byte_end":14845,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ This sets the delimiter and record terminator to the ASCII unit","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":14850,"byte_end":14917,"line_start":244,"line_end":244,"column_start":5,"column_end":72}},{"value":"/ separator (`\\x1F`) and record separator (`\\x1E`), respectively.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":14922,"byte_end":14989,"line_start":245,"line_end":245,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":15322,"byte_end":15325,"line_start":255,"line_end":255,"column_start":12,"column_end":15},"name":"nfa","qualname":"<ReaderBuilder>::nfa","value":"pub fn nfa(&mut Self, bool) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable the NFA for parsing CSV.","sig":null,"attributes":[{"value":"/ Enable or disable the NFA for parsing CSV.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":15122,"byte_end":15168,"line_start":250,"line_end":250,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":15173,"byte_end":15176,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ This is intended to be a debug option useful for debugging. The NFA","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":15181,"byte_end":15252,"line_start":252,"line_end":252,"column_start":5,"column_end":76}},{"value":"/ is always slower than the DFA.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":15257,"byte_end":15291,"line_start":253,"line_end":253,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":241},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":15658,"byte_end":15668,"line_start":266,"line_end":266,"column_start":5,"column_end":15},"name":"InputEmpty","qualname":"::reader::ReadFieldResult::InputEmpty","value":"ReadFieldResult::InputEmpty","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" The caller provided input was exhausted before the end of a field or\n record was found.\n","sig":null,"attributes":[{"value":"/ The caller provided input was exhausted before the end of a field or","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":15555,"byte_end":15627,"line_start":264,"line_end":264,"column_start":5,"column_end":77}},{"value":"/ record was found.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":15632,"byte_end":15653,"line_start":265,"line_end":265,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":243},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":15782,"byte_end":15792,"line_start":269,"line_end":269,"column_start":5,"column_end":15},"name":"OutputFull","qualname":"::reader::ReadFieldResult::OutputFull","value":"ReadFieldResult::OutputFull","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" The caller provided output buffer was filled before an entire field\n could be written to it.\n","sig":null,"attributes":[{"value":"/ The caller provided output buffer was filled before an entire field","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":15674,"byte_end":15745,"line_start":267,"line_end":267,"column_start":5,"column_end":76}},{"value":"/ could be written to it.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":15750,"byte_end":15777,"line_start":268,"line_end":268,"column_start":5,"column_end":32}}]},{"kind":"StructVariant","id":{"krate":0,"index":245},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":15965,"byte_end":15970,"line_start":274,"line_end":274,"column_start":5,"column_end":10},"name":"Field","qualname":"::reader::ReadFieldResult::Field","value":"ReadFieldResult::Field { record_end }","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" The end of a field was found.","sig":null,"attributes":[{"value":"/ The end of a field was found.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":15798,"byte_end":15831,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":15836,"byte_end":15839,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Note that when `record_end` is true, then the end of this field also","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":15844,"byte_end":15916,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ corresponds to the end of a record.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":15921,"byte_end":15960,"line_start":273,"line_end":273,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":247},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":16220,"byte_end":16223,"line_start":282,"line_end":282,"column_start":5,"column_end":8},"name":"End","qualname":"::reader::ReadFieldResult::End","value":"ReadFieldResult::End","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" All CSV data has been read.","sig":null,"attributes":[{"value":"/ All CSV data has been read.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":16074,"byte_end":16105,"line_start":278,"line_end":278,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":16110,"byte_end":16113,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ This state can only be returned when an empty input buffer is provided","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":16118,"byte_end":16192,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/ by the caller.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":16197,"byte_end":16215,"line_start":281,"line_end":281,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":240},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":15533,"byte_end":15548,"line_start":263,"line_end":263,"column_start":10,"column_end":25},"name":"ReadFieldResult","qualname":"::reader::ReadFieldResult","value":"pub enum ReadFieldResult {\n    InputEmpty,\n    OutputFull,\n    Field {\n        record_end: bool,\n    },\n    End,\n}","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":247}],"decl_id":null,"docs":" The result of parsing at most one field from CSV data.\n","sig":null,"attributes":[{"value":"/ The result of parsing at most one field from CSV data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":15426,"byte_end":15484,"line_start":261,"line_end":261,"column_start":1,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":261},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":17233,"byte_end":17243,"line_start":317,"line_end":317,"column_start":5,"column_end":15},"name":"InputEmpty","qualname":"::reader::ReadFieldNoCopyResult::InputEmpty","value":"ReadFieldNoCopyResult::InputEmpty","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" The caller provided input was exhausted before the end of a field or\n record was found.\n","sig":null,"attributes":[{"value":"/ The caller provided input was exhausted before the end of a field or","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":17130,"byte_end":17202,"line_start":315,"line_end":315,"column_start":5,"column_end":77}},{"value":"/ record was found.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":17207,"byte_end":17228,"line_start":316,"line_end":316,"column_start":5,"column_end":26}}]},{"kind":"StructVariant","id":{"krate":0,"index":263},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":17416,"byte_end":17421,"line_start":322,"line_end":322,"column_start":5,"column_end":10},"name":"Field","qualname":"::reader::ReadFieldNoCopyResult::Field","value":"ReadFieldNoCopyResult::Field { record_end }","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" The end of a field was found.","sig":null,"attributes":[{"value":"/ The end of a field was found.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":17249,"byte_end":17282,"line_start":318,"line_end":318,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":17287,"byte_end":17290,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ Note that when `record_end` is true, then the end of this field also","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":17295,"byte_end":17367,"line_start":320,"line_end":320,"column_start":5,"column_end":77}},{"value":"/ corresponds to the end of a record.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":17372,"byte_end":17411,"line_start":321,"line_end":321,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":265},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":17671,"byte_end":17674,"line_start":330,"line_end":330,"column_start":5,"column_end":8},"name":"End","qualname":"::reader::ReadFieldNoCopyResult::End","value":"ReadFieldNoCopyResult::End","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" All CSV data has been read.","sig":null,"attributes":[{"value":"/ All CSV data has been read.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":17525,"byte_end":17556,"line_start":326,"line_end":326,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":17561,"byte_end":17564,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ This state can only be returned when an empty input buffer is provided","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":17569,"byte_end":17643,"line_start":328,"line_end":328,"column_start":5,"column_end":79}},{"value":"/ by the caller.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":17648,"byte_end":17666,"line_start":329,"line_end":329,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":260},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":17102,"byte_end":17123,"line_start":314,"line_end":314,"column_start":10,"column_end":31},"name":"ReadFieldNoCopyResult","qualname":"::reader::ReadFieldNoCopyResult","value":"pub enum ReadFieldNoCopyResult {\n    InputEmpty,\n    Field {\n        record_end: bool,\n    },\n    End,\n}","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":265}],"decl_id":null,"docs":" The result of parsing at most one field from CSV data while ignoring the\n output.\n","sig":null,"attributes":[{"value":"/ The result of parsing at most one field from CSV data while ignoring the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":16965,"byte_end":17041,"line_start":311,"line_end":311,"column_start":1,"column_end":77}},{"value":"/ output.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":17042,"byte_end":17053,"line_start":312,"line_end":312,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":279},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":17904,"byte_end":17914,"line_start":338,"line_end":338,"column_start":5,"column_end":15},"name":"InputEmpty","qualname":"::reader::ReadRecordResult::InputEmpty","value":"ReadRecordResult::InputEmpty","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":" The caller provided input was exhausted before the end of a record was\n found.\n","sig":null,"attributes":[{"value":"/ The caller provided input was exhausted before the end of a record was","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":17810,"byte_end":17884,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ found.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":17889,"byte_end":17899,"line_start":337,"line_end":337,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":281},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":18028,"byte_end":18038,"line_start":341,"line_end":341,"column_start":5,"column_end":15},"name":"OutputFull","qualname":"::reader::ReadRecordResult::OutputFull","value":"ReadRecordResult::OutputFull","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":" The caller provided output buffer was filled before an entire field\n could be written to it.\n","sig":null,"attributes":[{"value":"/ The caller provided output buffer was filled before an entire field","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":17920,"byte_end":17991,"line_start":339,"line_end":339,"column_start":5,"column_end":76}},{"value":"/ could be written to it.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":17996,"byte_end":18023,"line_start":340,"line_end":340,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":283},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":18168,"byte_end":18182,"line_start":344,"line_end":344,"column_start":5,"column_end":19},"name":"OutputEndsFull","qualname":"::reader::ReadRecordResult::OutputEndsFull","value":"ReadRecordResult::OutputEndsFull","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":" The caller provided output buffer of field end poisitions was filled\n before the next field could be parsed.\n","sig":null,"attributes":[{"value":"/ The caller provided output buffer of field end poisitions was filled","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":18044,"byte_end":18116,"line_start":342,"line_end":342,"column_start":5,"column_end":77}},{"value":"/ before the next field could be parsed.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":18121,"byte_end":18163,"line_start":343,"line_end":343,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":285},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":18227,"byte_end":18233,"line_start":346,"line_end":346,"column_start":5,"column_end":11},"name":"Record","qualname":"::reader::ReadRecordResult::Record","value":"ReadRecordResult::Record","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":" The end of a record was found.\n","sig":null,"attributes":[{"value":"/ The end of a record was found.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":18188,"byte_end":18222,"line_start":345,"line_end":345,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":287},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":18385,"byte_end":18388,"line_start":351,"line_end":351,"column_start":5,"column_end":8},"name":"End","qualname":"::reader::ReadRecordResult::End","value":"ReadRecordResult::End","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":" All CSV data has been read.","sig":null,"attributes":[{"value":"/ All CSV data has been read.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":18239,"byte_end":18270,"line_start":347,"line_end":347,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":18275,"byte_end":18278,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ This state can only be returned when an empty input buffer is provided","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":18283,"byte_end":18357,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/ by the caller.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":18362,"byte_end":18380,"line_start":350,"line_end":350,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":278},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":17787,"byte_end":17803,"line_start":335,"line_end":335,"column_start":10,"column_end":26},"name":"ReadRecordResult","qualname":"::reader::ReadRecordResult","value":"pub enum ReadRecordResult {\n    InputEmpty,\n    OutputFull,\n    OutputEndsFull,\n    Record,\n    End,\n}","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":287}],"decl_id":null,"docs":" The result of parsing at most one record from CSV data.\n","sig":null,"attributes":[{"value":"/ The result of parsing at most one record from CSV data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":17679,"byte_end":17738,"line_start":333,"line_end":333,"column_start":1,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":300},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":19436,"byte_end":19446,"line_start":388,"line_end":388,"column_start":5,"column_end":15},"name":"InputEmpty","qualname":"::reader::ReadRecordNoCopyResult::InputEmpty","value":"ReadRecordNoCopyResult::InputEmpty","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" The caller provided input was exhausted before the end of a record was\n found.\n","sig":null,"attributes":[{"value":"/ The caller provided input was exhausted before the end of a record was","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":19342,"byte_end":19416,"line_start":386,"line_end":386,"column_start":5,"column_end":79}},{"value":"/ found.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":19421,"byte_end":19431,"line_start":387,"line_end":387,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":302},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":19491,"byte_end":19497,"line_start":390,"line_end":390,"column_start":5,"column_end":11},"name":"Record","qualname":"::reader::ReadRecordNoCopyResult::Record","value":"ReadRecordNoCopyResult::Record","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" The end of a record was found.\n","sig":null,"attributes":[{"value":"/ The end of a record was found.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":19452,"byte_end":19486,"line_start":389,"line_end":389,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":304},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":19649,"byte_end":19652,"line_start":395,"line_end":395,"column_start":5,"column_end":8},"name":"End","qualname":"::reader::ReadRecordNoCopyResult::End","value":"ReadRecordNoCopyResult::End","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" All CSV data has been read.","sig":null,"attributes":[{"value":"/ All CSV data has been read.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":19503,"byte_end":19534,"line_start":391,"line_end":391,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":19539,"byte_end":19542,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ This state can only be returned when an empty input buffer is provided","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":19547,"byte_end":19621,"line_start":393,"line_end":393,"column_start":5,"column_end":79}},{"value":"/ by the caller.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":19626,"byte_end":19644,"line_start":394,"line_end":394,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":299},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":19313,"byte_end":19335,"line_start":385,"line_end":385,"column_start":10,"column_end":32},"name":"ReadRecordNoCopyResult","qualname":"::reader::ReadRecordNoCopyResult","value":"pub enum ReadRecordNoCopyResult { InputEmpty, Record, End, }","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304}],"decl_id":null,"docs":" The result of parsing at most one record from CSV data while ignoring\n output.\n","sig":null,"attributes":[{"value":"/ The result of parsing at most one record from CSV data while ignoring","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":19179,"byte_end":19252,"line_start":382,"line_end":382,"column_start":1,"column_end":74}},{"value":"/ output.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":19253,"byte_end":19264,"line_start":383,"line_end":383,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":22125,"byte_end":22128,"line_start":478,"line_end":478,"column_start":12,"column_end":15},"name":"new","qualname":"<Reader>::new","value":"pub fn new() -> Reader","parent":null,"children":[],"decl_id":null,"docs":" Create a new CSV reader with a default parser configuration.\n","sig":null,"attributes":[{"value":"/ Create a new CSV reader with a default parser configuration.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":22049,"byte_end":22113,"line_start":477,"line_end":477,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":22359,"byte_end":22364,"line_start":485,"line_end":485,"column_start":12,"column_end":17},"name":"reset","qualname":"<Reader>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the parser such that it behaves as if it had never been used.","sig":null,"attributes":[{"value":"/ Reset the parser such that it behaves as if it had never been used.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":22191,"byte_end":22262,"line_start":482,"line_end":482,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":22267,"byte_end":22270,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ This may be useful when reading CSV data in a random access pattern.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":22275,"byte_end":22347,"line_start":484,"line_end":484,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":22744,"byte_end":22748,"line_start":496,"line_end":496,"column_start":12,"column_end":16},"name":"line","qualname":"<Reader>::line","value":"pub fn line(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return the current line number as measured by the number of occurrences\n of `\\n`.","sig":null,"attributes":[{"value":"/ Return the current line number as measured by the number of occurrences","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":22559,"byte_end":22634,"line_start":492,"line_end":492,"column_start":5,"column_end":80}},{"value":"/ of `\\n`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":22639,"byte_end":22651,"line_start":493,"line_end":493,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":22656,"byte_end":22659,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ Line numbers starts at `1` and are reset when `reset` is called.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":22664,"byte_end":22732,"line_start":495,"line_end":495,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":22962,"byte_end":22970,"line_start":504,"line_end":504,"column_start":12,"column_end":20},"name":"set_line","qualname":"<Reader>::set_line","value":"pub fn set_line(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Set the line number.","sig":null,"attributes":[{"value":"/ Set the line number.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":22794,"byte_end":22818,"line_start":500,"line_end":500,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":22823,"byte_end":22826,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ This is useful after a call to `reset` where the caller knows the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":22831,"byte_end":22900,"line_start":502,"line_end":502,"column_start":5,"column_end":74}},{"value":"/ line number from some additional context.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":22905,"byte_end":22950,"line_start":503,"line_end":503,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":24527,"byte_end":24537,"line_start":537,"line_end":537,"column_start":12,"column_end":22},"name":"read_field","qualname":"<Reader>::read_field","value":"pub fn read_field(&mut Self, &[u8], &mut [u8])\n-> (ReadFieldResult, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Parse a single CSV field in `input` and copy field data to `output`.","sig":null,"attributes":[{"value":"/ Parse a single CSV field in `input` and copy field data to `output`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":23032,"byte_end":23104,"line_start":508,"line_end":508,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":23109,"byte_end":23112,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This routine requires a caller provided buffer of CSV data as the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":23117,"byte_end":23186,"line_start":510,"line_end":510,"column_start":5,"column_end":74}},{"value":"/ `input` and a caller provided buffer, `output`, in which to store field","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":23191,"byte_end":23266,"line_start":511,"line_end":511,"column_start":5,"column_end":80}},{"value":"/ data extracted from `input`. The field data copied to `output` will","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":23271,"byte_end":23342,"line_start":512,"line_end":512,"column_start":5,"column_end":76}},{"value":"/ have its quotes unescaped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":23347,"byte_end":23377,"line_start":513,"line_end":513,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":23382,"byte_end":23385,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ Calling this routine parses at most a single field and returns","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":23390,"byte_end":23456,"line_start":515,"line_end":515,"column_start":5,"column_end":71}},{"value":"/ three values indicating the state of the parser. The first value, a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":23461,"byte_end":23532,"line_start":516,"line_end":516,"column_start":5,"column_end":76}},{"value":"/ `ReadFieldResult`, tells the caller what to do next. For example, if","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":23537,"byte_end":23609,"line_start":517,"line_end":517,"column_start":5,"column_end":77}},{"value":"/ the entire input was read or if the output buffer was filled before","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":23614,"byte_end":23685,"line_start":518,"line_end":518,"column_start":5,"column_end":76}},{"value":"/ a full field had been read, then `ReadFieldResult::InputEmpty` or","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":23690,"byte_end":23759,"line_start":519,"line_end":519,"column_start":5,"column_end":74}},{"value":"/ `ReadFieldResult::OutputFull` is returned, respectively. See the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":23764,"byte_end":23832,"line_start":520,"line_end":520,"column_start":5,"column_end":73}},{"value":"/ documentation for `ReadFieldResult` for more details.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":23837,"byte_end":23894,"line_start":521,"line_end":521,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":23899,"byte_end":23902,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ The other two values returned correspond to the number of bytes","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":23907,"byte_end":23974,"line_start":523,"line_end":523,"column_start":5,"column_end":72}},{"value":"/ read from `input` and written to `output`, respectively.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":23979,"byte_end":24039,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":24044,"byte_end":24047,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Termination","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":24052,"byte_end":24069,"line_start":526,"line_end":526,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":24074,"byte_end":24077,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This reader interprets an empty `input` buffer as an indication that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":24082,"byte_end":24154,"line_start":528,"line_end":528,"column_start":5,"column_end":77}},{"value":"/ there is no CSV data left to read. Namely, when the caller has","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":24159,"byte_end":24225,"line_start":529,"line_end":529,"column_start":5,"column_end":71}},{"value":"/ exhausted all CSV data, the caller should continue to call `read` with","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":24230,"byte_end":24304,"line_start":530,"line_end":530,"column_start":5,"column_end":79}},{"value":"/ an empty input buffer until `ReadFieldResult::End` is returned.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":24309,"byte_end":24376,"line_start":531,"line_end":531,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":24381,"byte_end":24384,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":24389,"byte_end":24401,"line_start":533,"line_end":533,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":24406,"byte_end":24409,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ This CSV reader can never return an error. Instead, it prefers *a*","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":24414,"byte_end":24484,"line_start":535,"line_end":535,"column_start":5,"column_end":75}},{"value":"/ parse over *no* parse.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":24489,"byte_end":24515,"line_start":536,"line_end":536,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":27088,"byte_end":27099,"line_start":593,"line_end":593,"column_start":12,"column_end":23},"name":"read_record","qualname":"<Reader>::read_record","value":"pub fn read_record(&mut Self, &[u8], &mut [u8], &mut [usize])\n-> (ReadRecordResult, usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Parse a single CSV record in `input` and copy each field contiguously\n to `output`, with the end position of each field written to `ends`.","sig":null,"attributes":[{"value":"/ Parse a single CSV record in `input` and copy each field contiguously","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":24956,"byte_end":25029,"line_start":552,"line_end":552,"column_start":5,"column_end":78}},{"value":"/ to `output`, with the end position of each field written to `ends`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":25034,"byte_end":25105,"line_start":553,"line_end":553,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":25110,"byte_end":25113,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ **NOTE**: This method is more cumbersome to use than `read_field`, but","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":25118,"byte_end":25192,"line_start":555,"line_end":555,"column_start":5,"column_end":79}},{"value":"/ it can be faster since it amortizes more work.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":25197,"byte_end":25247,"line_start":556,"line_end":556,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":25252,"byte_end":25255,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ This routine requires a caller provided buffer of CSV data as the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":25260,"byte_end":25329,"line_start":558,"line_end":558,"column_start":5,"column_end":74}},{"value":"/ `input` and two caller provided buffers to store the unescaped field","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":25334,"byte_end":25406,"line_start":559,"line_end":559,"column_start":5,"column_end":77}},{"value":"/ data (`output`) and the end position of each field in the record","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":25411,"byte_end":25479,"line_start":560,"line_end":560,"column_start":5,"column_end":73}},{"value":"/ (`fields`).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":25484,"byte_end":25499,"line_start":561,"line_end":561,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":25504,"byte_end":25507,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ Calling this routine parses at most a single record and returns four","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":25512,"byte_end":25584,"line_start":563,"line_end":563,"column_start":5,"column_end":77}},{"value":"/ values indicating the state of the parser. The first value, a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":25589,"byte_end":25654,"line_start":564,"line_end":564,"column_start":5,"column_end":70}},{"value":"/ `ReadRecordResult`, tells the caller what to do next. For example, if","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":25659,"byte_end":25732,"line_start":565,"line_end":565,"column_start":5,"column_end":78}},{"value":"/ the entire input was read or if the output buffer was filled before a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":25737,"byte_end":25810,"line_start":566,"line_end":566,"column_start":5,"column_end":78}},{"value":"/ full field had been read, then `ReadRecordResult::InputEmpty` or","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":25815,"byte_end":25883,"line_start":567,"line_end":567,"column_start":5,"column_end":73}},{"value":"/ `ReadRecordResult::OutputFull` is returned, respectively. Similarly, if","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":25888,"byte_end":25963,"line_start":568,"line_end":568,"column_start":5,"column_end":80}},{"value":"/ the `ends` buffer is full, then `ReadRecordResult::OutputEndsFull` is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":25968,"byte_end":26041,"line_start":569,"line_end":569,"column_start":5,"column_end":78}},{"value":"/ returned. See the documentation for `ReadRecordResult` for more","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":26046,"byte_end":26113,"line_start":570,"line_end":570,"column_start":5,"column_end":72}},{"value":"/ details.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":26118,"byte_end":26130,"line_start":571,"line_end":571,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":26135,"byte_end":26138,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ The other three values correspond to the number of bytes read from","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":26143,"byte_end":26213,"line_start":573,"line_end":573,"column_start":5,"column_end":75}},{"value":"/ `input`, the number of bytes written to `output` and the number of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":26218,"byte_end":26288,"line_start":574,"line_end":574,"column_start":5,"column_end":75}},{"value":"/ end positions written to `ends`, respectively.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":26293,"byte_end":26343,"line_start":575,"line_end":575,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":26348,"byte_end":26351,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ The end positions written to `ends` are constructed as if there was","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":26356,"byte_end":26427,"line_start":577,"line_end":577,"column_start":5,"column_end":76}},{"value":"/ a single contiguous buffer in memory containing the entire row, even","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":26432,"byte_end":26504,"line_start":578,"line_end":578,"column_start":5,"column_end":77}},{"value":"/ if `ReadRecordResult::OutputFull` was returned in the middle of reading","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":26509,"byte_end":26584,"line_start":579,"line_end":579,"column_start":5,"column_end":80}},{"value":"/ a row.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":26589,"byte_end":26599,"line_start":580,"line_end":580,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":26604,"byte_end":26607,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ # Termination","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":26612,"byte_end":26629,"line_start":582,"line_end":582,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":26634,"byte_end":26637,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ This reader interprets an empty `input` buffer as an indication that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":26642,"byte_end":26714,"line_start":584,"line_end":584,"column_start":5,"column_end":77}},{"value":"/ there is no CSV data left to read. Namely, when the caller has","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":26719,"byte_end":26785,"line_start":585,"line_end":585,"column_start":5,"column_end":71}},{"value":"/ exhausted all CSV data, the caller should continue to call `read` with","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":26790,"byte_end":26864,"line_start":586,"line_end":586,"column_start":5,"column_end":79}},{"value":"/ an empty input buffer until `ReadRecordResult::End` is returned.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":26869,"byte_end":26937,"line_start":587,"line_end":587,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":26942,"byte_end":26945,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":26950,"byte_end":26962,"line_start":589,"line_end":589,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":26967,"byte_end":26970,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ This CSV reader can never return an error. Instead, it prefers *a*","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":26975,"byte_end":27045,"line_start":591,"line_end":591,"column_start":5,"column_end":75}},{"value":"/ parse over *no* parse.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":27050,"byte_end":27076,"line_start":592,"line_end":592,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":403},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":74669,"byte_end":74682,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"WriterBuilder","qualname":"::writer::WriterBuilder","value":"WriterBuilder {  }","parent":null,"children":[{"krate":0,"index":404}],"decl_id":null,"docs":" A builder for configuring a CSV writer.","sig":null,"attributes":[{"value":"/ A builder for configuring a CSV writer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":74498,"byte_end":74541,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":74542,"byte_end":74545,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This builder permits specifying the CSV delimiter, terminator, quoting","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":74546,"byte_end":74620,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ style and more.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":74621,"byte_end":74640,"line_start":11,"line_end":11,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":74796,"byte_end":74799,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<WriterBuilder>::new","value":"pub fn new() -> WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" Create a new builder for configuring a CSV writer.\n","sig":null,"attributes":[{"value":"/ Create a new builder for configuring a CSV writer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":74730,"byte_end":74784,"line_start":18,"line_end":18,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":75249,"byte_end":75254,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"build","qualname":"<WriterBuilder>::build","value":"pub fn build(&Self) -> Writer","parent":null,"children":[],"decl_id":null,"docs":" Builder a CSV writer from this configuration.\n","sig":null,"attributes":[{"value":"/ Builder a CSV writer from this configuration.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":75188,"byte_end":75237,"line_start":33,"line_end":33,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":76464,"byte_end":76473,"line_start":65,"line_end":65,"column_start":12,"column_end":21},"name":"delimiter","qualname":"<WriterBuilder>::delimiter","value":"pub fn delimiter(&mut Self, u8) -> &mut WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" The field delimiter to use when writing CSV.","sig":null,"attributes":[{"value":"/ The field delimiter to use when writing CSV.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":76365,"byte_end":76413,"line_start":62,"line_end":62,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":76418,"byte_end":76421,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ The default is `b','`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":76426,"byte_end":76452,"line_start":64,"line_end":64,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":76883,"byte_end":76893,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"terminator","qualname":"<WriterBuilder>::terminator","value":"pub fn terminator(&mut Self, Terminator) -> &mut WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" The record terminator to use when writing CSV.","sig":null,"attributes":[{"value":"/ The record terminator to use when writing CSV.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":76588,"byte_end":76638,"line_start":70,"line_end":70,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":76643,"byte_end":76646,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ A record terminator can be any single byte. The default is `\\n`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":76651,"byte_end":76719,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":76724,"byte_end":76727,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that RFC 4180 specifies that record terminators should be `\\r\\n`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":76732,"byte_end":76806,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ To use `\\r\\n`, use the special `Terminator::CRLF` value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":76811,"byte_end":76871,"line_start":75,"line_end":75,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":77359,"byte_end":77370,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"quote_style","qualname":"<WriterBuilder>::quote_style","value":"pub fn quote_style(&mut Self, QuoteStyle) -> &mut WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" The quoting style to use when writing CSV.","sig":null,"attributes":[{"value":"/ The quoting style to use when writing CSV.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":77001,"byte_end":77047,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":77052,"byte_end":77055,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ By default, this is set to `QuoteStyle::Necessary`, which will only","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":77060,"byte_end":77131,"line_start":83,"line_end":83,"column_start":5,"column_end":76}},{"value":"/ use quotes when they are necessary to preserve the integrity of data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":77136,"byte_end":77209,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":77214,"byte_end":77217,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Note that unless the quote style is set to `Never`, an empty field is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":77222,"byte_end":77295,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ quoted if it is the only field in a record.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":77300,"byte_end":77347,"line_start":87,"line_end":87,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":77586,"byte_end":77591,"line_start":96,"line_end":96,"column_start":12,"column_end":17},"name":"quote","qualname":"<WriterBuilder>::quote","value":"pub fn quote(&mut Self, u8) -> &mut WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" The quote character to use when writing CSV.","sig":null,"attributes":[{"value":"/ The quote character to use when writing CSV.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":77481,"byte_end":77529,"line_start":93,"line_end":93,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":77534,"byte_end":77537,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ The default value is `b'\"'`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":77542,"byte_end":77574,"line_start":95,"line_end":95,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":77874,"byte_end":77880,"line_start":106,"line_end":106,"column_start":12,"column_end":18},"name":"escape","qualname":"<WriterBuilder>::escape","value":"pub fn escape(&mut Self, u8) -> &mut WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" The escape character to use when writing CSV.","sig":null,"attributes":[{"value":"/ The escape character to use when writing CSV.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":77694,"byte_end":77743,"line_start":101,"line_end":101,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":77748,"byte_end":77751,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This is only used when `double_quote` is set to `false`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":77756,"byte_end":77816,"line_start":103,"line_end":103,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":77821,"byte_end":77824,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The default value is `b'\\\\'`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":77829,"byte_end":77862,"line_start":105,"line_end":105,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":78292,"byte_end":78304,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"double_quote","qualname":"<WriterBuilder>::double_quote","value":"pub fn double_quote(&mut Self, bool) -> &mut WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" The quoting escape mechanism to use when writing CSV.","sig":null,"attributes":[{"value":"/ The quoting escape mechanism to use when writing CSV.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":77986,"byte_end":78043,"line_start":111,"line_end":111,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":78048,"byte_end":78051,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ When enabled (which is the default), quotes are escaped by doubling","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":78056,"byte_end":78127,"line_start":113,"line_end":113,"column_start":5,"column_end":76}},{"value":"/ them. e.g., `\"` escapes to `\"\"`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":78132,"byte_end":78168,"line_start":114,"line_end":114,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":78173,"byte_end":78176,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ When disabled, quotes are escaped with the escape character (which","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":78181,"byte_end":78251,"line_start":116,"line_end":116,"column_start":5,"column_end":75}},{"value":"/ is `\\\\` by default).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":78256,"byte_end":78280,"line_start":117,"line_end":117,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":408},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":78974,"byte_end":78984,"line_start":140,"line_end":140,"column_start":5,"column_end":15},"name":"InputEmpty","qualname":"::writer::WriteResult::InputEmpty","value":"WriteResult::InputEmpty","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":" This result occurs when all of the bytes from the given input have\n been processed.\n","sig":null,"attributes":[{"value":"/ This result occurs when all of the bytes from the given input have","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":78875,"byte_end":78945,"line_start":138,"line_end":138,"column_start":5,"column_end":75}},{"value":"/ been processed.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":78950,"byte_end":78969,"line_start":139,"line_end":139,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":410},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":79250,"byte_end":79260,"line_start":145,"line_end":145,"column_start":5,"column_end":15},"name":"OutputFull","qualname":"::writer::WriteResult::OutputFull","value":"WriteResult::OutputFull","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":" This result occurs when the output buffer was too small to process\n all of the input bytes. Generally, this means the caller must call\n the corresponding method again with the rest of the input and more\n room in the output buffer.\n","sig":null,"attributes":[{"value":"/ This result occurs when the output buffer was too small to process","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":78990,"byte_end":79060,"line_start":141,"line_end":141,"column_start":5,"column_end":75}},{"value":"/ all of the input bytes. Generally, this means the caller must call","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":79065,"byte_end":79135,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/ the corresponding method again with the rest of the input and more","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":79140,"byte_end":79210,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ room in the output buffer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":79215,"byte_end":79245,"line_start":144,"line_end":144,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":407},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":78857,"byte_end":78868,"line_start":137,"line_end":137,"column_start":10,"column_end":21},"name":"WriteResult","qualname":"::writer::WriteResult","value":"pub enum WriteResult { InputEmpty, OutputFull, }","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":410}],"decl_id":null,"docs":" The result of writing CSV data.","sig":null,"attributes":[{"value":"/ The result of writing CSV data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":78517,"byte_end":78552,"line_start":130,"line_end":130,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":78553,"byte_end":78556,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ A value of this type is returned from every interaction with `Writer`. It","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":78557,"byte_end":78634,"line_start":132,"line_end":132,"column_start":1,"column_end":78}},{"value":"/ informs the caller how to proceed, namely, by indicating whether more","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":78635,"byte_end":78708,"line_start":133,"line_end":133,"column_start":1,"column_end":74}},{"value":"/ input should be given (`InputEmpty`) or if a bigger output buffer is needed","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":78709,"byte_end":78788,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"/ (`OutputFull`).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":78789,"byte_end":78808,"line_start":135,"line_end":135,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":166},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":79798,"byte_end":79804,"line_start":160,"line_end":160,"column_start":12,"column_end":18},"name":"Writer","qualname":"::writer::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175}],"decl_id":null,"docs":" A writer for CSV data.","sig":null,"attributes":[{"value":"/ A writer for CSV data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":79265,"byte_end":79291,"line_start":148,"line_end":148,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":79292,"byte_end":79295,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ # RFC 4180","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":79296,"byte_end":79310,"line_start":150,"line_end":150,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":79311,"byte_end":79314,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ This writer conforms to RFC 4180 with one exception: it doesn't guarantee","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":79315,"byte_end":79392,"line_start":152,"line_end":152,"column_start":1,"column_end":78}},{"value":"/ that all records written are of the same length. Instead, the onus is on","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":79393,"byte_end":79469,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/ the caller to ensure that all records written are of the same length.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":79470,"byte_end":79543,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":79544,"byte_end":79547,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ Note that the default configuration of a `Writer` uses `\\n` for record","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":79548,"byte_end":79622,"line_start":156,"line_end":156,"column_start":1,"column_end":75}},{"value":"/ terminators instead of `\\r\\n` as specified by RFC 4180. Use the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":79623,"byte_end":79690,"line_start":157,"line_end":157,"column_start":1,"column_end":68}},{"value":"/ `terminator` method on `WriterBuilder` to set the terminator to `\\r\\n` if","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":79691,"byte_end":79768,"line_start":158,"line_end":158,"column_start":1,"column_end":78}},{"value":"/ it's desired.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":79769,"byte_end":79786,"line_start":159,"line_end":159,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":81808,"byte_end":81811,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"new","qualname":"<Writer>::new","value":"pub fn new() -> Writer","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CSV writer with the default configuration.\n","sig":null,"attributes":[{"value":"/ Creates a new CSV writer with the default configuration.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":81736,"byte_end":81796,"line_start":222,"line_end":222,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":82064,"byte_end":82070,"line_start":231,"line_end":231,"column_start":12,"column_end":18},"name":"finish","qualname":"<Writer>::finish","value":"pub fn finish(&mut Self, &mut [u8]) -> (WriteResult, usize)","parent":null,"children":[],"decl_id":null,"docs":" Finish writing CSV data to `output`.","sig":null,"attributes":[{"value":"/ Finish writing CSV data to `output`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":81863,"byte_end":81903,"line_start":227,"line_end":227,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":81908,"byte_end":81911,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This must be called when one is done writing CSV data to `output`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":81916,"byte_end":81986,"line_start":229,"line_end":229,"column_start":5,"column_end":75}},{"value":"/ In particular, it will write closing quotes if necessary.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":81991,"byte_end":82052,"line_start":230,"line_end":230,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":84104,"byte_end":84109,"line_start":279,"line_end":279,"column_start":12,"column_end":17},"name":"field","qualname":"<Writer>::field","value":"pub fn field(&mut Self, &[u8], &mut [u8]) -> (WriteResult, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Write a single CSV field from `input` to `output` while employing this\n writer's quoting style.","sig":null,"attributes":[{"value":"/ Write a single CSV field from `input` to `output` while employing this","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":82913,"byte_end":82987,"line_start":257,"line_end":257,"column_start":5,"column_end":79}},{"value":"/ writer's quoting style.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":82992,"byte_end":83019,"line_start":258,"line_end":258,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":83024,"byte_end":83027,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This returns the result of writing field data, in addition to the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":83032,"byte_end":83101,"line_start":260,"line_end":260,"column_start":5,"column_end":74}},{"value":"/ number of bytes consumed from `input` and the number of bytes","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":83106,"byte_end":83171,"line_start":261,"line_end":261,"column_start":5,"column_end":70}},{"value":"/ written to `output`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":83176,"byte_end":83200,"line_start":262,"line_end":262,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":83205,"byte_end":83208,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The result of writing field data is either `WriteResult::InputEmpty`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":83213,"byte_end":83285,"line_start":264,"line_end":264,"column_start":5,"column_end":77}},{"value":"/ or `WriteResult::OutputFull`. The former occurs when all bytes in","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":83290,"byte_end":83359,"line_start":265,"line_end":265,"column_start":5,"column_end":74}},{"value":"/ `input` were copied to `output`, while the latter occurs when `output`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":83364,"byte_end":83438,"line_start":266,"line_end":266,"column_start":5,"column_end":79}},{"value":"/ is too small to fit everything from `input`. The maximum number of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":83443,"byte_end":83513,"line_start":267,"line_end":267,"column_start":5,"column_end":75}},{"value":"/ bytes that can be written to `output` is `2 + (2 * input.len())`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":83518,"byte_end":83586,"line_start":268,"line_end":268,"column_start":5,"column_end":73}},{"value":"/ because of quoting. (The worst case is a field consisting entirely","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":83591,"byte_end":83661,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/ of quotes.)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":83666,"byte_end":83681,"line_start":270,"line_end":270,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":83686,"byte_end":83689,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Multiple successive calls to `field` will write more data to the same","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":83694,"byte_end":83767,"line_start":272,"line_end":272,"column_start":5,"column_end":78}},{"value":"/ field. Subsequent fields can be written by calling either `delimiter`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":83772,"byte_end":83845,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/ or `terminator` first.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":83850,"byte_end":83876,"line_start":274,"line_end":274,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":83881,"byte_end":83884,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ If this writer's quoting style is `QuoteStyle::Necessary`, then `input`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":83889,"byte_end":83964,"line_start":276,"line_end":276,"column_start":5,"column_end":80}},{"value":"/ should contain the *entire* field. Otherwise, whether the field needs","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":83969,"byte_end":84042,"line_start":277,"line_end":277,"column_start":5,"column_end":78}},{"value":"/ to be quoted or not cannot be determined.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":84047,"byte_end":84092,"line_start":278,"line_end":278,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":85530,"byte_end":85539,"line_start":318,"line_end":318,"column_start":12,"column_end":21},"name":"delimiter","qualname":"<Writer>::delimiter","value":"pub fn delimiter(&mut Self, &mut [u8]) -> (WriteResult, usize)","parent":null,"children":[],"decl_id":null,"docs":" Write the configured field delimiter to `output`.","sig":null,"attributes":[{"value":"/ Write the configured field delimiter to `output`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":85058,"byte_end":85111,"line_start":310,"line_end":310,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":85116,"byte_end":85119,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ If the output buffer does not have enough room to fit","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":85124,"byte_end":85181,"line_start":312,"line_end":312,"column_start":5,"column_end":62}},{"value":"/ a field delimiter, then nothing is written to `output`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":85186,"byte_end":85244,"line_start":313,"line_end":313,"column_start":5,"column_end":63}},{"value":"/ and `WriteResult::OutputFull` is returned. Otherwise,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":85249,"byte_end":85306,"line_start":314,"line_end":314,"column_start":5,"column_end":62}},{"value":"/ `WriteResult::InputEmpty` is returned along with the number of bytes","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":85311,"byte_end":85383,"line_start":315,"line_end":315,"column_start":5,"column_end":77}},{"value":"/ written to `output` (which is `1` in case of an unquoted","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":85388,"byte_end":85448,"line_start":316,"line_end":316,"column_start":5,"column_end":65}},{"value":"/ field, or `2` in case of an end quote and a field separator).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":85453,"byte_end":85518,"line_start":317,"line_end":317,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":86644,"byte_end":86654,"line_start":350,"line_end":350,"column_start":12,"column_end":22},"name":"terminator","qualname":"<Writer>::terminator","value":"pub fn terminator(&mut Self, &mut [u8]) -> (WriteResult, usize)","parent":null,"children":[],"decl_id":null,"docs":" Write the configured record terminator to `output`.","sig":null,"attributes":[{"value":"/ Write the configured record terminator to `output`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":86239,"byte_end":86294,"line_start":343,"line_end":343,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":86299,"byte_end":86302,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ If the output buffer does not have enough room to fit a record","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":86307,"byte_end":86373,"line_start":345,"line_end":345,"column_start":5,"column_end":71}},{"value":"/ terminator, then no part of the terminator is written and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":86378,"byte_end":86439,"line_start":346,"line_end":346,"column_start":5,"column_end":66}},{"value":"/ `WriteResult::OutputFull` is returned. Otherwise,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":86444,"byte_end":86497,"line_start":347,"line_end":347,"column_start":5,"column_end":58}},{"value":"/ `WriteResult::InputEmpty` is returned along with the number of bytes","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":86502,"byte_end":86574,"line_start":348,"line_end":348,"column_start":5,"column_end":77}},{"value":"/ written to `output` (which is always `1` or `2`).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":86579,"byte_end":86632,"line_start":349,"line_end":349,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":89085,"byte_end":89100,"line_start":415,"line_end":415,"column_start":12,"column_end":27},"name":"is_special_byte","qualname":"<Writer>::is_special_byte","value":"pub fn is_special_byte(&Self, u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if the given byte corresponds to a special\n byte in this CSV writer's configuration.","sig":null,"attributes":[{"value":"/ Returns true if and only if the given byte corresponds to a special","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":88840,"byte_end":88911,"line_start":409,"line_end":409,"column_start":5,"column_end":76}},{"value":"/ byte in this CSV writer's configuration.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":88916,"byte_end":88960,"line_start":410,"line_end":410,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":88965,"byte_end":88968,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ Note that this does **not** take into account this writer's quoting","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":88973,"byte_end":89044,"line_start":412,"line_end":412,"column_start":5,"column_end":76}},{"value":"/ style.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":89049,"byte_end":89059,"line_start":413,"line_end":413,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":89064,"byte_end":89073,"line_start":414,"line_end":414,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":89331,"byte_end":89343,"line_start":422,"line_end":422,"column_start":12,"column_end":24},"name":"should_quote","qualname":"<Writer>::should_quote","value":"pub fn should_quote(&Self, &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if we should put the given field data\n in quotes. This takes the quoting style into account.\n","sig":null,"attributes":[{"value":"/ Returns true if and only if we should put the given field data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":89177,"byte_end":89243,"line_start":419,"line_end":419,"column_start":5,"column_end":71}},{"value":"/ in quotes. This takes the quoting style into account.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":89248,"byte_end":89305,"line_start":420,"line_end":420,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":89310,"byte_end":89319,"line_start":421,"line_end":421,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":89732,"byte_end":89745,"line_start":434,"line_end":434,"column_start":12,"column_end":25},"name":"get_delimiter","qualname":"<Writer>::get_delimiter","value":"pub fn get_delimiter(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the delimiter used for this writer.\n","sig":null,"attributes":[{"value":"/ Return the delimiter used for this writer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":89660,"byte_end":89706,"line_start":432,"line_end":432,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":89711,"byte_end":89720,"line_start":433,"line_end":433,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":89868,"byte_end":89882,"line_start":440,"line_end":440,"column_start":12,"column_end":26},"name":"get_terminator","qualname":"<Writer>::get_terminator","value":"pub fn get_terminator(&Self) -> Terminator","parent":null,"children":[],"decl_id":null,"docs":" Return the terminator used for this writer.\n","sig":null,"attributes":[{"value":"/ Return the terminator used for this writer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":89795,"byte_end":89842,"line_start":438,"line_end":438,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":89847,"byte_end":89856,"line_start":439,"line_end":439,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":90011,"byte_end":90026,"line_start":446,"line_end":446,"column_start":12,"column_end":27},"name":"get_quote_style","qualname":"<Writer>::get_quote_style","value":"pub fn get_quote_style(&Self) -> QuoteStyle","parent":null,"children":[],"decl_id":null,"docs":" Return the quoting style used for this writer.\n","sig":null,"attributes":[{"value":"/ Return the quoting style used for this writer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":89935,"byte_end":89985,"line_start":444,"line_end":444,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":89990,"byte_end":89999,"line_start":445,"line_end":445,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":90158,"byte_end":90167,"line_start":452,"line_end":452,"column_start":12,"column_end":21},"name":"get_quote","qualname":"<Writer>::get_quote","value":"pub fn get_quote(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the quote character used for this writer.\n","sig":null,"attributes":[{"value":"/ Return the quote character used for this writer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":90080,"byte_end":90132,"line_start":450,"line_end":450,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":90137,"byte_end":90146,"line_start":451,"line_end":451,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":90292,"byte_end":90302,"line_start":458,"line_end":458,"column_start":12,"column_end":22},"name":"get_escape","qualname":"<Writer>::get_escape","value":"pub fn get_escape(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the escape character used for this writer.\n","sig":null,"attributes":[{"value":"/ Return the escape character used for this writer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":90213,"byte_end":90266,"line_start":456,"line_end":456,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":90271,"byte_end":90280,"line_start":457,"line_end":457,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":90524,"byte_end":90540,"line_start":465,"line_end":465,"column_start":12,"column_end":28},"name":"get_double_quote","qualname":"<Writer>::get_double_quote","value":"pub fn get_double_quote(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return whether this writer doubles quotes or not. When the writer\n does not double quotes, it will escape them using the escape character.\n","sig":null,"attributes":[{"value":"/ Return whether this writer doubles quotes or not. When the writer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":90349,"byte_end":90418,"line_start":462,"line_end":462,"column_start":5,"column_end":74}},{"value":"/ does not double quotes, it will escape them using the escape character.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":90423,"byte_end":90498,"line_start":463,"line_end":463,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":90503,"byte_end":90512,"line_start":464,"line_end":464,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":202},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":91210,"byte_end":91224,"line_start":492,"line_end":492,"column_start":8,"column_end":22},"name":"is_non_numeric","qualname":"::writer::is_non_numeric","value":"pub fn is_non_numeric(&[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if the given input is non-numeric.\n","sig":null,"attributes":[{"value":"/ Returns true if and only if the given input is non-numeric.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":91139,"byte_end":91202,"line_start":491,"line_end":491,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":203},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":92790,"byte_end":92795,"line_start":527,"line_end":527,"column_start":8,"column_end":13},"name":"quote","qualname":"::writer::quote","value":"pub fn quote(&[u8], &mut [u8], u8, u8, bool) -> (WriteResult, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Escape quotes `input` and writes the result to `output`.","sig":null,"attributes":[{"value":"/ Escape quotes `input` and writes the result to `output`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":91598,"byte_end":91658,"line_start":503,"line_end":503,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":91659,"byte_end":91662,"line_start":504,"line_end":504,"column_start":1,"column_end":4}},{"value":"/ If `input` does not have a `quote`, then the contents of `input` are","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":91663,"byte_end":91735,"line_start":505,"line_end":505,"column_start":1,"column_end":73}},{"value":"/ copied verbatim to `output`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":91736,"byte_end":91768,"line_start":506,"line_end":506,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":91769,"byte_end":91772,"line_start":507,"line_end":507,"column_start":1,"column_end":4}},{"value":"/ If `output` is not big enough to store the fully quoted contents of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":91773,"byte_end":91844,"line_start":508,"line_end":508,"column_start":1,"column_end":72}},{"value":"/ `input`, then `WriteResult::OutputFull` is returned. The `output` buffer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":91845,"byte_end":91921,"line_start":509,"line_end":509,"column_start":1,"column_end":77}},{"value":"/ will require a maximum of storage of `2 * input.len()` in the worst case","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":91922,"byte_end":91998,"line_start":510,"line_end":510,"column_start":1,"column_end":77}},{"value":"/ (where every byte is a quote).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":91999,"byte_end":92033,"line_start":511,"line_end":511,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":92034,"byte_end":92037,"line_start":512,"line_end":512,"column_start":1,"column_end":4}},{"value":"/ In streaming contexts, `quote` should be called in a loop until","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":92038,"byte_end":92105,"line_start":513,"line_end":513,"column_start":1,"column_end":68}},{"value":"/ `WriteResult::InputEmpty` is returned. It is possible to write an infinite","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":92106,"byte_end":92184,"line_start":514,"line_end":514,"column_start":1,"column_end":79}},{"value":"/ loop if your output buffer is less than 2 bytes in length (the minimum","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":92185,"byte_end":92259,"line_start":515,"line_end":515,"column_start":1,"column_end":75}},{"value":"/ storage space required to store an escaped quote).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":92260,"byte_end":92314,"line_start":516,"line_end":516,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":92315,"byte_end":92318,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"/ In addition to the `WriteResult`, the number of consumed bytes from `input`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":92319,"byte_end":92398,"line_start":518,"line_end":518,"column_start":1,"column_end":80}},{"value":"/ and the number of bytes written to `output` are also returned.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":92399,"byte_end":92465,"line_start":519,"line_end":519,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":92466,"byte_end":92469,"line_start":520,"line_end":520,"column_start":1,"column_end":4}},{"value":"/ `quote` is the quote byte and `escape` is the escape byte. If","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":92470,"byte_end":92535,"line_start":521,"line_end":521,"column_start":1,"column_end":66}},{"value":"/ `double_quote` is true, then quotes are escaped by doubling them,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":92536,"byte_end":92605,"line_start":522,"line_end":522,"column_start":1,"column_end":70}},{"value":"/ otherwise, quotes are escaped with the `escape` byte.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":92606,"byte_end":92663,"line_start":523,"line_end":523,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":92664,"byte_end":92667,"line_start":524,"line_end":524,"column_start":1,"column_end":4}},{"value":"/ N.B. This function is provided for low level usage. It is called","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":92668,"byte_end":92736,"line_start":525,"line_end":525,"column_start":1,"column_end":69}},{"value":"/ automatically if you're using a `Writer`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":92737,"byte_end":92782,"line_start":526,"line_end":526,"column_start":1,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":431},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":3238,"byte_end":3242,"line_start":120,"line_end":120,"column_start":5,"column_end":9},"name":"CRLF","qualname":"::Terminator::CRLF","value":"Terminator::CRLF","parent":{"krate":0,"index":430},"children":[],"decl_id":null,"docs":" Parses `\\r`, `\\n` or `\\r\\n` as a single record terminator.\n","sig":null,"attributes":[{"value":"/ Parses `\\r`, `\\n` or `\\r\\n` as a single record terminator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":3171,"byte_end":3233,"line_start":119,"line_end":119,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":433},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":3302,"byte_end":3305,"line_start":122,"line_end":122,"column_start":5,"column_end":8},"name":"Any","qualname":"::Terminator::Any","value":"Terminator::Any(u8)","parent":{"krate":0,"index":430},"children":[],"decl_id":null,"docs":" Parses the byte given as a record terminator.\n","sig":null,"attributes":[{"value":"/ Parses the byte given as a record terminator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":3248,"byte_end":3297,"line_start":121,"line_end":121,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":436},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":3589,"byte_end":3604,"line_start":129,"line_end":129,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::Terminator::__Nonexhaustive","value":"Terminator::__Nonexhaustive","parent":{"krate":0,"index":430},"children":[],"decl_id":null,"docs":" Hints that destructuring should not be exhaustive.","sig":null,"attributes":[{"value":"/ Hints that destructuring should not be exhaustive.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":3315,"byte_end":3369,"line_start":123,"line_end":123,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":3374,"byte_end":3377,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This enum may grow additional variants, so this makes sure clients","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":3382,"byte_end":3452,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"/ don't count on exhaustive matching. (Otherwise, adding a new variant","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":3457,"byte_end":3529,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ could break existing code.)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":3534,"byte_end":3565,"line_start":127,"line_end":127,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":430},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":3154,"byte_end":3164,"line_start":118,"line_end":118,"column_start":10,"column_end":20},"name":"Terminator","qualname":"::Terminator","value":"pub enum Terminator { CRLF, Any(u8), __Nonexhaustive, }","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":436}],"decl_id":null,"docs":" A record terminator.","sig":null,"attributes":[{"value":"/ A record terminator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":2931,"byte_end":2955,"line_start":113,"line_end":113,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":2956,"byte_end":2959,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Use this to specify the record terminator while parsing CSV. The default is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":2960,"byte_end":3039,"line_start":115,"line_end":115,"column_start":1,"column_end":80}},{"value":"/ CRLF, which treats `\\r`, `\\n` or `\\r\\n` as a single record terminator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":3040,"byte_end":3114,"line_start":116,"line_end":116,"column_start":1,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":444},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":4350,"byte_end":4356,"line_start":161,"line_end":161,"column_start":5,"column_end":11},"name":"Always","qualname":"::QuoteStyle::Always","value":"QuoteStyle::Always","parent":{"krate":0,"index":443},"children":[],"decl_id":null,"docs":" This puts quotes around every field. Always.\n","sig":null,"attributes":[{"value":"/ This puts quotes around every field. Always.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":4297,"byte_end":4345,"line_start":160,"line_end":160,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":446},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":4691,"byte_end":4700,"line_start":169,"line_end":169,"column_start":5,"column_end":14},"name":"Necessary","qualname":"::QuoteStyle::Necessary","value":"QuoteStyle::Necessary","parent":{"krate":0,"index":443},"children":[],"decl_id":null,"docs":" This puts quotes around fields only when necessary.","sig":null,"attributes":[{"value":"/ This puts quotes around fields only when necessary.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":4362,"byte_end":4417,"line_start":162,"line_end":162,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":4422,"byte_end":4425,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ They are necessary when fields contain a quote, delimiter or record","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":4430,"byte_end":4501,"line_start":164,"line_end":164,"column_start":5,"column_end":76}},{"value":"/ terminator. Quotes are also necessary when writing an empty record","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":4506,"byte_end":4576,"line_start":165,"line_end":165,"column_start":5,"column_end":75}},{"value":"/ (which is indistinguishable from a record with one empty field).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":4581,"byte_end":4649,"line_start":166,"line_end":166,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":4654,"byte_end":4657,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This is the default.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":4662,"byte_end":4686,"line_start":168,"line_end":168,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":448},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":4930,"byte_end":4940,"line_start":173,"line_end":173,"column_start":5,"column_end":15},"name":"NonNumeric","qualname":"::QuoteStyle::NonNumeric","value":"QuoteStyle::NonNumeric","parent":{"krate":0,"index":443},"children":[],"decl_id":null,"docs":" This puts quotes around all fields that are non-numeric. Namely, when\n writing a field that does not parse as a valid float or integer, then\n quotes will be used even if they aren't strictly necessary.\n","sig":null,"attributes":[{"value":"/ This puts quotes around all fields that are non-numeric. Namely, when","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":4706,"byte_end":4779,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ writing a field that does not parse as a valid float or integer, then","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":4784,"byte_end":4857,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ quotes will be used even if they aren't strictly necessary.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":4862,"byte_end":4925,"line_start":172,"line_end":172,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":450},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":5025,"byte_end":5030,"line_start":175,"line_end":175,"column_start":5,"column_end":10},"name":"Never","qualname":"::QuoteStyle::Never","value":"QuoteStyle::Never","parent":{"krate":0,"index":443},"children":[],"decl_id":null,"docs":" This *never* writes quotes, even if it would produce invalid CSV data.\n","sig":null,"attributes":[{"value":"/ This *never* writes quotes, even if it would produce invalid CSV data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":4946,"byte_end":5020,"line_start":174,"line_end":174,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":452},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":5310,"byte_end":5325,"line_start":182,"line_end":182,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::QuoteStyle::__Nonexhaustive","value":"QuoteStyle::__Nonexhaustive","parent":{"krate":0,"index":443},"children":[],"decl_id":null,"docs":" Hints that destructuring should not be exhaustive.","sig":null,"attributes":[{"value":"/ Hints that destructuring should not be exhaustive.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":5036,"byte_end":5090,"line_start":176,"line_end":176,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":5095,"byte_end":5098,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This enum may grow additional variants, so this makes sure clients","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":5103,"byte_end":5173,"line_start":178,"line_end":178,"column_start":5,"column_end":75}},{"value":"/ don't count on exhaustive matching. (Otherwise, adding a new variant","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":5178,"byte_end":5250,"line_start":179,"line_end":179,"column_start":5,"column_end":77}},{"value":"/ could break existing code.)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":5255,"byte_end":5286,"line_start":180,"line_end":180,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":443},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":4280,"byte_end":4290,"line_start":159,"line_end":159,"column_start":10,"column_end":20},"name":"QuoteStyle","qualname":"::QuoteStyle","value":"pub enum QuoteStyle { Always, Necessary, NonNumeric, Never, __Nonexhaustive, }","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":452}],"decl_id":null,"docs":" The quoting style to use when writing CSV data.\n","sig":null,"attributes":[{"value":"/ The quoting style to use when writing CSV data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":4189,"byte_end":4240,"line_start":157,"line_end":157,"column_start":1,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":11448,"byte_end":11454,"line_start":131,"line_end":131,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":12269,"byte_end":12282,"line_start":162,"line_end":162,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":16233,"byte_end":16248,"line_start":285,"line_end":285,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":18398,"byte_end":18414,"line_start":354,"line_end":354,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":21452,"byte_end":21460,"line_start":455,"line_end":455,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":22036,"byte_end":22042,"line_start":476,"line_end":476,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":47752,"byte_end":47755,"line_start":1130,"line_end":1130,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":50828,"byte_end":50838,"line_start":1231,"line_end":1231,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":52678,"byte_end":52686,"line_start":1286,"line_end":1286,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":52827,"byte_end":52830,"line_start":1296,"line_end":1296,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":52951,"byte_end":52961,"line_start":1302,"line_end":1302,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":53179,"byte_end":53182,"line_start":1312,"line_end":1312,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":53332,"byte_end":53342,"line_start":1320,"line_end":1320,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":74710,"byte_end":74723,"line_start":17,"line_end":17,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":78427,"byte_end":78440,"line_start":124,"line_end":124,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":80002,"byte_end":80008,"line_start":171,"line_end":171,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":80534,"byte_end":80540,"line_start":190,"line_end":190,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":81723,"byte_end":81729,"line_start":221,"line_end":221,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":90908,"byte_end":90914,"line_start":479,"line_end":479,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":91009,"byte_end":91020,"line_start":485,"line_end":485,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":3614,"byte_end":3624,"line_start":132,"line_end":132,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":4109,"byte_end":4119,"line_start":151,"line_end":151,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":5347,"byte_end":5357,"line_start":185,"line_end":185,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":11448,"byte_end":11454,"line_start":131,"line_end":131,"column_start":18,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":215},"to":{"krate":1,"index":2810}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":12269,"byte_end":12282,"line_start":162,"line_end":162,"column_start":6,"column_end":19},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":16233,"byte_end":16248,"line_start":285,"line_end":285,"column_start":6,"column_end":21},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":18398,"byte_end":18414,"line_start":354,"line_end":354,"column_start":6,"column_end":22},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":21452,"byte_end":21460,"line_start":455,"line_end":455,"column_start":6,"column_end":14},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":22036,"byte_end":22042,"line_start":476,"line_end":476,"column_start":6,"column_end":12},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":47752,"byte_end":47755,"line_start":1130,"line_end":1130,"column_start":6,"column_end":9},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":93},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":50828,"byte_end":50838,"line_start":1231,"line_end":1231,"column_start":6,"column_end":16},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":52678,"byte_end":52686,"line_start":1286,"line_end":1286,"column_start":6,"column_end":14},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":52827,"byte_end":52830,"line_start":1296,"line_end":1296,"column_start":21,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":93},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":52951,"byte_end":52961,"line_start":1302,"line_end":1302,"column_start":21,"column_end":31},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":115},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":53179,"byte_end":53182,"line_start":1312,"line_end":1312,"column_start":16,"column_end":19},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":93},"to":{"krate":1,"index":2457}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/reader.rs","byte_start":53332,"byte_end":53342,"line_start":1320,"line_end":1320,"column_start":16,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":115},"to":{"krate":1,"index":2457}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":74710,"byte_end":74723,"line_start":17,"line_end":17,"column_start":6,"column_end":19},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":78427,"byte_end":78440,"line_start":124,"line_end":124,"column_start":18,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":403},"to":{"krate":1,"index":2810}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":80002,"byte_end":80008,"line_start":171,"line_end":171,"column_start":16,"column_end":22},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":166},"to":{"krate":1,"index":2457}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":80534,"byte_end":80540,"line_start":190,"line_end":190,"column_start":21,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":166},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":81723,"byte_end":81729,"line_start":221,"line_end":221,"column_start":6,"column_end":12},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":90908,"byte_end":90914,"line_start":479,"line_end":479,"column_start":18,"column_end":24},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":166},"to":{"krate":1,"index":2810}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/writer.rs","byte_start":91009,"byte_end":91020,"line_start":485,"line_end":485,"column_start":18,"column_end":29},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":422},"to":{"krate":1,"index":2810}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":3614,"byte_end":3624,"line_start":132,"line_end":132,"column_start":6,"column_end":16},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":4109,"byte_end":4119,"line_start":151,"line_end":151,"column_start":18,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":430},"to":{"krate":1,"index":2810}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-core-0.1.10/src/lib.rs","byte_start":5347,"byte_end":5357,"line_start":185,"line_end":185,"column_start":18,"column_end":28},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":443},"to":{"krate":1,"index":2810}}]}